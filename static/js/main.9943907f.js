/*! For license information please see main.9943907f.js.LICENSE.txt */
(()=>{var t={757:function(t){"undefined"!=typeof self&&self,t.exports=function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var a={};function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}n.r(a),n.d(a,"VictoryGesture",(function(){return S})),n.d(a,"ThumbsUpGesture",(function(){return F}));var s={Thumb:0,Index:1,Middle:2,Ring:3,Pinky:4,all:[0,1,2,3,4],nameMapping:{0:"Thumb",1:"Index",2:"Middle",3:"Ring",4:"Pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:function(t){return void 0!==r(this.nameMapping[t])&&this.nameMapping[t]},getPoints:function(t){return void 0!==r(this.pointsMapping[t])&&this.pointsMapping[t]}},o={NoCurl:0,HalfCurl:1,FullCurl:2,nameMapping:{0:"No Curl",1:"Half Curl",2:"Full Curl"},getName:function(t){return void 0!==r(this.nameMapping[t])&&this.nameMapping[t]}},i={VerticalUp:0,VerticalDown:1,HorizontalLeft:2,HorizontalRight:3,DiagonalUpRight:4,DiagonalUpLeft:5,DiagonalDownRight:6,DiagonalDownLeft:7,nameMapping:{0:"Vertical Up",1:"Vertical Down",2:"Horizontal Left",3:"Horizontal Right",4:"Diagonal Up Right",5:"Diagonal Up Left",6:"Diagonal Down Right",7:"Diagonal Down Left"},getName:function(t){return void 0!==r(this.nameMapping[t])&&this.nameMapping[t]}};function c(t){if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=function(t,e){if(t){if("string"==typeof t)return l(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(t,e):void 0}}(t))){var e=0,n=function(){};return{s:n,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,s=!0,o=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return s=t.done,t},e:function(t){o=!0,r=t},f:function(){try{s||null==a.return||a.return()}finally{if(o)throw r}}}}function l(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function h(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function d(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}var p=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){h(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},{HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6},{},e)}var e,n,a;return e=t,(n=[{key:"estimate",value:function(t){var e,n=[],a=[],r=c(s.all);try{for(r.s();!(e=r.n()).done;){var o,i=e.value,l=s.getPoints(i),u=[],h=[],d=c(l);try{for(d.s();!(o=d.n()).done;){var p=o.value,f=t[p[0]],m=t[p[1]],g=this.getSlopes(f,m),y=g[0],b=g[1];u.push(y),h.push(b)}}catch(t){d.e(t)}finally{d.f()}n.push(u),a.push(h)}}catch(t){r.e(t)}finally{r.f()}var x,v=[],w=[],k=c(s.all);try{for(k.s();!(x=k.n()).done;){var I=x.value,N=I==s.Thumb?1:0,T=s.getPoints(I),S=t[T[N][0]],C=t[T[N+1][1]],E=t[T[3][1]],A=this.estimateFingerCurl(S,C,E),R=this.calculateFingerDirection(S,C,E,n[I].slice(N));v[I]=A,w[I]=R}}catch(t){k.e(t)}finally{k.f()}return{curls:v,directions:w}}},{key:"getSlopes",value:function(t,e){var n=this.calculateSlope(t[0],t[1],e[0],e[1]);return 2==t.length?n:[n,this.calculateSlope(t[1],t[2],e[1],e[2])]}},{key:"angleOrientationAt",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=0,a=0,r=0;return t>=75&&t<=105?n=1*e:t>=25&&t<=155?a=1*e:r=1*e,[n,a,r]}},{key:"estimateFingerCurl",value:function(t,e,n){var a=t[0]-e[0],r=t[0]-n[0],s=e[0]-n[0],i=t[1]-e[1],c=t[1]-n[1],l=e[1]-n[1],u=t[2]-e[2],h=t[2]-n[2],d=e[2]-n[2],p=Math.sqrt(a*a+i*i+u*u),f=Math.sqrt(r*r+c*c+h*h),m=Math.sqrt(s*s+l*l+d*d),g=(m*m+p*p-f*f)/(2*m*p);g>1?g=1:g<-1&&(g=-1);var y=Math.acos(g);return(y=57.2958*y%180)>this.options.NO_CURL_START_LIMIT?o.NoCurl:y>this.options.HALF_CURL_START_LIMIT?o.HalfCurl:o.FullCurl}},{key:"estimateHorizontalDirection",value:function(t,e,n,a){return a==Math.abs(t)?t>0?i.HorizontalLeft:i.HorizontalRight:a==Math.abs(e)?e>0?i.HorizontalLeft:i.HorizontalRight:n>0?i.HorizontalLeft:i.HorizontalRight}},{key:"estimateVerticalDirection",value:function(t,e,n,a){return a==Math.abs(t)?t<0?i.VerticalDown:i.VerticalUp:a==Math.abs(e)?e<0?i.VerticalDown:i.VerticalUp:n<0?i.VerticalDown:i.VerticalUp}},{key:"estimateDiagonalDirection",value:function(t,e,n,a,r,s,o,c){var l=this.estimateVerticalDirection(t,e,n,a),u=this.estimateHorizontalDirection(r,s,o,c);return l==i.VerticalUp?u==i.HorizontalLeft?i.DiagonalUpLeft:i.DiagonalUpRight:u==i.HorizontalLeft?i.DiagonalDownLeft:i.DiagonalDownRight}},{key:"calculateFingerDirection",value:function(t,e,n,a){var r=t[0]-e[0],s=t[0]-n[0],o=e[0]-n[0],i=t[1]-e[1],l=t[1]-n[1],u=e[1]-n[1],h=Math.max(Math.abs(r),Math.abs(s),Math.abs(o)),d=Math.max(Math.abs(i),Math.abs(l),Math.abs(u)),p=0,f=0,m=0,g=d/(h+1e-5);g>1.5?p+=this.options.DISTANCE_VOTE_POWER:g>.66?f+=this.options.DISTANCE_VOTE_POWER:m+=this.options.DISTANCE_VOTE_POWER;var y=Math.sqrt(r*r+i*i),b=Math.sqrt(s*s+l*l),x=Math.sqrt(o*o+u*u),v=Math.max(y,b,x),w=t[0],k=t[1],I=n[0],N=n[1];v==y?(I=n[0],N=n[1]):v==x&&(w=e[0],k=e[1]);var T=[w,k],S=[I,N],C=this.getSlopes(T,S),E=this.angleOrientationAt(C,this.options.TOTAL_ANGLE_VOTE_POWER);p+=E[0],f+=E[1],m+=E[2];var A,R=c(a);try{for(R.s();!(A=R.n()).done;){var F=A.value,D=this.angleOrientationAt(F,this.options.SINGLE_ANGLE_VOTE_POWER);p+=D[0],f+=D[1],m+=D[2]}}catch(t){R.e(t)}finally{R.f()}return p==Math.max(p,f,m)?this.estimateVerticalDirection(l,i,u,d):m==Math.max(f,m)?this.estimateHorizontalDirection(s,r,o,h):this.estimateDiagonalDirection(l,i,u,d,s,r,o,h)}},{key:"calculateSlope",value:function(t,e,n,a){var r=(e-a)/(t-n),s=180*Math.atan(r)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}}])&&d(e.prototype,n),a&&d(e,a),t}();function f(t){if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=function(t,e){if(t){if("string"==typeof t)return m(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(t,e):void 0}}(t))){var e=0,n=function(){};return{s:n,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,s=!0,o=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return s=t.done,t},e:function(t){o=!0,r=t},f:function(){try{s||null==a.return||a.return()}finally{if(o)throw r}}}}function m(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}function g(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}var b=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};g(this,t),this.estimator=new p(n),this.gestures=e}var e,n,a;return e=t,(n=[{key:"estimate",value:function(t,e){var n,a=[],r=this.estimator.estimate(t),c=[],l=f(s.all);try{for(l.s();!(n=l.n()).done;){var u=n.value;c.push([s.getName(u),o.getName(r.curls[u]),i.getName(r.directions[u])])}}catch(t){l.e(t)}finally{l.f()}var h,d=f(this.gestures);try{for(d.s();!(h=d.n()).done;){var p=h.value,m=p.matchAgainst(r.curls,r.directions);m>=e&&a.push({name:p.name,confidence:m})}}catch(t){d.e(t)}finally{d.f()}return{poseData:c,gestures:a}}}])&&y(e.prototype,n),a&&y(e,a),t}();function x(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var n=[],a=!0,r=!1,s=void 0;try{for(var o,i=t[Symbol.iterator]();!(a=(o=i.next()).done)&&(n.push(o.value),!e||n.length!==e);a=!0);}catch(t){r=!0,s=t}finally{try{a||null==i.return||i.return()}finally{if(r)throw s}}return n}}(t,e)||w(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(t){if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=w(t))){var e=0,n=function(){};return{s:n,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,r,s=!0,o=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return s=t.done,t},e:function(t){o=!0,r=t},f:function(){try{s||null==a.return||a.return()}finally{if(o)throw r}}}}function w(t,e){if(t){if("string"==typeof t)return k(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?k(t,e):void 0}}function k(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}function I(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}var N=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}var e,n,a;return e=t,(n=[{key:"addCurl",value:function(t,e,n){void 0===this.curls[t]&&(this.curls[t]=[]),this.curls[t].push([e,n])}},{key:"addDirection",value:function(t,e,n){void 0===this.directions[t]&&(this.directions[t]=[]),this.directions[t].push([e,n])}},{key:"setWeight",value:function(t,e){this.weights[t]=e;var n=this.weights.reduce((function(t,e){return t+e}),0);this.weightsRelative=this.weights.map((function(t){return 5*t/n}))}},{key:"matchAgainst",value:function(t,e){var n=0;for(var a in t){var r=t[a],s=this.curls[a];if(void 0!==s){var o,i=v(s);try{for(i.s();!(o=i.n()).done;){var c=x(o.value,2),l=c[0],u=c[1];if(r==l){n+=u*this.weightsRelative[a];break}}}catch(t){i.e(t)}finally{i.f()}}else n+=this.weightsRelative[a]}for(var h in e){var d=e[h],p=this.directions[h];if(void 0!==p){var f,m=v(p);try{for(m.s();!(f=m.n()).done;){var g=x(f.value,2),y=g[0],b=g[1];if(d==y){n+=b*this.weightsRelative[h];break}}}catch(t){m.e(t)}finally{m.f()}}else n+=this.weightsRelative[h]}return n}}])&&I(e.prototype,n),a&&I(e,a),t}(),T=new N("victory");T.addCurl(s.Thumb,o.HalfCurl,.5),T.addCurl(s.Thumb,o.NoCurl,.5),T.addDirection(s.Thumb,i.VerticalUp,1),T.addDirection(s.Thumb,i.DiagonalUpLeft,1),T.addCurl(s.Index,o.NoCurl,1),T.addDirection(s.Index,i.VerticalUp,.75),T.addDirection(s.Index,i.DiagonalUpLeft,1),T.addCurl(s.Middle,o.NoCurl,1),T.addDirection(s.Middle,i.VerticalUp,1),T.addDirection(s.Middle,i.DiagonalUpLeft,.75),T.addCurl(s.Ring,o.FullCurl,1),T.addDirection(s.Ring,i.VerticalUp,.2),T.addDirection(s.Ring,i.DiagonalUpLeft,1),T.addDirection(s.Ring,i.HorizontalLeft,.2),T.addCurl(s.Pinky,o.FullCurl,1),T.addDirection(s.Pinky,i.VerticalUp,.2),T.addDirection(s.Pinky,i.DiagonalUpLeft,1),T.addDirection(s.Pinky,i.HorizontalLeft,.2),T.setWeight(s.Index,2),T.setWeight(s.Middle,2);var S=T,C=new N("thumbs_up");C.addCurl(s.Thumb,o.NoCurl,1),C.addDirection(s.Thumb,i.VerticalUp,1),C.addDirection(s.Thumb,i.DiagonalUpLeft,.25),C.addDirection(s.Thumb,i.DiagonalUpRight,.25);for(var E=0,A=[s.Index,s.Middle,s.Ring,s.Pinky];E<A.length;E++){var R=A[E];C.addCurl(R,o.FullCurl,1),C.addDirection(R,i.HorizontalLeft,1),C.addDirection(R,i.HorizontalRight,1)}var F=C;e.default={GestureEstimator:b,GestureDescription:N,Finger:s,FingerCurl:o,FingerDirection:i,Gestures:a}}]).default},123:t=>{"use strict";var e=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(t){a[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(t,r){for(var s,o,i=function(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}(t),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))n.call(s,l)&&(i[l]=s[l]);if(e){o=e(s);for(var u=0;u<o.length;u++)a.call(s,o[u])&&(i[o[u]]=s[o[u]])}}return i}},730:(t,e,n)=>{"use strict";var a=n(43),r=n(123),s=n(853);function o(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!a)throw Error(o(227));function i(t,e,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{e.apply(n,l)}catch(u){this.onError(u)}}var c=!1,l=null,u=!1,h=null,d={onError:function(t){c=!0,l=t}};function p(t,e,n,a,r,s,o,u,h){c=!1,l=null,i.apply(d,arguments)}var f=null,m=null,g=null;function y(t,e,n){var a=t.type||"unknown-event";t.currentTarget=g(n),function(t,e,n,a,r,s,i,d,f){if(p.apply(this,arguments),c){if(!c)throw Error(o(198));var m=l;c=!1,l=null,u||(u=!0,h=m)}}(a,e,void 0,t),t.currentTarget=null}var b=null,x={};function v(){if(b)for(var t in x){var e=x[t],n=b.indexOf(t);if(!(-1<n))throw Error(o(96,t));if(!k[n]){if(!e.extractEvents)throw Error(o(97,t));for(var a in k[n]=e,n=e.eventTypes){var r=void 0,s=n[a],i=e,c=a;if(I.hasOwnProperty(c))throw Error(o(99,c));I[c]=s;var l=s.phasedRegistrationNames;if(l){for(r in l)l.hasOwnProperty(r)&&w(l[r],i,c);r=!0}else s.registrationName?(w(s.registrationName,i,c),r=!0):r=!1;if(!r)throw Error(o(98,a,t))}}}}function w(t,e,n){if(N[t])throw Error(o(100,t));N[t]=e,T[t]=e.eventTypes[n].dependencies}var k=[],I={},N={},T={};function S(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var a=t[e];if(!x.hasOwnProperty(e)||x[e]!==a){if(x[e])throw Error(o(102,e));x[e]=a,n=!0}}n&&v()}var C=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),E=null,A=null,R=null;function F(t){if(t=m(t)){if("function"!==typeof E)throw Error(o(280));var e=t.stateNode;e&&(e=f(e),E(t.stateNode,t.type,e))}}function D(t){A?R?R.push(t):R=[t]:A=t}function _(){if(A){var t=A,e=R;if(R=A=null,F(t),e)for(t=0;t<e.length;t++)F(e[t])}}function O(t,e){return t(e)}function M(t,e,n,a,r){return t(e,n,a,r)}function L(){}var z=O,P=!1,B=!1;function W(){null===A&&null===R||(L(),_())}function V(t,e,n){if(B)return t(e,n);B=!0;try{return z(t,e,n)}finally{B=!1,W()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,G=Object.prototype.hasOwnProperty,H={},j={};function K(t,e,n,a,r,s){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=s}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){q[t]=new K(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];q[e]=new K(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){q[t]=new K(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){q[t]=new K(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){q[t]=new K(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){q[t]=new K(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){q[t]=new K(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){q[t]=new K(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){q[t]=new K(t,5,!1,t.toLowerCase(),null,!1)}));var X=/[\-:]([a-z])/g;function Y(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(X,Y);q[e]=new K(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(X,Y);q[e]=new K(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(X,Y);q[e]=new K(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){q[t]=new K(t,1,!1,t.toLowerCase(),null,!1)})),q.xlinkHref=new K("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){q[t]=new K(t,1,!1,t.toLowerCase(),null,!0)}));var Q=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function J(t,e,n,a){var r=q.hasOwnProperty(e)?q[e]:null;(null!==r?0===r.type:!a&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,a){if(null===e||"undefined"===typeof e||function(t,e,n,a){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,r,a)&&(n=null),a||null===r?function(t){return!!G.call(j,t)||!G.call(H,t)&&(U.test(t)?j[t]=!0:(H[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):r.mustUseProperty?t[r.propertyName]=null===n?3!==r.type&&"":n:(e=r.attributeName,a=r.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?t.setAttributeNS(a,e,n):t.setAttribute(e,n))))}Q.hasOwnProperty("ReactCurrentDispatcher")||(Q.ReactCurrentDispatcher={current:null}),Q.hasOwnProperty("ReactCurrentBatchConfig")||(Q.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,$="function"===typeof Symbol&&Symbol.for,tt=$?Symbol.for("react.element"):60103,et=$?Symbol.for("react.portal"):60106,nt=$?Symbol.for("react.fragment"):60107,at=$?Symbol.for("react.strict_mode"):60108,rt=$?Symbol.for("react.profiler"):60114,st=$?Symbol.for("react.provider"):60109,ot=$?Symbol.for("react.context"):60110,it=$?Symbol.for("react.concurrent_mode"):60111,ct=$?Symbol.for("react.forward_ref"):60112,lt=$?Symbol.for("react.suspense"):60113,ut=$?Symbol.for("react.suspense_list"):60120,ht=$?Symbol.for("react.memo"):60115,dt=$?Symbol.for("react.lazy"):60116,pt=$?Symbol.for("react.block"):60121,ft="function"===typeof Symbol&&Symbol.iterator;function mt(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=ft&&t[ft]||t["@@iterator"])?t:null}function gt(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case nt:return"Fragment";case et:return"Portal";case rt:return"Profiler";case at:return"StrictMode";case lt:return"Suspense";case ut:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case ot:return"Context.Consumer";case st:return"Context.Provider";case ct:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case ht:return gt(t.type);case pt:return gt(t.render);case dt:if(t=1===t._status?t._result:null)return gt(t)}return null}function yt(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var a=t._debugOwner,r=t._debugSource,s=gt(t.type);n=null,a&&(n=gt(a.type)),a=s,s="",r?s=" (at "+r.fileName.replace(Z,"")+":"+r.lineNumber+")":n&&(s=" (created by "+n+")"),n="\n    in "+(a||"Unknown")+s}e+=n,t=t.return}while(t);return e}function bt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function xt(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function vt(t){t._valueTracker||(t._valueTracker=function(t){var e=xt(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),a=""+t[e];if(!t.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return r.call(this)},set:function(t){a=""+t,s.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(t){a=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function wt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),a="";return t&&(a=xt(t)?t.checked?"true":"false":t.value),(t=a)!==n&&(e.setValue(t),!0)}function kt(t,e){var n=e.checked;return r({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function It(t,e){var n=null==e.defaultValue?"":e.defaultValue,a=null!=e.checked?e.checked:e.defaultChecked;n=bt(null!=e.value?e.value:n),t._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function Nt(t,e){null!=(e=e.checked)&&J(t,"checked",e,!1)}function Tt(t,e){Nt(t,e);var n=bt(e.value),a=e.type;if(null!=n)"number"===a?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===a||"reset"===a)return void t.removeAttribute("value");e.hasOwnProperty("value")?Ct(t,e.type,n):e.hasOwnProperty("defaultValue")&&Ct(t,e.type,bt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function St(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var a=e.type;if(!("submit"!==a&&"reset"!==a||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Ct(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function Et(t,e){return t=r({children:void 0},e),(e=function(t){var e="";return a.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function At(t,e,n,a){if(t=t.options,e){e={};for(var r=0;r<n.length;r++)e["$"+n[r]]=!0;for(n=0;n<t.length;n++)r=e.hasOwnProperty("$"+t[n].value),t[n].selected!==r&&(t[n].selected=r),r&&a&&(t[n].defaultSelected=!0)}else{for(n=""+bt(n),e=null,r=0;r<t.length;r++){if(t[r].value===n)return t[r].selected=!0,void(a&&(t[r].defaultSelected=!0));null!==e||t[r].disabled||(e=t[r])}null!==e&&(e.selected=!0)}}function Rt(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(o(91));return r({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Ft(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:bt(n)}}function Dt(t,e){var n=bt(e.value),a=bt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=a&&(t.defaultValue=""+a)}function _t(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}var Ot="http://www.w3.org/1999/xhtml",Mt="http://www.w3.org/2000/svg";function Lt(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function zt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Lt(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var Pt,Bt,Wt=(Bt=function(t,e){if(t.namespaceURI!==Mt||"innerHTML"in t)t.innerHTML=e;else{for((Pt=Pt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Pt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,e,n,a){MSApp.execUnsafeLocalFunction((function(){return Bt(t,e)}))}:Bt);function Vt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function Ut(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Gt={animationend:Ut("Animation","AnimationEnd"),animationiteration:Ut("Animation","AnimationIteration"),animationstart:Ut("Animation","AnimationStart"),transitionend:Ut("Transition","TransitionEnd")},Ht={},jt={};function Kt(t){if(Ht[t])return Ht[t];if(!Gt[t])return t;var e,n=Gt[t];for(e in n)if(n.hasOwnProperty(e)&&e in jt)return Ht[t]=n[e];return t}C&&(jt=document.createElement("div").style,"AnimationEvent"in window||(delete Gt.animationend.animation,delete Gt.animationiteration.animation,delete Gt.animationstart.animation),"TransitionEvent"in window||delete Gt.transitionend.transition);var qt=Kt("animationend"),Xt=Kt("animationiteration"),Yt=Kt("animationstart"),Qt=Kt("transitionend"),Jt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Zt=new("function"===typeof WeakMap?WeakMap:Map);function $t(t){var e=Zt.get(t);return void 0===e&&(e=new Map,Zt.set(t,e)),e}function te(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function ee(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function ne(t){if(te(t)!==t)throw Error(o(188))}function ae(t){if(t=function(t){var e=t.alternate;if(!e){if(null===(e=te(t)))throw Error(o(188));return e!==t?null:t}for(var n=t,a=e;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return ne(r),t;if(s===a)return ne(r),e;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?t:e}(t),!t)return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function re(t,e){if(null==e)throw Error(o(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function se(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var oe=null;function ie(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var a=0;a<e.length&&!t.isPropagationStopped();a++)y(t,e[a],n[a]);else e&&y(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function ce(t){if(null!==t&&(oe=re(oe,t)),t=oe,oe=null,t){if(se(t,ie),oe)throw Error(o(95));if(u)throw t=h,u=!1,h=null,t}}function le(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function ue(t){if(!C)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"===typeof e[t]),e}var he=[];function de(t){t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>he.length&&he.push(t)}function pe(t,e,n,a){if(he.length){var r=he.pop();return r.topLevelType=t,r.eventSystemFlags=a,r.nativeEvent=e,r.targetInst=n,r}return{topLevelType:t,eventSystemFlags:a,nativeEvent:e,targetInst:n,ancestors:[]}}function fe(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var a=n;if(3===a.tag)a=a.stateNode.containerInfo;else{for(;a.return;)a=a.return;a=3!==a.tag?null:a.stateNode.containerInfo}if(!a)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=_n(a)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var r=le(t.nativeEvent);a=t.topLevelType;var s=t.nativeEvent,o=t.eventSystemFlags;0===n&&(o|=64);for(var i=null,c=0;c<k.length;c++){var l=k[c];l&&(l=l.extractEvents(a,e,s,r,o))&&(i=re(i,l))}ce(i)}}function me(t,e,n){if(!n.has(t)){switch(t){case"scroll":Ye(e,"scroll",!0);break;case"focus":case"blur":Ye(e,"focus",!0),Ye(e,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ue(t)&&Ye(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Jt.indexOf(t)&&Xe(t,e)}n.set(t,null)}}var ge,ye,be,xe=!1,ve=[],we=null,ke=null,Ie=null,Ne=new Map,Te=new Map,Se=[],Ce="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ee="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ae(t,e,n,a,r){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:r,container:a}}function Re(t,e){switch(t){case"focus":case"blur":we=null;break;case"dragenter":case"dragleave":ke=null;break;case"mouseover":case"mouseout":Ie=null;break;case"pointerover":case"pointerout":Ne.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Te.delete(e.pointerId)}}function Fe(t,e,n,a,r,s){return null===t||t.nativeEvent!==s?(t=Ae(e,n,a,r,s),null!==e&&(null!==(e=On(e))&&ye(e)),t):(t.eventSystemFlags|=a,t)}function De(t){var e=_n(t.target);if(null!==e){var n=te(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=ee(n)))return t.blockedOn=e,void s.unstable_runWithPriority(t.priority,(function(){be(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function _e(t){if(null!==t.blockedOn)return!1;var e=$e(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);if(null!==e){var n=On(e);return null!==n&&ye(n),t.blockedOn=e,!1}return!0}function Oe(t,e,n){_e(t)&&n.delete(e)}function Me(){for(xe=!1;0<ve.length;){var t=ve[0];if(null!==t.blockedOn){null!==(t=On(t.blockedOn))&&ge(t);break}var e=$e(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);null!==e?t.blockedOn=e:ve.shift()}null!==we&&_e(we)&&(we=null),null!==ke&&_e(ke)&&(ke=null),null!==Ie&&_e(Ie)&&(Ie=null),Ne.forEach(Oe),Te.forEach(Oe)}function Le(t,e){t.blockedOn===e&&(t.blockedOn=null,xe||(xe=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Me)))}function ze(t){function e(e){return Le(e,t)}if(0<ve.length){Le(ve[0],t);for(var n=1;n<ve.length;n++){var a=ve[n];a.blockedOn===t&&(a.blockedOn=null)}}for(null!==we&&Le(we,t),null!==ke&&Le(ke,t),null!==Ie&&Le(Ie,t),Ne.forEach(e),Te.forEach(e),n=0;n<Se.length;n++)(a=Se[n]).blockedOn===t&&(a.blockedOn=null);for(;0<Se.length&&null===(n=Se[0]).blockedOn;)De(n),null===n.blockedOn&&Se.shift()}var Pe={},Be=new Map,We=new Map,Ve=["abort","abort",qt,"animationEnd",Xt,"animationIteration",Yt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Qt,"transitionEnd","waiting","waiting"];function Ue(t,e){for(var n=0;n<t.length;n+=2){var a=t[n],r=t[n+1],s="on"+(r[0].toUpperCase()+r.slice(1));s={phasedRegistrationNames:{bubbled:s,captured:s+"Capture"},dependencies:[a],eventPriority:e},We.set(a,e),Be.set(a,s),Pe[r]=s}}Ue("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ue("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ue(Ve,2);for(var Ge="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),He=0;He<Ge.length;He++)We.set(Ge[He],0);var je=s.unstable_UserBlockingPriority,Ke=s.unstable_runWithPriority,qe=!0;function Xe(t,e){Ye(e,t,!1)}function Ye(t,e,n){var a=We.get(e);switch(void 0===a?2:a){case 0:a=Qe.bind(null,e,1,t);break;case 1:a=Je.bind(null,e,1,t);break;default:a=Ze.bind(null,e,1,t)}n?t.addEventListener(e,a,!0):t.addEventListener(e,a,!1)}function Qe(t,e,n,a){P||L();var r=Ze,s=P;P=!0;try{M(r,t,e,n,a)}finally{(P=s)||W()}}function Je(t,e,n,a){Ke(je,Ze.bind(null,t,e,n,a))}function Ze(t,e,n,a){if(qe)if(0<ve.length&&-1<Ce.indexOf(t))t=Ae(null,t,e,n,a),ve.push(t);else{var r=$e(t,e,n,a);if(null===r)Re(t,a);else if(-1<Ce.indexOf(t))t=Ae(r,t,e,n,a),ve.push(t);else if(!function(t,e,n,a,r){switch(e){case"focus":return we=Fe(we,t,e,n,a,r),!0;case"dragenter":return ke=Fe(ke,t,e,n,a,r),!0;case"mouseover":return Ie=Fe(Ie,t,e,n,a,r),!0;case"pointerover":var s=r.pointerId;return Ne.set(s,Fe(Ne.get(s)||null,t,e,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Te.set(s,Fe(Te.get(s)||null,t,e,n,a,r)),!0}return!1}(r,t,e,n,a)){Re(t,a),t=pe(t,a,null,e);try{V(fe,t)}finally{de(t)}}}}function $e(t,e,n,a){if(null!==(n=_n(n=le(a)))){var r=te(n);if(null===r)n=null;else{var s=r.tag;if(13===s){if(null!==(n=ee(r)))return n;n=null}else if(3===s){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;n=null}else r!==n&&(n=null)}}t=pe(t,a,n,e);try{V(fe,t)}finally{de(t)}return null}var tn={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function nn(t,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||tn.hasOwnProperty(t)&&tn[t]?(""+e).trim():e+"px"}function an(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=nn(n,e[n],a);"float"===n&&(n="cssFloat"),a?t.setProperty(n,r):t[n]=r}}Object.keys(tn).forEach((function(t){en.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),tn[e]=tn[t]}))}));var rn=r({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sn(t,e){if(e){if(rn[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(o(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(o(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(o(62,""))}}function on(t,e){if(-1===t.indexOf("-"))return"string"===typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var cn=Ot;function ln(t,e){var n=$t(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=T[e];for(var a=0;a<e.length;a++)me(e[a],t,n)}function un(){}function hn(t){if("undefined"===typeof(t=t||("undefined"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function dn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function pn(t,e){var n,a=dn(t);for(t=0;a;){if(3===a.nodeType){if(n=t+a.textContent.length,t<=e&&n>=e)return{node:a,offset:e-t};t=n}t:{for(;a;){if(a.nextSibling){a=a.nextSibling;break t}a=a.parentNode}a=void 0}a=dn(a)}}function fn(t,e){return!(!t||!e)&&(t===e||(!t||3!==t.nodeType)&&(e&&3===e.nodeType?fn(t,e.parentNode):"contains"in t?t.contains(e):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(e))))}function mn(){for(var t=window,e=hn();e instanceof t.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(a){n=!1}if(!n)break;e=hn((t=e.contentWindow).document)}return e}function gn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var yn="$",bn="/$",xn="$?",vn="$!",wn=null,kn=null;function In(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function Nn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var Tn="function"===typeof setTimeout?setTimeout:void 0,Sn="function"===typeof clearTimeout?clearTimeout:void 0;function Cn(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function En(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if(n===yn||n===vn||n===xn){if(0===e)return t;e--}else n===bn&&e++}t=t.previousSibling}return null}var An=Math.random().toString(36).slice(2),Rn="__reactInternalInstance$"+An,Fn="__reactEventHandlers$"+An,Dn="__reactContainere$"+An;function _n(t){var e=t[Rn];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Dn]||n[Rn]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=En(t);null!==t;){if(n=t[Rn])return n;t=En(t)}return e}n=(t=n).parentNode}return null}function On(t){return!(t=t[Rn]||t[Dn])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function Mn(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(o(33))}function Ln(t){return t[Fn]||null}function zn(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function Pn(t,e){var n=t.stateNode;if(!n)return null;var a=f(n);if(!a)return null;n=a[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!a;break t;default:t=!1}if(t)return null;if(n&&"function"!==typeof n)throw Error(o(231,e,typeof n));return n}function Bn(t,e,n){(e=Pn(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Wn(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=zn(e);for(e=n.length;0<e--;)Bn(n[e],"captured",t);for(e=0;e<n.length;e++)Bn(n[e],"bubbled",t)}}function Vn(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=Pn(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Un(t){t&&t.dispatchConfig.registrationName&&Vn(t._targetInst,null,t)}function Gn(t){se(t,Wn)}var Hn=null,jn=null,Kn=null;function qn(){if(Kn)return Kn;var t,e,n=jn,a=n.length,r="value"in Hn?Hn.value:Hn.textContent,s=r.length;for(t=0;t<a&&n[t]===r[t];t++);var o=a-t;for(e=1;e<=o&&n[a-e]===r[s-e];e++);return Kn=r.slice(t,1<e?1-e:void 0)}function Xn(){return!0}function Yn(){return!1}function Qn(t,e,n,a){for(var r in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(r)&&((e=t[r])?this[r]=e(n):"target"===r?this.target=a:this[r]=n[r]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Xn:Yn,this.isPropagationStopped=Yn,this}function Jn(t,e,n,a){if(this.eventPool.length){var r=this.eventPool.pop();return this.call(r,t,e,n,a),r}return new this(t,e,n,a)}function Zn(t){if(!(t instanceof this))throw Error(o(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function $n(t){t.eventPool=[],t.getPooled=Jn,t.release=Zn}r(Qn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=Xn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=Xn)},persist:function(){this.isPersistent=Xn},isPersistent:Yn,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Yn,this._dispatchInstances=this._dispatchListeners=null}}),Qn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Qn.extend=function(t){function e(){}function n(){return a.apply(this,arguments)}var a=this;e.prototype=a.prototype;var s=new e;return r(s,n.prototype),n.prototype=s,n.prototype.constructor=n,n.Interface=r({},a.Interface,t),n.extend=a.extend,$n(n),n},$n(Qn);var ta=Qn.extend({data:null}),ea=Qn.extend({data:null}),na=[9,13,27,32],aa=C&&"CompositionEvent"in window,ra=null;C&&"documentMode"in document&&(ra=document.documentMode);var sa=C&&"TextEvent"in window&&!ra,oa=C&&(!aa||ra&&8<ra&&11>=ra),ia=String.fromCharCode(32),ca={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},la=!1;function ua(t,e){switch(t){case"keyup":return-1!==na.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ha(t){return"object"===typeof(t=t.detail)&&"data"in t?t.data:null}var da=!1;var pa={eventTypes:ca,extractEvents:function(t,e,n,a){var r;if(aa)t:{switch(t){case"compositionstart":var s=ca.compositionStart;break t;case"compositionend":s=ca.compositionEnd;break t;case"compositionupdate":s=ca.compositionUpdate;break t}s=void 0}else da?ua(t,n)&&(s=ca.compositionEnd):"keydown"===t&&229===n.keyCode&&(s=ca.compositionStart);return s?(oa&&"ko"!==n.locale&&(da||s!==ca.compositionStart?s===ca.compositionEnd&&da&&(r=qn()):(jn="value"in(Hn=a)?Hn.value:Hn.textContent,da=!0)),s=ta.getPooled(s,e,n,a),r?s.data=r:null!==(r=ha(n))&&(s.data=r),Gn(s),r=s):r=null,(t=sa?function(t,e){switch(t){case"compositionend":return ha(e);case"keypress":return 32!==e.which?null:(la=!0,ia);case"textInput":return(t=e.data)===ia&&la?null:t;default:return null}}(t,n):function(t,e){if(da)return"compositionend"===t||!aa&&ua(t,e)?(t=qn(),Kn=jn=Hn=null,da=!1,t):null;switch(t){case"paste":default:return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return oa&&"ko"!==e.locale?null:e.data}}(t,n))?((e=ea.getPooled(ca.beforeInput,e,n,a)).data=t,Gn(e)):e=null,null===r?e:null===e?r:[r,e]}},fa={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ma(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!fa[t.type]:"textarea"===e}var ga={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ya(t,e,n){return(t=Qn.getPooled(ga.change,t,e,n)).type="change",D(n),Gn(t),t}var ba=null,xa=null;function va(t){ce(t)}function wa(t){if(wt(Mn(t)))return t}function ka(t,e){if("change"===t)return e}var Ia=!1;function Na(){ba&&(ba.detachEvent("onpropertychange",Ta),xa=ba=null)}function Ta(t){if("value"===t.propertyName&&wa(xa))if(t=ya(xa,t,le(t)),P)ce(t);else{P=!0;try{O(va,t)}finally{P=!1,W()}}}function Sa(t,e,n){"focus"===t?(Na(),xa=n,(ba=e).attachEvent("onpropertychange",Ta)):"blur"===t&&Na()}function Ca(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return wa(xa)}function Ea(t,e){if("click"===t)return wa(e)}function Aa(t,e){if("input"===t||"change"===t)return wa(e)}C&&(Ia=ue("input")&&(!document.documentMode||9<document.documentMode));var Ra={eventTypes:ga,_isInputEventSupported:Ia,extractEvents:function(t,e,n,a){var r=e?Mn(e):window,s=r.nodeName&&r.nodeName.toLowerCase();if("select"===s||"input"===s&&"file"===r.type)var o=ka;else if(ma(r))if(Ia)o=Aa;else{o=Ca;var i=Sa}else(s=r.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===r.type||"radio"===r.type)&&(o=Ea);if(o&&(o=o(t,e)))return ya(o,n,a);i&&i(t,r,e),"blur"===t&&(t=r._wrapperState)&&t.controlled&&"number"===r.type&&Ct(r,"number",r.value)}},Fa=Qn.extend({view:null,detail:null}),Da={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _a(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Da[t])&&!!e[t]}function Oa(){return _a}var Ma=0,La=0,za=!1,Pa=!1,Ba=Fa.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Oa,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Ma;return Ma=t.screenX,za?"mousemove"===t.type?t.screenX-e:0:(za=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=La;return La=t.screenY,Pa?"mousemove"===t.type?t.screenY-e:0:(Pa=!0,0)}}),Wa=Ba.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Va={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ua={eventTypes:Va,extractEvents:function(t,e,n,a,r){var s="mouseover"===t||"pointerover"===t,o="mouseout"===t||"pointerout"===t;if(s&&0===(32&r)&&(n.relatedTarget||n.fromElement)||!o&&!s)return null;(s=a.window===a?a:(s=a.ownerDocument)?s.defaultView||s.parentWindow:window,o)?(o=e,null!==(e=(e=n.relatedTarget||n.toElement)?_n(e):null)&&(e!==te(e)||5!==e.tag&&6!==e.tag)&&(e=null)):o=null;if(o===e)return null;if("mouseout"===t||"mouseover"===t)var i=Ba,c=Va.mouseLeave,l=Va.mouseEnter,u="mouse";else"pointerout"!==t&&"pointerover"!==t||(i=Wa,c=Va.pointerLeave,l=Va.pointerEnter,u="pointer");if(t=null==o?s:Mn(o),s=null==e?s:Mn(e),(c=i.getPooled(c,o,n,a)).type=u+"leave",c.target=t,c.relatedTarget=s,(n=i.getPooled(l,e,n,a)).type=u+"enter",n.target=s,n.relatedTarget=t,u=e,(a=o)&&u)t:{for(l=u,o=0,t=i=a;t;t=zn(t))o++;for(t=0,e=l;e;e=zn(e))t++;for(;0<o-t;)i=zn(i),o--;for(;0<t-o;)l=zn(l),t--;for(;o--;){if(i===l||i===l.alternate)break t;i=zn(i),l=zn(l)}i=null}else i=null;for(l=i,i=[];a&&a!==l&&(null===(o=a.alternate)||o!==l);)i.push(a),a=zn(a);for(a=[];u&&u!==l&&(null===(o=u.alternate)||o!==l);)a.push(u),u=zn(u);for(u=0;u<i.length;u++)Vn(i[u],"bubbled",c);for(u=a.length;0<u--;)Vn(a[u],"captured",n);return 0===(64&r)?[c]:[c,n]}};var Ga="function"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e},Ha=Object.prototype.hasOwnProperty;function ja(t,e){if(Ga(t,e))return!0;if("object"!==typeof t||null===t||"object"!==typeof e||null===e)return!1;var n=Object.keys(t),a=Object.keys(e);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++)if(!Ha.call(e,n[a])||!Ga(t[n[a]],e[n[a]]))return!1;return!0}var Ka=C&&"documentMode"in document&&11>=document.documentMode,qa={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Xa=null,Ya=null,Qa=null,Ja=!1;function Za(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Ja||null==Xa||Xa!==hn(n)?null:("selectionStart"in(n=Xa)&&gn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Qa&&ja(Qa,n)?null:(Qa=n,(t=Qn.getPooled(qa.select,Ya,t,e)).type="select",t.target=Xa,Gn(t),t))}var $a={eventTypes:qa,extractEvents:function(t,e,n,a,r,s){if(!(s=!(r=s||(a.window===a?a.document:9===a.nodeType?a:a.ownerDocument)))){t:{r=$t(r),s=T.onSelect;for(var o=0;o<s.length;o++)if(!r.has(s[o])){r=!1;break t}r=!0}s=!r}if(s)return null;switch(r=e?Mn(e):window,t){case"focus":(ma(r)||"true"===r.contentEditable)&&(Xa=r,Ya=e,Qa=null);break;case"blur":Qa=Ya=Xa=null;break;case"mousedown":Ja=!0;break;case"contextmenu":case"mouseup":case"dragend":return Ja=!1,Za(n,a);case"selectionchange":if(Ka)break;case"keydown":case"keyup":return Za(n,a)}return null}},tr=Qn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),er=Qn.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),nr=Fa.extend({relatedTarget:null});function ar(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var rr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},or=Fa.extend({key:function(t){if(t.key){var e=rr[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=ar(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?sr[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Oa,charCode:function(t){return"keypress"===t.type?ar(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?ar(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),ir=Ba.extend({dataTransfer:null}),cr=Fa.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Oa}),lr=Qn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ur=Ba.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),hr={eventTypes:Pe,extractEvents:function(t,e,n,a){var r=Be.get(t);if(!r)return null;switch(t){case"keypress":if(0===ar(n))return null;case"keydown":case"keyup":t=or;break;case"blur":case"focus":t=nr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Ba;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=ir;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=cr;break;case qt:case Xt:case Yt:t=tr;break;case Qt:t=lr;break;case"scroll":t=Fa;break;case"wheel":t=ur;break;case"copy":case"cut":case"paste":t=er;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Wa;break;default:t=Qn}return Gn(e=t.getPooled(r,e,n,a)),e}};if(b)throw Error(o(101));b=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),v(),f=Ln,m=On,g=Mn,S({SimpleEventPlugin:hr,EnterLeaveEventPlugin:Ua,ChangeEventPlugin:Ra,SelectEventPlugin:$a,BeforeInputEventPlugin:pa});var dr=[],pr=-1;function fr(t){0>pr||(t.current=dr[pr],dr[pr]=null,pr--)}function mr(t,e){pr++,dr[pr]=t.current,t.current=e}var gr={},yr={current:gr},br={current:!1},xr=gr;function vr(t,e){var n=t.type.contextTypes;if(!n)return gr;var a=t.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===e)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=e[r];return a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=s),s}function wr(t){return null!==(t=t.childContextTypes)&&void 0!==t}function kr(){fr(br),fr(yr)}function Ir(t,e,n){if(yr.current!==gr)throw Error(o(168));mr(yr,e),mr(br,n)}function Nr(t,e,n){var a=t.stateNode;if(t=e.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var s in a=a.getChildContext())if(!(s in t))throw Error(o(108,gt(e)||"Unknown",s));return r({},n,{},a)}function Tr(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||gr,xr=yr.current,mr(yr,t),mr(br,br.current),!0}function Sr(t,e,n){var a=t.stateNode;if(!a)throw Error(o(169));n?(t=Nr(t,e,xr),a.__reactInternalMemoizedMergedChildContext=t,fr(br),fr(yr),mr(yr,t)):fr(br),mr(br,n)}var Cr=s.unstable_runWithPriority,Er=s.unstable_scheduleCallback,Ar=s.unstable_cancelCallback,Rr=s.unstable_requestPaint,Fr=s.unstable_now,Dr=s.unstable_getCurrentPriorityLevel,_r=s.unstable_ImmediatePriority,Or=s.unstable_UserBlockingPriority,Mr=s.unstable_NormalPriority,Lr=s.unstable_LowPriority,zr=s.unstable_IdlePriority,Pr={},Br=s.unstable_shouldYield,Wr=void 0!==Rr?Rr:function(){},Vr=null,Ur=null,Gr=!1,Hr=Fr(),jr=1e4>Hr?Fr:function(){return Fr()-Hr};function Kr(){switch(Dr()){case _r:return 99;case Or:return 98;case Mr:return 97;case Lr:return 96;case zr:return 95;default:throw Error(o(332))}}function qr(t){switch(t){case 99:return _r;case 98:return Or;case 97:return Mr;case 96:return Lr;case 95:return zr;default:throw Error(o(332))}}function Xr(t,e){return t=qr(t),Cr(t,e)}function Yr(t,e,n){return t=qr(t),Er(t,e,n)}function Qr(t){return null===Vr?(Vr=[t],Ur=Er(_r,Zr)):Vr.push(t),Pr}function Jr(){if(null!==Ur){var t=Ur;Ur=null,Ar(t)}Zr()}function Zr(){if(!Gr&&null!==Vr){Gr=!0;var t=0;try{var e=Vr;Xr(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Vr=null}catch(n){throw null!==Vr&&(Vr=Vr.slice(t+1)),Er(_r,Jr),n}finally{Gr=!1}}}function $r(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function ts(t,e){if(t&&t.defaultProps)for(var n in e=r({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var es={current:null},ns=null,as=null,rs=null;function ss(){rs=as=ns=null}function os(t){var e=es.current;fr(es),t.type._context._currentValue=e}function is(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function cs(t,e){ns=t,rs=as=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Lo=!0),t.firstContext=null)}function ls(t,e){if(rs!==t&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||(rs=t,e=1073741823),e={context:t,observedBits:e,next:null},null===as){if(null===ns)throw Error(o(308));as=e,ns.dependencies={expirationTime:0,firstContext:e,responders:null}}else as=as.next=e;return t._currentValue}var us=!1;function hs(t){t.updateQueue={baseState:t.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ds(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,baseQueue:t.baseQueue,shared:t.shared,effects:t.effects})}function ps(t,e){return(t={expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null}).next=t}function fs(t,e){if(null!==(t=t.updateQueue)){var n=(t=t.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}}function ms(t,e){var n=t.alternate;null!==n&&ds(n,t),null===(n=(t=t.updateQueue).baseQueue)?(t.baseQueue=e.next=e,e.next=e):(e.next=n.next,n.next=e)}function gs(t,e,n,a){var s=t.updateQueue;us=!1;var o=s.baseQueue,i=s.shared.pending;if(null!==i){if(null!==o){var c=o.next;o.next=i.next,i.next=c}o=i,s.shared.pending=null,null!==(c=t.alternate)&&(null!==(c=c.updateQueue)&&(c.baseQueue=i))}if(null!==o){c=o.next;var l=s.baseState,u=0,h=null,d=null,p=null;if(null!==c)for(var f=c;;){if((i=f.expirationTime)<a){var m={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===p?(d=p=m,h=l):p=p.next=m,i>u&&(u=i)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),kc(i,f.suspenseConfig);t:{var g=t,y=f;switch(i=e,m=n,y.tag){case 1:if("function"===typeof(g=y.payload)){l=g.call(m,l,i);break t}l=g;break t;case 3:g.effectTag=-4097&g.effectTag|64;case 0:if(null===(i="function"===typeof(g=y.payload)?g.call(m,l,i):g)||void 0===i)break t;l=r({},l,i);break t;case 2:us=!0}}null!==f.callback&&(t.effectTag|=32,null===(i=s.effects)?s.effects=[f]:i.push(f))}if(null===(f=f.next)||f===c){if(null===(i=s.shared.pending))break;f=o.next=i.next,i.next=c,s.baseQueue=o=i,s.shared.pending=null}}null===p?h=l:p.next=d,s.baseState=h,s.baseQueue=p,Ic(u),t.expirationTime=u,t.memoizedState=l}}function ys(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var a=t[e],r=a.callback;if(null!==r){if(a.callback=null,a=r,r=n,"function"!==typeof a)throw Error(o(191,a));a.call(r)}}}var bs=Q.ReactCurrentBatchConfig,xs=(new a.Component).refs;function vs(t,e,n,a){n=null===(n=n(a,e=t.memoizedState))||void 0===n?e:r({},e,n),t.memoizedState=n,0===t.expirationTime&&(t.updateQueue.baseState=n)}var ws={isMounted:function(t){return!!(t=t._reactInternalFiber)&&te(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var a=lc(),r=bs.suspense;(r=ps(a=uc(a,t,r),r)).payload=e,void 0!==n&&null!==n&&(r.callback=n),fs(t,r),hc(t,a)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var a=lc(),r=bs.suspense;(r=ps(a=uc(a,t,r),r)).tag=1,r.payload=e,void 0!==n&&null!==n&&(r.callback=n),fs(t,r),hc(t,a)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=lc(),a=bs.suspense;(a=ps(n=uc(n,t,a),a)).tag=2,void 0!==e&&null!==e&&(a.callback=e),fs(t,a),hc(t,n)}};function ks(t,e,n,a,r,s,o){return"function"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(a,s,o):!e.prototype||!e.prototype.isPureReactComponent||(!ja(n,a)||!ja(r,s))}function Is(t,e,n){var a=!1,r=gr,s=e.contextType;return"object"===typeof s&&null!==s?s=ls(s):(r=wr(e)?xr:yr.current,s=(a=null!==(a=e.contextTypes)&&void 0!==a)?vr(t,r):gr),e=new e(n,s),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=ws,t.stateNode=e,e._reactInternalFiber=t,a&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,t.__reactInternalMemoizedMaskedChildContext=s),e}function Ns(t,e,n,a){t=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,a),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,a),e.state!==t&&ws.enqueueReplaceState(e,e.state,null)}function Ts(t,e,n,a){var r=t.stateNode;r.props=n,r.state=t.memoizedState,r.refs=xs,hs(t);var s=e.contextType;"object"===typeof s&&null!==s?r.context=ls(s):(s=wr(e)?xr:yr.current,r.context=vr(t,s)),gs(t,n,r,a),r.state=t.memoizedState,"function"===typeof(s=e.getDerivedStateFromProps)&&(vs(t,e,s,n),r.state=t.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(e=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),e!==r.state&&ws.enqueueReplaceState(r,r.state,null),gs(t,n,r,a),r.state=t.memoizedState),"function"===typeof r.componentDidMount&&(t.effectTag|=4)}var Ss=Array.isArray;function Cs(t,e,n){if(null!==(t=n.ref)&&"function"!==typeof t&&"object"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,t));var r=""+t;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===r?e.ref:(e=function(t){var e=a.refs;e===xs&&(e=a.refs={}),null===t?delete e[r]:e[r]=t},e._stringRef=r,e)}if("string"!==typeof t)throw Error(o(284));if(!n._owner)throw Error(o(290,t))}return t}function Es(t,e){if("textarea"!==t.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function As(t){function e(e,n){if(t){var a=e.lastEffect;null!==a?(a.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,a){if(!t)return null;for(;null!==a;)e(n,a),a=a.sibling;return null}function a(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function r(t,e){return(t=Gc(t,e)).index=0,t.sibling=null,t}function s(e,n,a){return e.index=a,t?null!==(a=e.alternate)?(a=a.index)<n?(e.effectTag=2,n):a:(e.effectTag=2,n):n}function i(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,a){return null===e||6!==e.tag?((e=Kc(n,t.mode,a)).return=t,e):((e=r(e,n)).return=t,e)}function l(t,e,n,a){return null!==e&&e.elementType===n.type?((a=r(e,n.props)).ref=Cs(t,e,n),a.return=t,a):((a=Hc(n.type,n.key,n.props,null,t.mode,a)).ref=Cs(t,e,n),a.return=t,a)}function u(t,e,n,a){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=qc(n,t.mode,a)).return=t,e):((e=r(e,n.children||[])).return=t,e)}function h(t,e,n,a,s){return null===e||7!==e.tag?((e=jc(n,t.mode,a,s)).return=t,e):((e=r(e,n)).return=t,e)}function d(t,e,n){if("string"===typeof e||"number"===typeof e)return(e=Kc(""+e,t.mode,n)).return=t,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case tt:return(n=Hc(e.type,e.key,e.props,null,t.mode,n)).ref=Cs(t,null,e),n.return=t,n;case et:return(e=qc(e,t.mode,n)).return=t,e}if(Ss(e)||mt(e))return(e=jc(e,t.mode,n,null)).return=t,e;Es(t,e)}return null}function p(t,e,n,a){var r=null!==e?e.key:null;if("string"===typeof n||"number"===typeof n)return null!==r?null:c(t,e,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case tt:return n.key===r?n.type===nt?h(t,e,n.props.children,a,r):l(t,e,n,a):null;case et:return n.key===r?u(t,e,n,a):null}if(Ss(n)||mt(n))return null!==r?null:h(t,e,n,a,null);Es(t,n)}return null}function f(t,e,n,a,r){if("string"===typeof a||"number"===typeof a)return c(e,t=t.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case tt:return t=t.get(null===a.key?n:a.key)||null,a.type===nt?h(e,t,a.props.children,r,a.key):l(e,t,a,r);case et:return u(e,t=t.get(null===a.key?n:a.key)||null,a,r)}if(Ss(a)||mt(a))return h(e,t=t.get(n)||null,a,r,null);Es(e,a)}return null}function m(r,o,i,c){for(var l=null,u=null,h=o,m=o=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],c);if(null===y){null===h&&(h=g);break}t&&h&&null===y.alternate&&e(r,h),o=s(y,o,m),null===u?l=y:u.sibling=y,u=y,h=g}if(m===i.length)return n(r,h),l;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],c))&&(o=s(h,o,m),null===u?l=h:u.sibling=h,u=h);return l}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],c))&&(t&&null!==g.alternate&&h.delete(null===g.key?m:g.key),o=s(g,o,m),null===u?l=g:u.sibling=g,u=g);return t&&h.forEach((function(t){return e(r,t)})),l}function g(r,i,c,l){var u=mt(c);if("function"!==typeof u)throw Error(o(150));if(null==(c=u.call(c)))throw Error(o(151));for(var h=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(r,m,b.value,l);if(null===x){null===m&&(m=y);break}t&&m&&null===x.alternate&&e(r,m),i=s(x,i,g),null===h?u=x:h.sibling=x,h=x,m=y}if(b.done)return n(r,m),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=d(r,b.value,l))&&(i=s(b,i,g),null===h?u=b:h.sibling=b,h=b);return u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(t&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=s(b,i,g),null===h?u=b:h.sibling=b,h=b);return t&&m.forEach((function(t){return e(r,t)})),u}return function(t,a,s,c){var l="object"===typeof s&&null!==s&&s.type===nt&&null===s.key;l&&(s=s.props.children);var u="object"===typeof s&&null!==s;if(u)switch(s.$$typeof){case tt:t:{for(u=s.key,l=a;null!==l;){if(l.key===u){if(7===l.tag){if(s.type===nt){n(t,l.sibling),(a=r(l,s.props.children)).return=t,t=a;break t}}else if(l.elementType===s.type){n(t,l.sibling),(a=r(l,s.props)).ref=Cs(t,l,s),a.return=t,t=a;break t}n(t,l);break}e(t,l),l=l.sibling}s.type===nt?((a=jc(s.props.children,t.mode,c,s.key)).return=t,t=a):((c=Hc(s.type,s.key,s.props,null,t.mode,c)).ref=Cs(t,a,s),c.return=t,t=c)}return i(t);case et:t:{for(l=s.key;null!==a;){if(a.key===l){if(4===a.tag&&a.stateNode.containerInfo===s.containerInfo&&a.stateNode.implementation===s.implementation){n(t,a.sibling),(a=r(a,s.children||[])).return=t,t=a;break t}n(t,a);break}e(t,a),a=a.sibling}(a=qc(s,t.mode,c)).return=t,t=a}return i(t)}if("string"===typeof s||"number"===typeof s)return s=""+s,null!==a&&6===a.tag?(n(t,a.sibling),(a=r(a,s)).return=t,t=a):(n(t,a),(a=Kc(s,t.mode,c)).return=t,t=a),i(t);if(Ss(s))return m(t,a,s,c);if(mt(s))return g(t,a,s,c);if(u&&Es(t,s),"undefined"===typeof s&&!l)switch(t.tag){case 1:case 0:throw t=t.type,Error(o(152,t.displayName||t.name||"Component"))}return n(t,a)}}var Rs=As(!0),Fs=As(!1),Ds={},_s={current:Ds},Os={current:Ds},Ms={current:Ds};function Ls(t){if(t===Ds)throw Error(o(174));return t}function zs(t,e){switch(mr(Ms,e),mr(Os,t),mr(_s,Ds),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:zt(null,"");break;default:e=zt(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}fr(_s),mr(_s,e)}function Ps(){fr(_s),fr(Os),fr(Ms)}function Bs(t){Ls(Ms.current);var e=Ls(_s.current),n=zt(e,t.type);e!==n&&(mr(Os,t),mr(_s,n))}function Ws(t){Os.current===t&&(fr(_s),fr(Os))}var Vs={current:0};function Us(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===xn||n.data===vn))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function Gs(t,e){return{responder:t,props:e}}var Hs=Q.ReactCurrentDispatcher,js=Q.ReactCurrentBatchConfig,Ks=0,qs=null,Xs=null,Ys=null,Qs=!1;function Js(){throw Error(o(321))}function Zs(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Ga(t[n],e[n]))return!1;return!0}function $s(t,e,n,a,r,s){if(Ks=s,qs=e,e.memoizedState=null,e.updateQueue=null,e.expirationTime=0,Hs.current=null===t||null===t.memoizedState?Io:No,t=n(a,r),e.expirationTime===Ks){s=0;do{if(e.expirationTime=0,!(25>s))throw Error(o(301));s+=1,Ys=Xs=null,e.updateQueue=null,Hs.current=To,t=n(a,r)}while(e.expirationTime===Ks)}if(Hs.current=ko,e=null!==Xs&&null!==Xs.next,Ks=0,Ys=Xs=qs=null,Qs=!1,e)throw Error(o(300));return t}function to(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ys?qs.memoizedState=Ys=t:Ys=Ys.next=t,Ys}function eo(){if(null===Xs){var t=qs.alternate;t=null!==t?t.memoizedState:null}else t=Xs.next;var e=null===Ys?qs.memoizedState:Ys.next;if(null!==e)Ys=e,Xs=t;else{if(null===t)throw Error(o(310));t={memoizedState:(Xs=t).memoizedState,baseState:Xs.baseState,baseQueue:Xs.baseQueue,queue:Xs.queue,next:null},null===Ys?qs.memoizedState=Ys=t:Ys=Ys.next=t}return Ys}function no(t,e){return"function"===typeof e?e(t):e}function ao(t){var e=eo(),n=e.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=t;var a=Xs,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){r=r.next,a=a.baseState;var c=i=s=null,l=r;do{var u=l.expirationTime;if(u<Ks){var h={expirationTime:l.expirationTime,suspenseConfig:l.suspenseConfig,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null};null===c?(i=c=h,s=a):c=c.next=h,u>qs.expirationTime&&(qs.expirationTime=u,Ic(u))}else null!==c&&(c=c.next={expirationTime:1073741823,suspenseConfig:l.suspenseConfig,action:l.action,eagerReducer:l.eagerReducer,eagerState:l.eagerState,next:null}),kc(u,l.suspenseConfig),a=l.eagerReducer===t?l.eagerState:t(a,l.action);l=l.next}while(null!==l&&l!==r);null===c?s=a:c.next=i,Ga(a,e.memoizedState)||(Lo=!0),e.memoizedState=a,e.baseState=s,e.baseQueue=c,n.lastRenderedState=a}return[e.memoizedState,n.dispatch]}function ro(t){var e=eo(),n=e.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=t;var a=n.dispatch,r=n.pending,s=e.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=t(s,i.action),i=i.next}while(i!==r);Ga(s,e.memoizedState)||(Lo=!0),e.memoizedState=s,null===e.baseQueue&&(e.baseState=s),n.lastRenderedState=s}return[s,a]}function so(t){var e=to();return"function"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={pending:null,dispatch:null,lastRenderedReducer:no,lastRenderedState:t}).dispatch=wo.bind(null,qs,t),[e.memoizedState,t]}function oo(t,e,n,a){return t={tag:t,create:e,destroy:n,deps:a,next:null},null===(e=qs.updateQueue)?(e={lastEffect:null},qs.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(a=n.next,n.next=t,t.next=a,e.lastEffect=t),t}function io(){return eo().memoizedState}function co(t,e,n,a){var r=to();qs.effectTag|=t,r.memoizedState=oo(1|e,n,void 0,void 0===a?null:a)}function lo(t,e,n,a){var r=eo();a=void 0===a?null:a;var s=void 0;if(null!==Xs){var o=Xs.memoizedState;if(s=o.destroy,null!==a&&Zs(a,o.deps))return void oo(e,n,s,a)}qs.effectTag|=t,r.memoizedState=oo(1|e,n,s,a)}function uo(t,e){return co(516,4,t,e)}function ho(t,e){return lo(516,4,t,e)}function po(t,e){return lo(4,2,t,e)}function fo(t,e){return"function"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function mo(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,lo(4,2,fo.bind(null,e,t),n)}function go(){}function yo(t,e){return to().memoizedState=[t,void 0===e?null:e],t}function bo(t,e){var n=eo();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&Zs(e,a[1])?a[0]:(n.memoizedState=[t,e],t)}function xo(t,e){var n=eo();e=void 0===e?null:e;var a=n.memoizedState;return null!==a&&null!==e&&Zs(e,a[1])?a[0]:(t=t(),n.memoizedState=[t,e],t)}function vo(t,e,n){var a=Kr();Xr(98>a?98:a,(function(){t(!0)})),Xr(97<a?97:a,(function(){var a=js.suspense;js.suspense=void 0===e?null:e;try{t(!1),n()}finally{js.suspense=a}}))}function wo(t,e,n){var a=lc(),r=bs.suspense;r={expirationTime:a=uc(a,t,r),suspenseConfig:r,action:n,eagerReducer:null,eagerState:null,next:null};var s=e.pending;if(null===s?r.next=r:(r.next=s.next,s.next=r),e.pending=r,s=t.alternate,t===qs||null!==s&&s===qs)Qs=!0,r.expirationTime=Ks,qs.expirationTime=Ks;else{if(0===t.expirationTime&&(null===s||0===s.expirationTime)&&null!==(s=e.lastRenderedReducer))try{var o=e.lastRenderedState,i=s(o,n);if(r.eagerReducer=s,r.eagerState=i,Ga(i,o))return}catch(c){}hc(t,a)}}var ko={readContext:ls,useCallback:Js,useContext:Js,useEffect:Js,useImperativeHandle:Js,useLayoutEffect:Js,useMemo:Js,useReducer:Js,useRef:Js,useState:Js,useDebugValue:Js,useResponder:Js,useDeferredValue:Js,useTransition:Js},Io={readContext:ls,useCallback:yo,useContext:ls,useEffect:uo,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,co(4,2,fo.bind(null,e,t),n)},useLayoutEffect:function(t,e){return co(4,2,t,e)},useMemo:function(t,e){var n=to();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var a=to();return e=void 0!==n?n(e):e,a.memoizedState=a.baseState=e,t=(t=a.queue={pending:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=wo.bind(null,qs,t),[a.memoizedState,t]},useRef:function(t){return t={current:t},to().memoizedState=t},useState:so,useDebugValue:go,useResponder:Gs,useDeferredValue:function(t,e){var n=so(t),a=n[0],r=n[1];return uo((function(){var n=js.suspense;js.suspense=void 0===e?null:e;try{r(t)}finally{js.suspense=n}}),[t,e]),a},useTransition:function(t){var e=so(!1),n=e[0];return e=e[1],[yo(vo.bind(null,e,t),[e,t]),n]}},No={readContext:ls,useCallback:bo,useContext:ls,useEffect:ho,useImperativeHandle:mo,useLayoutEffect:po,useMemo:xo,useReducer:ao,useRef:io,useState:function(){return ao(no)},useDebugValue:go,useResponder:Gs,useDeferredValue:function(t,e){var n=ao(no),a=n[0],r=n[1];return ho((function(){var n=js.suspense;js.suspense=void 0===e?null:e;try{r(t)}finally{js.suspense=n}}),[t,e]),a},useTransition:function(t){var e=ao(no),n=e[0];return e=e[1],[bo(vo.bind(null,e,t),[e,t]),n]}},To={readContext:ls,useCallback:bo,useContext:ls,useEffect:ho,useImperativeHandle:mo,useLayoutEffect:po,useMemo:xo,useReducer:ro,useRef:io,useState:function(){return ro(no)},useDebugValue:go,useResponder:Gs,useDeferredValue:function(t,e){var n=ro(no),a=n[0],r=n[1];return ho((function(){var n=js.suspense;js.suspense=void 0===e?null:e;try{r(t)}finally{js.suspense=n}}),[t,e]),a},useTransition:function(t){var e=ro(no),n=e[0];return e=e[1],[bo(vo.bind(null,e,t),[e,t]),n]}},So=null,Co=null,Eo=!1;function Ao(t,e){var n=Vc(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Ro(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);default:return!1}}function Fo(t){if(Eo){var e=Co;if(e){var n=e;if(!Ro(t,e)){if(!(e=Cn(n.nextSibling))||!Ro(t,e))return t.effectTag=-1025&t.effectTag|2,Eo=!1,void(So=t);Ao(So,n)}So=t,Co=Cn(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,Eo=!1,So=t}}function Do(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;So=t}function _o(t){if(t!==So)return!1;if(!Eo)return Do(t),Eo=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!Nn(e,t.memoizedProps))for(e=Co;e;)Ao(t,e),e=Cn(e.nextSibling);if(Do(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(o(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if(n===bn){if(0===e){Co=Cn(t.nextSibling);break t}e--}else n!==yn&&n!==vn&&n!==xn||e++}t=t.nextSibling}Co=null}}else Co=So?Cn(t.stateNode.nextSibling):null;return!0}function Oo(){Co=So=null,Eo=!1}var Mo=Q.ReactCurrentOwner,Lo=!1;function zo(t,e,n,a){e.child=null===t?Fs(e,null,n,a):Rs(e,t.child,n,a)}function Po(t,e,n,a,r){n=n.render;var s=e.ref;return cs(e,r),a=$s(t,e,n,a,s,r),null===t||Lo?(e.effectTag|=1,zo(t,e,a,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),ei(t,e,r))}function Bo(t,e,n,a,r,s){if(null===t){var o=n.type;return"function"!==typeof o||Uc(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Hc(n.type,null,a,null,e.mode,s)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=o,Wo(t,e,o,a,r,s))}return o=t.child,r<s&&(r=o.memoizedProps,(n=null!==(n=n.compare)?n:ja)(r,a)&&t.ref===e.ref)?ei(t,e,s):(e.effectTag|=1,(t=Gc(o,a)).ref=e.ref,t.return=e,e.child=t)}function Wo(t,e,n,a,r,s){return null!==t&&ja(t.memoizedProps,a)&&t.ref===e.ref&&(Lo=!1,r<s)?(e.expirationTime=t.expirationTime,ei(t,e,s)):Uo(t,e,n,a,s)}function Vo(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Uo(t,e,n,a,r){var s=wr(n)?xr:yr.current;return s=vr(e,s),cs(e,r),n=$s(t,e,n,a,s,r),null===t||Lo?(e.effectTag|=1,zo(t,e,n,r),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=r&&(t.expirationTime=0),ei(t,e,r))}function Go(t,e,n,a,r){if(wr(n)){var s=!0;Tr(e)}else s=!1;if(cs(e,r),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),Is(e,n,a),Ts(e,n,a,r),a=!0;else if(null===t){var o=e.stateNode,i=e.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=ls(l):l=vr(e,l=wr(n)?xr:yr.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;h||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&Ns(e,o,a,l),us=!1;var d=e.memoizedState;o.state=d,gs(e,a,o,r),c=e.memoizedState,i!==a||d!==c||br.current||us?("function"===typeof u&&(vs(e,n,u,a),c=e.memoizedState),(i=us||ks(e,n,i,a,d,c,l))?(h||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(e.effectTag|=4)):("function"===typeof o.componentDidMount&&(e.effectTag|=4),e.memoizedProps=a,e.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(e.effectTag|=4),a=!1)}else o=e.stateNode,ds(t,e),i=e.memoizedProps,o.props=e.type===e.elementType?i:ts(e.type,i),c=o.context,"object"===typeof(l=n.contextType)&&null!==l?l=ls(l):l=vr(e,l=wr(n)?xr:yr.current),(h="function"===typeof(u=n.getDerivedStateFromProps)||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&Ns(e,o,a,l),us=!1,c=e.memoizedState,o.state=c,gs(e,a,o,r),d=e.memoizedState,i!==a||c!==d||br.current||us?("function"===typeof u&&(vs(e,n,u,a),d=e.memoizedState),(u=us||ks(e,n,i,a,c,d,l))?(h||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,d,l),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,d,l)),"function"===typeof o.componentDidUpdate&&(e.effectTag|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=a,e.memoizedState=d),o.props=a,o.state=d,o.context=l,a=u):("function"!==typeof o.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),a=!1);return Ho(t,e,n,a,s,r)}function Ho(t,e,n,a,r,s){Vo(t,e);var o=0!==(64&e.effectTag);if(!a&&!o)return r&&Sr(e,n,!1),ei(t,e,s);a=e.stateNode,Mo.current=e;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return e.effectTag|=1,null!==t&&o?(e.child=Rs(e,t.child,null,s),e.child=Rs(e,null,i,s)):zo(t,e,i,s),e.memoizedState=a.state,r&&Sr(e,n,!0),e.child}function jo(t){var e=t.stateNode;e.pendingContext?Ir(0,e.pendingContext,e.pendingContext!==e.context):e.context&&Ir(0,e.context,!1),zs(t,e.containerInfo)}var Ko,qo,Xo,Yo,Qo={dehydrated:null,retryTime:0};function Jo(t,e,n){var a,r=e.mode,s=e.pendingProps,o=Vs.current,i=!1;if((a=0!==(64&e.effectTag))||(a=0!==(2&o)&&(null===t||null!==t.memoizedState)),a?(i=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===s.fallback||!0===s.unstable_avoidThisFallback||(o|=1),mr(Vs,1&o),null===t){if(void 0!==s.fallback&&Fo(e),i){if(i=s.fallback,(s=jc(null,r,0,null)).return=e,0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,s.child=t;null!==t;)t.return=s,t=t.sibling;return(n=jc(i,r,n,null)).return=e,s.sibling=n,e.memoizedState=Qo,e.child=s,n}return r=s.children,e.memoizedState=null,e.child=Fs(e,null,r,n)}if(null!==t.memoizedState){if(r=(t=t.child).sibling,i){if(s=s.fallback,(n=Gc(t,t.pendingProps)).return=e,0===(2&e.mode)&&(i=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=i;null!==i;)i.return=n,i=i.sibling;return(r=Gc(r,s)).return=e,n.sibling=r,n.childExpirationTime=0,e.memoizedState=Qo,e.child=n,r}return n=Rs(e,t.child,s.children,n),e.memoizedState=null,e.child=n}if(t=t.child,i){if(i=s.fallback,(s=jc(null,r,0,null)).return=e,s.child=t,null!==t&&(t.return=s),0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,s.child=t;null!==t;)t.return=s,t=t.sibling;return(n=jc(i,r,n,null)).return=e,s.sibling=n,n.effectTag|=2,s.childExpirationTime=0,e.memoizedState=Qo,e.child=s,n}return e.memoizedState=null,e.child=Rs(e,t,s.children,n)}function Zo(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),is(t.return,e)}function $o(t,e,n,a,r,s){var o=t.memoizedState;null===o?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:a,tail:n,tailExpiration:0,tailMode:r,lastEffect:s}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailExpiration=0,o.tailMode=r,o.lastEffect=s)}function ti(t,e,n){var a=e.pendingProps,r=a.revealOrder,s=a.tail;if(zo(t,e,a.children,n),0!==(2&(a=Vs.current)))a=1&a|2,e.effectTag|=64;else{if(null!==t&&0!==(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Zo(t,n);else if(19===t.tag)Zo(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}a&=1}if(mr(Vs,a),0===(2&e.mode))e.memoizedState=null;else switch(r){case"forwards":for(n=e.child,r=null;null!==n;)null!==(t=n.alternate)&&null===Us(t)&&(r=n),n=n.sibling;null===(n=r)?(r=e.child,e.child=null):(r=n.sibling,n.sibling=null),$o(e,!1,r,n,s,e.lastEffect);break;case"backwards":for(n=null,r=e.child,e.child=null;null!==r;){if(null!==(t=r.alternate)&&null===Us(t)){e.child=r;break}t=r.sibling,r.sibling=n,n=r,r=t}$o(e,!0,n,null,s,e.lastEffect);break;case"together":$o(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function ei(t,e,n){null!==t&&(e.dependencies=t.dependencies);var a=e.expirationTime;if(0!==a&&Ic(a),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(o(153));if(null!==e.child){for(n=Gc(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Gc(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function ni(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?e||null===t.tail?t.tail=null:t.tail.sibling=null:a.sibling=null}}function ai(t,e,n){var a=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return wr(e.type)&&kr(),null;case 3:return Ps(),fr(br),fr(yr),(n=e.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==t&&null!==t.child||!_o(e)||(e.effectTag|=4),qo(e),null;case 5:Ws(e),n=Ls(Ms.current);var s=e.type;if(null!==t&&null!=e.stateNode)Xo(t,e,s,a,n),t.ref!==e.ref&&(e.effectTag|=128);else{if(!a){if(null===e.stateNode)throw Error(o(166));return null}if(t=Ls(_s.current),_o(e)){a=e.stateNode,s=e.type;var i=e.memoizedProps;switch(a[Rn]=e,a[Fn]=i,s){case"iframe":case"object":case"embed":Xe("load",a);break;case"video":case"audio":for(t=0;t<Jt.length;t++)Xe(Jt[t],a);break;case"source":Xe("error",a);break;case"img":case"image":case"link":Xe("error",a),Xe("load",a);break;case"form":Xe("reset",a),Xe("submit",a);break;case"details":Xe("toggle",a);break;case"input":It(a,i),Xe("invalid",a),ln(n,"onChange");break;case"select":a._wrapperState={wasMultiple:!!i.multiple},Xe("invalid",a),ln(n,"onChange");break;case"textarea":Ft(a,i),Xe("invalid",a),ln(n,"onChange")}for(var c in sn(s,i),t=null,i)if(i.hasOwnProperty(c)){var l=i[c];"children"===c?"string"===typeof l?a.textContent!==l&&(t=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(t=["children",""+l]):N.hasOwnProperty(c)&&null!=l&&ln(n,c)}switch(s){case"input":vt(a),St(a,i,!0);break;case"textarea":vt(a),_t(a);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(a.onclick=un)}n=t,e.updateQueue=n,null!==n&&(e.effectTag|=4)}else{switch(c=9===n.nodeType?n:n.ownerDocument,t===cn&&(t=Lt(s)),t===cn?"script"===s?((t=c.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"===typeof a.is?t=c.createElement(s,{is:a.is}):(t=c.createElement(s),"select"===s&&(c=t,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):t=c.createElementNS(t,s),t[Rn]=e,t[Fn]=a,Ko(t,e,!1,!1),e.stateNode=t,c=on(s,a),s){case"iframe":case"object":case"embed":Xe("load",t),l=a;break;case"video":case"audio":for(l=0;l<Jt.length;l++)Xe(Jt[l],t);l=a;break;case"source":Xe("error",t),l=a;break;case"img":case"image":case"link":Xe("error",t),Xe("load",t),l=a;break;case"form":Xe("reset",t),Xe("submit",t),l=a;break;case"details":Xe("toggle",t),l=a;break;case"input":It(t,a),l=kt(t,a),Xe("invalid",t),ln(n,"onChange");break;case"option":l=Et(t,a);break;case"select":t._wrapperState={wasMultiple:!!a.multiple},l=r({},a,{value:void 0}),Xe("invalid",t),ln(n,"onChange");break;case"textarea":Ft(t,a),l=Rt(t,a),Xe("invalid",t),ln(n,"onChange");break;default:l=a}sn(s,l);var u=l;for(i in u)if(u.hasOwnProperty(i)){var h=u[i];"style"===i?an(t,h):"dangerouslySetInnerHTML"===i?null!=(h=h?h.__html:void 0)&&Wt(t,h):"children"===i?"string"===typeof h?("textarea"!==s||""!==h)&&Vt(t,h):"number"===typeof h&&Vt(t,""+h):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(N.hasOwnProperty(i)?null!=h&&ln(n,i):null!=h&&J(t,i,h,c))}switch(s){case"input":vt(t),St(t,a,!1);break;case"textarea":vt(t),_t(t);break;case"option":null!=a.value&&t.setAttribute("value",""+bt(a.value));break;case"select":t.multiple=!!a.multiple,null!=(n=a.value)?At(t,!!a.multiple,n,!1):null!=a.defaultValue&&At(t,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof l.onClick&&(t.onclick=un)}In(s,a)&&(e.effectTag|=4)}null!==e.ref&&(e.effectTag|=128)}return null;case 6:if(t&&null!=e.stateNode)Yo(t,e,t.memoizedProps,a);else{if("string"!==typeof a&&null===e.stateNode)throw Error(o(166));n=Ls(Ms.current),Ls(_s.current),_o(e)?(n=e.stateNode,a=e.memoizedProps,n[Rn]=e,n.nodeValue!==a&&(e.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[Rn]=e,e.stateNode=n)}return null;case 13:return fr(Vs),a=e.memoizedState,0!==(64&e.effectTag)?(e.expirationTime=n,e):(n=null!==a,a=!1,null===t?void 0!==e.memoizedProps.fallback&&_o(e):(a=null!==(s=t.memoizedState),n||null===s||null!==(s=t.child.sibling)&&(null!==(i=e.firstEffect)?(e.firstEffect=s,s.nextEffect=i):(e.firstEffect=e.lastEffect=s,s.nextEffect=null),s.effectTag=8)),n&&!a&&0!==(2&e.mode)&&(null===t&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Vs.current)?Gi===_i&&(Gi=Li):(Gi!==_i&&Gi!==Li||(Gi=zi),0!==Xi&&null!==Wi&&(Qc(Wi,Ui),Jc(Wi,Xi)))),(n||a)&&(e.effectTag|=4),null);case 4:return Ps(),qo(e),null;case 10:return os(e),null;case 19:if(fr(Vs),null===(a=e.memoizedState))return null;if(s=0!==(64&e.effectTag),null===(i=a.rendering)){if(s)ni(a,!1);else if(Gi!==_i||null!==t&&0!==(64&t.effectTag))for(i=e.child;null!==i;){if(null!==(t=Us(i))){for(e.effectTag|=64,ni(a,!1),null!==(s=t.updateQueue)&&(e.updateQueue=s,e.effectTag|=4),null===a.lastEffect&&(e.firstEffect=null),e.lastEffect=a.lastEffect,a=e.child;null!==a;)i=n,(s=a).effectTag&=2,s.nextEffect=null,s.firstEffect=null,s.lastEffect=null,null===(t=s.alternate)?(s.childExpirationTime=0,s.expirationTime=i,s.child=null,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null):(s.childExpirationTime=t.childExpirationTime,s.expirationTime=t.expirationTime,s.child=t.child,s.memoizedProps=t.memoizedProps,s.memoizedState=t.memoizedState,s.updateQueue=t.updateQueue,i=t.dependencies,s.dependencies=null===i?null:{expirationTime:i.expirationTime,firstContext:i.firstContext,responders:i.responders}),a=a.sibling;return mr(Vs,1&Vs.current|2),e.child}i=i.sibling}}else{if(!s)if(null!==(t=Us(i))){if(e.effectTag|=64,s=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.effectTag|=4),ni(a,!0),null===a.tail&&"hidden"===a.tailMode&&!i.alternate)return null!==(e=e.lastEffect=a.lastEffect)&&(e.nextEffect=null),null}else 2*jr()-a.renderingStartTime>a.tailExpiration&&1<n&&(e.effectTag|=64,s=!0,ni(a,!1),e.expirationTime=e.childExpirationTime=n-1);a.isBackwards?(i.sibling=e.child,e.child=i):(null!==(n=a.last)?n.sibling=i:e.child=i,a.last=i)}return null!==a.tail?(0===a.tailExpiration&&(a.tailExpiration=jr()+500),n=a.tail,a.rendering=n,a.tail=n.sibling,a.lastEffect=e.lastEffect,a.renderingStartTime=jr(),n.sibling=null,e=Vs.current,mr(Vs,s?1&e|2:1&e),n):null}throw Error(o(156,e.tag))}function ri(t){switch(t.tag){case 1:wr(t.type)&&kr();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(Ps(),fr(br),fr(yr),0!==(64&(e=t.effectTag)))throw Error(o(285));return t.effectTag=-4097&e|64,t;case 5:return Ws(t),null;case 13:return fr(Vs),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return fr(Vs),null;case 4:return Ps(),null;case 10:return os(t),null;default:return null}}function si(t,e){return{value:t,source:e,stack:yt(e)}}Ko=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},qo=function(){},Xo=function(t,e,n,a,s){var o=t.memoizedProps;if(o!==a){var i,c,l=e.stateNode;switch(Ls(_s.current),t=null,n){case"input":o=kt(l,o),a=kt(l,a),t=[];break;case"option":o=Et(l,o),a=Et(l,a),t=[];break;case"select":o=r({},o,{value:void 0}),a=r({},a,{value:void 0}),t=[];break;case"textarea":o=Rt(l,o),a=Rt(l,a),t=[];break;default:"function"!==typeof o.onClick&&"function"===typeof a.onClick&&(l.onclick=un)}for(i in sn(n,a),n=null,o)if(!a.hasOwnProperty(i)&&o.hasOwnProperty(i)&&null!=o[i])if("style"===i)for(c in l=o[i])l.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==i&&"children"!==i&&"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(N.hasOwnProperty(i)?t||(t=[]):(t=t||[]).push(i,null));for(i in a){var u=a[i];if(l=null!=o?o[i]:void 0,a.hasOwnProperty(i)&&u!==l&&(null!=u||null!=l))if("style"===i)if(l){for(c in l)!l.hasOwnProperty(c)||u&&u.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in u)u.hasOwnProperty(c)&&l[c]!==u[c]&&(n||(n={}),n[c]=u[c])}else n||(t||(t=[]),t.push(i,n)),n=u;else"dangerouslySetInnerHTML"===i?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(t=t||[]).push(i,u)):"children"===i?l===u||"string"!==typeof u&&"number"!==typeof u||(t=t||[]).push(i,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&(N.hasOwnProperty(i)?(null!=u&&ln(s,i),t||l===u||(t=[])):(t=t||[]).push(i,u))}n&&(t=t||[]).push("style",n),s=t,(e.updateQueue=s)&&(e.effectTag|=4)}},Yo=function(t,e,n,a){n!==a&&(e.effectTag|=4)};var oi="function"===typeof WeakSet?WeakSet:Set;function ii(t,e){var n=e.source,a=e.stack;null===a&&null!==n&&(a=yt(n)),null!==n&&gt(n.type),e=e.value,null!==t&&1===t.tag&&gt(t.type);try{console.error(e)}catch(r){setTimeout((function(){throw r}))}}function ci(t){var e=t.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(n){Mc(t,n)}else e.current=null}function li(t,e){switch(e.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,a=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:ts(e.type,n),a),t.__reactInternalSnapshotBeforeUpdate=e}return}throw Error(o(163))}function ui(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var a=n.destroy;n.destroy=void 0,void 0!==a&&a()}n=n.next}while(n!==e)}}function hi(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var a=n.create;n.destroy=a()}n=n.next}while(n!==e)}}function di(t,e,n){switch(n.tag){case 0:case 11:case 15:case 22:return void hi(3,n);case 1:if(t=n.stateNode,4&n.effectTag)if(null===e)t.componentDidMount();else{var a=n.elementType===n.type?e.memoizedProps:ts(n.type,e.memoizedProps);t.componentDidUpdate(a,e.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}return void(null!==(e=n.updateQueue)&&ys(n,e,t));case 3:if(null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}ys(n,e,t)}return;case 5:return t=n.stateNode,void(null===e&&4&n.effectTag&&In(n.type,n.memoizedProps)&&t.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&ze(n)))))}throw Error(o(163))}function pi(t,e,n){switch("function"===typeof Bc&&Bc(e),e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var a=t.next;Xr(97<n?97:n,(function(){var t=a;do{var n=t.destroy;if(void 0!==n){var r=e;try{n()}catch(s){Mc(r,s)}}t=t.next}while(t!==a)}))}break;case 1:ci(e),"function"===typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(n){Mc(t,n)}}(e,n);break;case 5:ci(e);break;case 4:xi(t,e,n)}}function fi(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,t.stateNode=null,null!==e&&fi(e)}function mi(t){return 5===t.tag||3===t.tag||4===t.tag}function gi(t){t:{for(var e=t.return;null!==e;){if(mi(e)){var n=e;break t}e=e.return}throw Error(o(160))}switch(e=n.stateNode,n.tag){case 5:var a=!1;break;case 3:case 4:e=e.containerInfo,a=!0;break;default:throw Error(o(161))}16&n.effectTag&&(Vt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||mi(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}a?yi(t,n,e):bi(t,n,e)}function yi(t,e,n){var a=t.tag,r=5===a||6===a;if(r)t=r?t.stateNode:t.stateNode.instance,e?8===n.nodeType?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(8===n.nodeType?(e=n.parentNode).insertBefore(t,n):(e=n).appendChild(t),null!==(n=n._reactRootContainer)&&void 0!==n||null!==e.onclick||(e.onclick=un));else if(4!==a&&null!==(t=t.child))for(yi(t,e,n),t=t.sibling;null!==t;)yi(t,e,n),t=t.sibling}function bi(t,e,n){var a=t.tag,r=5===a||6===a;if(r)t=r?t.stateNode:t.stateNode.instance,e?n.insertBefore(t,e):n.appendChild(t);else if(4!==a&&null!==(t=t.child))for(bi(t,e,n),t=t.sibling;null!==t;)bi(t,e,n),t=t.sibling}function xi(t,e,n){for(var a,r,s=e,i=!1;;){if(!i){i=s.return;t:for(;;){if(null===i)throw Error(o(160));switch(a=i.stateNode,i.tag){case 5:r=!1;break t;case 3:case 4:a=a.containerInfo,r=!0;break t}i=i.return}i=!0}if(5===s.tag||6===s.tag){t:for(var c=t,l=s,u=n,h=l;;)if(pi(c,h,u),null!==h.child&&4!==h.tag)h.child.return=h,h=h.child;else{if(h===l)break t;for(;null===h.sibling;){if(null===h.return||h.return===l)break t;h=h.return}h.sibling.return=h.return,h=h.sibling}r?(c=a,l=s.stateNode,8===c.nodeType?c.parentNode.removeChild(l):c.removeChild(l)):a.removeChild(s.stateNode)}else if(4===s.tag){if(null!==s.child){a=s.stateNode.containerInfo,r=!0,s.child.return=s,s=s.child;continue}}else if(pi(t,s,n),null!==s.child){s.child.return=s,s=s.child;continue}if(s===e)break;for(;null===s.sibling;){if(null===s.return||s.return===e)return;4===(s=s.return).tag&&(i=!1)}s.sibling.return=s.return,s=s.sibling}}function vi(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:return void ui(3,e);case 1:case 12:case 17:return;case 5:var n=e.stateNode;if(null!=n){var a=e.memoizedProps,r=null!==t?t.memoizedProps:a;t=e.type;var s=e.updateQueue;if(e.updateQueue=null,null!==s){for(n[Fn]=a,"input"===t&&"radio"===a.type&&null!=a.name&&Nt(n,a),on(t,r),e=on(t,a),r=0;r<s.length;r+=2){var i=s[r],c=s[r+1];"style"===i?an(n,c):"dangerouslySetInnerHTML"===i?Wt(n,c):"children"===i?Vt(n,c):J(n,i,c,e)}switch(t){case"input":Tt(n,a);break;case"textarea":Dt(n,a);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!a.multiple,null!=(t=a.value)?At(n,!!a.multiple,t,!1):e!==!!a.multiple&&(null!=a.defaultValue?At(n,!!a.multiple,a.defaultValue,!0):At(n,!!a.multiple,a.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(o(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((e=e.stateNode).hydrate&&(e.hydrate=!1,ze(e.containerInfo)));case 13:if(n=e,null===e.memoizedState?a=!1:(a=!0,n=e.child,Qi=jr()),null!==n)t:for(t=n;;){if(5===t.tag)s=t.stateNode,a?"function"===typeof(s=s.style).setProperty?s.setProperty("display","none","important"):s.display="none":(s=t.stateNode,r=void 0!==(r=t.memoizedProps.style)&&null!==r&&r.hasOwnProperty("display")?r.display:null,s.style.display=nn("display",r));else if(6===t.tag)t.stateNode.nodeValue=a?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(s=t.child.sibling).return=t,t=s;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}return void wi(e);case 19:return void wi(e)}throw Error(o(163))}function wi(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new oi),e.forEach((function(e){var a=zc.bind(null,t,e);n.has(e)||(n.add(e),e.then(a,a))}))}}var ki="function"===typeof WeakMap?WeakMap:Map;function Ii(t,e,n){(n=ps(n,null)).tag=3,n.payload={element:null};var a=e.value;return n.callback=function(){$i||($i=!0,tc=a),ii(t,e)},n}function Ni(t,e,n){(n=ps(n,null)).tag=3;var a=t.type.getDerivedStateFromError;if("function"===typeof a){var r=e.value;n.payload=function(){return ii(t,e),a(r)}}var s=t.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){"function"!==typeof a&&(null===ec?ec=new Set([this]):ec.add(this),ii(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var Ti,Si=Math.ceil,Ci=Q.ReactCurrentDispatcher,Ei=Q.ReactCurrentOwner,Ai=0,Ri=8,Fi=16,Di=32,_i=0,Oi=1,Mi=2,Li=3,zi=4,Pi=5,Bi=Ai,Wi=null,Vi=null,Ui=0,Gi=_i,Hi=null,ji=1073741823,Ki=1073741823,qi=null,Xi=0,Yi=!1,Qi=0,Ji=500,Zi=null,$i=!1,tc=null,ec=null,nc=!1,ac=null,rc=90,sc=null,oc=0,ic=null,cc=0;function lc(){return(Bi&(Fi|Di))!==Ai?1073741821-(jr()/10|0):0!==cc?cc:cc=1073741821-(jr()/10|0)}function uc(t,e,n){if(0===(2&(e=e.mode)))return 1073741823;var a=Kr();if(0===(4&e))return 99===a?1073741823:1073741822;if((Bi&Fi)!==Ai)return Ui;if(null!==n)t=$r(t,0|n.timeoutMs||5e3,250);else switch(a){case 99:t=1073741823;break;case 98:t=$r(t,150,100);break;case 97:case 96:t=$r(t,5e3,250);break;case 95:t=2;break;default:throw Error(o(326))}return null!==Wi&&t===Ui&&--t,t}function hc(t,e){if(50<oc)throw oc=0,ic=null,Error(o(185));if(null!==(t=dc(t,e))){var n=Kr();1073741823===e?(Bi&Ri)!==Ai&&(Bi&(Fi|Di))===Ai?gc(t):(fc(t),Bi===Ai&&Jr()):fc(t),(4&Bi)===Ai||98!==n&&99!==n||(null===sc?sc=new Map([[t,e]]):(void 0===(n=sc.get(t))||n>e)&&sc.set(t,e))}}function dc(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var a=t.return,r=null;if(null===a&&3===t.tag)r=t.stateNode;else for(;null!==a;){if(n=a.alternate,a.childExpirationTime<e&&(a.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===a.return&&3===a.tag){r=a.stateNode;break}a=a.return}return null!==r&&(Wi===r&&(Ic(e),Gi===zi&&Qc(r,Ui)),Jc(r,e)),r}function pc(t){var e=t.lastExpiredTime;if(0!==e)return e;if(!Yc(t,e=t.firstPendingTime))return e;var n=t.lastPingedTime;return 2>=(t=n>(t=t.nextKnownPendingLevel)?n:t)&&e!==t?0:t}function fc(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Qr(gc.bind(null,t));else{var e=pc(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var a=lc();if(1073741823===e?a=99:1===e||2===e?a=95:a=0>=(a=10*(1073741821-e)-10*(1073741821-a))?99:250>=a?98:5250>=a?97:95,null!==n){var r=t.callbackPriority;if(t.callbackExpirationTime===e&&r>=a)return;n!==Pr&&Ar(n)}t.callbackExpirationTime=e,t.callbackPriority=a,e=1073741823===e?Qr(gc.bind(null,t)):Yr(a,mc.bind(null,t),{timeout:10*(1073741821-e)-jr()}),t.callbackNode=e}}}function mc(t,e){if(cc=0,e)return Zc(t,e=lc()),fc(t),null;var n=pc(t);if(0!==n){if(e=t.callbackNode,(Bi&(Fi|Di))!==Ai)throw Error(o(327));if(Dc(),t===Wi&&n===Ui||xc(t,n),null!==Vi){var a=Bi;Bi|=Fi;for(var r=wc();;)try{Tc();break}catch(c){vc(t,c)}if(ss(),Bi=a,Ci.current=r,Gi===Oi)throw e=Hi,xc(t,n),Qc(t,n),fc(t),e;if(null===Vi)switch(r=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,a=Gi,Wi=null,a){case _i:case Oi:throw Error(o(345));case Mi:Zc(t,2<n?2:n);break;case Li:if(Qc(t,n),n===(a=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=Ec(r)),1073741823===ji&&10<(r=Qi+Ji-jr())){if(Yi){var s=t.lastPingedTime;if(0===s||s>=n){t.lastPingedTime=n,xc(t,n);break}}if(0!==(s=pc(t))&&s!==n)break;if(0!==a&&a!==n){t.lastPingedTime=a;break}t.timeoutHandle=Tn(Ac.bind(null,t),r);break}Ac(t);break;case zi:if(Qc(t,n),n===(a=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=Ec(r)),Yi&&(0===(r=t.lastPingedTime)||r>=n)){t.lastPingedTime=n,xc(t,n);break}if(0!==(r=pc(t))&&r!==n)break;if(0!==a&&a!==n){t.lastPingedTime=a;break}if(1073741823!==Ki?a=10*(1073741821-Ki)-jr():1073741823===ji?a=0:(a=10*(1073741821-ji)-5e3,0>(a=(r=jr())-a)&&(a=0),(n=10*(1073741821-n)-r)<(a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Si(a/1960))-a)&&(a=n)),10<a){t.timeoutHandle=Tn(Ac.bind(null,t),a);break}Ac(t);break;case Pi:if(1073741823!==ji&&null!==qi){s=ji;var i=qi;if(0>=(a=0|i.busyMinDurationMs)?a=0:(r=0|i.busyDelayMs,a=(s=jr()-(10*(1073741821-s)-(0|i.timeoutMs||5e3)))<=r?0:r+a-s),10<a){Qc(t,n),t.timeoutHandle=Tn(Ac.bind(null,t),a);break}}Ac(t);break;default:throw Error(o(329))}if(fc(t),t.callbackNode===e)return mc.bind(null,t)}}return null}function gc(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,(Bi&(Fi|Di))!==Ai)throw Error(o(327));if(Dc(),t===Wi&&e===Ui||xc(t,e),null!==Vi){var n=Bi;Bi|=Fi;for(var a=wc();;)try{Nc();break}catch(r){vc(t,r)}if(ss(),Bi=n,Ci.current=a,Gi===Oi)throw n=Hi,xc(t,e),Qc(t,e),fc(t),n;if(null!==Vi)throw Error(o(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Wi=null,Ac(t),fc(t)}return null}function yc(t,e){var n=Bi;Bi|=1;try{return t(e)}finally{(Bi=n)===Ai&&Jr()}}function bc(t,e){var n=Bi;Bi&=-2,Bi|=Ri;try{return t(e)}finally{(Bi=n)===Ai&&Jr()}}function xc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,Sn(n)),null!==Vi)for(n=Vi.return;null!==n;){var a=n;switch(a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&kr();break;case 3:Ps(),fr(br),fr(yr);break;case 5:Ws(a);break;case 4:Ps();break;case 13:case 19:fr(Vs);break;case 10:os(a)}n=n.return}Wi=t,Vi=Gc(t.current,null),Ui=e,Gi=_i,Hi=null,Ki=ji=1073741823,qi=null,Xi=0,Yi=!1}function vc(t,e){for(;;){try{if(ss(),Hs.current=ko,Qs)for(var n=qs.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}if(Ks=0,Ys=Xs=qs=null,Qs=!1,null===Vi||null===Vi.return)return Gi=Oi,Hi=e,Vi=null;t:{var r=t,s=Vi.return,o=Vi,i=e;if(e=Ui,o.effectTag|=2048,o.firstEffect=o.lastEffect=null,null!==i&&"object"===typeof i&&"function"===typeof i.then){var c=i;if(0===(2&o.mode)){var l=o.alternate;l?(o.updateQueue=l.updateQueue,o.memoizedState=l.memoizedState,o.expirationTime=l.expirationTime):(o.updateQueue=null,o.memoizedState=null)}var u=0!==(1&Vs.current),h=s;do{var d;if(d=13===h.tag){var p=h.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var f=h.memoizedProps;d=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!u)}}if(d){var m=h.updateQueue;if(null===m){var g=new Set;g.add(c),h.updateQueue=g}else m.add(c);if(0===(2&h.mode)){if(h.effectTag|=64,o.effectTag&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var y=ps(1073741823,null);y.tag=2,fs(o,y)}o.expirationTime=1073741823;break t}i=void 0,o=e;var b=r.pingCache;if(null===b?(b=r.pingCache=new ki,i=new Set,b.set(c,i)):void 0===(i=b.get(c))&&(i=new Set,b.set(c,i)),!i.has(o)){i.add(o);var x=Lc.bind(null,r,c,o);c.then(x,x)}h.effectTag|=4096,h.expirationTime=e;break t}h=h.return}while(null!==h);i=Error((gt(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+yt(o))}Gi!==Pi&&(Gi=Mi),i=si(i,o),h=s;do{switch(h.tag){case 3:c=i,h.effectTag|=4096,h.expirationTime=e,ms(h,Ii(h,c,e));break t;case 1:c=i;var v=h.type,w=h.stateNode;if(0===(64&h.effectTag)&&("function"===typeof v.getDerivedStateFromError||null!==w&&"function"===typeof w.componentDidCatch&&(null===ec||!ec.has(w)))){h.effectTag|=4096,h.expirationTime=e,ms(h,Ni(h,c,e));break t}}h=h.return}while(null!==h)}Vi=Cc(Vi)}catch(k){e=k;continue}break}}function wc(){var t=Ci.current;return Ci.current=ko,null===t?ko:t}function kc(t,e){t<ji&&2<t&&(ji=t),null!==e&&t<Ki&&2<t&&(Ki=t,qi=e)}function Ic(t){t>Xi&&(Xi=t)}function Nc(){for(;null!==Vi;)Vi=Sc(Vi)}function Tc(){for(;null!==Vi&&!Br();)Vi=Sc(Vi)}function Sc(t){var e=Ti(t.alternate,t,Ui);return t.memoizedProps=t.pendingProps,null===e&&(e=Cc(t)),Ei.current=null,e}function Cc(t){Vi=t;do{var e=Vi.alternate;if(t=Vi.return,0===(2048&Vi.effectTag)){if(e=ai(e,Vi,Ui),1===Ui||1!==Vi.childExpirationTime){for(var n=0,a=Vi.child;null!==a;){var r=a.expirationTime,s=a.childExpirationTime;r>n&&(n=r),s>n&&(n=s),a=a.sibling}Vi.childExpirationTime=n}if(null!==e)return e;null!==t&&0===(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Vi.firstEffect),null!==Vi.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Vi.firstEffect),t.lastEffect=Vi.lastEffect),1<Vi.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Vi:t.firstEffect=Vi,t.lastEffect=Vi))}else{if(null!==(e=ri(Vi)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Vi.sibling))return e;Vi=t}while(null!==Vi);return Gi===_i&&(Gi=Pi),null}function Ec(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function Ac(t){var e=Kr();return Xr(99,Rc.bind(null,t,e)),null}function Rc(t,e){do{Dc()}while(null!==ac);if((Bi&(Fi|Di))!==Ai)throw Error(o(327));var n=t.finishedWork,a=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(o(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var r=Ec(n);if(t.firstPendingTime=r,a<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:a<=t.firstSuspendedTime&&(t.firstSuspendedTime=a-1),a<=t.lastPingedTime&&(t.lastPingedTime=0),a<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===Wi&&(Vi=Wi=null,Ui=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){var s=Bi;Bi|=Di,Ei.current=null,wn=qe;var i=mn();if(gn(i)){if("selectionStart"in i)var c={start:i.selectionStart,end:i.selectionEnd};else t:{var l=(c=(c=i.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(l&&0!==l.rangeCount){c=l.anchorNode;var u=l.anchorOffset,h=l.focusNode;l=l.focusOffset;try{c.nodeType,h.nodeType}catch(S){c=null;break t}var d=0,p=-1,f=-1,m=0,g=0,y=i,b=null;e:for(;;){for(var x;y!==c||0!==u&&3!==y.nodeType||(p=d+u),y!==h||0!==l&&3!==y.nodeType||(f=d+l),3===y.nodeType&&(d+=y.nodeValue.length),null!==(x=y.firstChild);)b=y,y=x;for(;;){if(y===i)break e;if(b===c&&++m===u&&(p=d),b===h&&++g===l&&(f=d),null!==(x=y.nextSibling))break;b=(y=b).parentNode}y=x}c=-1===p||-1===f?null:{start:p,end:f}}else c=null}c=c||{start:0,end:0}}else c=null;kn={activeElementDetached:null,focusedElem:i,selectionRange:c},qe=!1,Zi=r;do{try{Fc()}catch(S){if(null===Zi)throw Error(o(330));Mc(Zi,S),Zi=Zi.nextEffect}}while(null!==Zi);Zi=r;do{try{for(i=t,c=e;null!==Zi;){var v=Zi.effectTag;if(16&v&&Vt(Zi.stateNode,""),128&v){var w=Zi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&v){case 2:gi(Zi),Zi.effectTag&=-3;break;case 6:gi(Zi),Zi.effectTag&=-3,vi(Zi.alternate,Zi);break;case 1024:Zi.effectTag&=-1025;break;case 1028:Zi.effectTag&=-1025,vi(Zi.alternate,Zi);break;case 4:vi(Zi.alternate,Zi);break;case 8:xi(i,u=Zi,c),fi(u)}Zi=Zi.nextEffect}}catch(S){if(null===Zi)throw Error(o(330));Mc(Zi,S),Zi=Zi.nextEffect}}while(null!==Zi);if(k=kn,w=mn(),v=k.focusedElem,c=k.selectionRange,w!==v&&v&&v.ownerDocument&&fn(v.ownerDocument.documentElement,v)){null!==c&&gn(v)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(k,v.value.length)):(k=(w=v.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=v.textContent.length,i=Math.min(c.start,u),c=void 0===c.end?i:Math.min(c.end,u),!k.extend&&i>c&&(u=c,c=i,i=u),u=pn(v,i),h=pn(v,c),u&&h&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==h.node||k.focusOffset!==h.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),i>c?(k.addRange(w),k.extend(h.node,h.offset)):(w.setEnd(h.node,h.offset),k.addRange(w))))),w=[];for(k=v;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof v.focus&&v.focus(),v=0;v<w.length;v++)(k=w[v]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qe=!!wn,kn=wn=null,t.current=n,Zi=r;do{try{for(v=t;null!==Zi;){var I=Zi.effectTag;if(36&I&&di(v,Zi.alternate,Zi),128&I){w=void 0;var N=Zi.ref;if(null!==N){var T=Zi.stateNode;Zi.tag,w=T,"function"===typeof N?N(w):N.current=w}}Zi=Zi.nextEffect}}catch(S){if(null===Zi)throw Error(o(330));Mc(Zi,S),Zi=Zi.nextEffect}}while(null!==Zi);Zi=null,Wr(),Bi=s}else t.current=n;if(nc)nc=!1,ac=t,rc=e;else for(Zi=r;null!==Zi;)e=Zi.nextEffect,Zi.nextEffect=null,Zi=e;if(0===(e=t.firstPendingTime)&&(ec=null),1073741823===e?t===ic?oc++:(oc=0,ic=t):oc=0,"function"===typeof Pc&&Pc(n.stateNode,a),fc(t),$i)throw $i=!1,t=tc,tc=null,t;return(Bi&Ri)!==Ai||Jr(),null}function Fc(){for(;null!==Zi;){var t=Zi.effectTag;0!==(256&t)&&li(Zi.alternate,Zi),0===(512&t)||nc||(nc=!0,Yr(97,(function(){return Dc(),null}))),Zi=Zi.nextEffect}}function Dc(){if(90!==rc){var t=97<rc?97:rc;return rc=90,Xr(t,_c)}}function _c(){if(null===ac)return!1;var t=ac;if(ac=null,(Bi&(Fi|Di))!==Ai)throw Error(o(331));var e=Bi;for(Bi|=Di,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ui(5,n),hi(5,n)}}catch(a){if(null===t)throw Error(o(330));Mc(t,a)}n=t.nextEffect,t.nextEffect=null,t=n}return Bi=e,Jr(),!0}function Oc(t,e,n){fs(t,e=Ii(t,e=si(n,e),1073741823)),null!==(t=dc(t,1073741823))&&fc(t)}function Mc(t,e){if(3===t.tag)Oc(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){Oc(n,t,e);break}if(1===n.tag){var a=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===ec||!ec.has(a))){fs(n,t=Ni(n,t=si(e,t),1073741823)),null!==(n=dc(n,1073741823))&&fc(n);break}}n=n.return}}function Lc(t,e,n){var a=t.pingCache;null!==a&&a.delete(e),Wi===t&&Ui===n?Gi===zi||Gi===Li&&1073741823===ji&&jr()-Qi<Ji?xc(t,Ui):Yi=!0:Yc(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,fc(t)))}function zc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=uc(e=lc(),t,null)),null!==(t=dc(t,e))&&fc(t)}Ti=function(t,e,n){var a=e.expirationTime;if(null!==t){var r=e.pendingProps;if(t.memoizedProps!==r||br.current)Lo=!0;else{if(a<n){switch(Lo=!1,e.tag){case 3:jo(e),Oo();break;case 5:if(Bs(e),4&e.mode&&1!==n&&r.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:wr(e.type)&&Tr(e);break;case 4:zs(e,e.stateNode.containerInfo);break;case 10:a=e.memoizedProps.value,r=e.type._context,mr(es,r._currentValue),r._currentValue=a;break;case 13:if(null!==e.memoizedState)return 0!==(a=e.child.childExpirationTime)&&a>=n?Jo(t,e,n):(mr(Vs,1&Vs.current),null!==(e=ei(t,e,n))?e.sibling:null);mr(Vs,1&Vs.current);break;case 19:if(a=e.childExpirationTime>=n,0!==(64&t.effectTag)){if(a)return ti(t,e,n);e.effectTag|=64}if(null!==(r=e.memoizedState)&&(r.rendering=null,r.tail=null),mr(Vs,Vs.current),!a)return null}return ei(t,e,n)}Lo=!1}}else Lo=!1;switch(e.expirationTime=0,e.tag){case 2:if(a=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,r=vr(e,yr.current),cs(e,n),r=$s(null,e,a,t,r,n),e.effectTag|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,wr(a)){var s=!0;Tr(e)}else s=!1;e.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,hs(e);var i=a.getDerivedStateFromProps;"function"===typeof i&&vs(e,a,i,t),r.updater=ws,e.stateNode=r,r._reactInternalFiber=e,Ts(e,a,t,n),e=Ho(null,e,a,!0,s,n)}else e.tag=0,zo(null,e,r,n),e=e.child;return e;case 16:t:{if(r=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(r),1!==r._status)throw r._result;switch(r=r._result,e.type=r,s=e.tag=function(t){if("function"===typeof t)return Uc(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===ct)return 11;if(t===ht)return 14}return 2}(r),t=ts(r,t),s){case 0:e=Uo(null,e,r,t,n);break t;case 1:e=Go(null,e,r,t,n);break t;case 11:e=Po(null,e,r,t,n);break t;case 14:e=Bo(null,e,r,ts(r.type,t),a,n);break t}throw Error(o(306,r,""))}return e;case 0:return a=e.type,r=e.pendingProps,Uo(t,e,a,r=e.elementType===a?r:ts(a,r),n);case 1:return a=e.type,r=e.pendingProps,Go(t,e,a,r=e.elementType===a?r:ts(a,r),n);case 3:if(jo(e),a=e.updateQueue,null===t||null===a)throw Error(o(282));if(a=e.pendingProps,r=null!==(r=e.memoizedState)?r.element:null,ds(t,e),gs(e,a,null,n),(a=e.memoizedState.element)===r)Oo(),e=ei(t,e,n);else{if((r=e.stateNode.hydrate)&&(Co=Cn(e.stateNode.containerInfo.firstChild),So=e,r=Eo=!0),r)for(n=Fs(e,null,a,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else zo(t,e,a,n),Oo();e=e.child}return e;case 5:return Bs(e),null===t&&Fo(e),a=e.type,r=e.pendingProps,s=null!==t?t.memoizedProps:null,i=r.children,Nn(a,r)?i=null:null!==s&&Nn(a,s)&&(e.effectTag|=16),Vo(t,e),4&e.mode&&1!==n&&r.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(zo(t,e,i,n),e=e.child),e;case 6:return null===t&&Fo(e),null;case 13:return Jo(t,e,n);case 4:return zs(e,e.stateNode.containerInfo),a=e.pendingProps,null===t?e.child=Rs(e,null,a,n):zo(t,e,a,n),e.child;case 11:return a=e.type,r=e.pendingProps,Po(t,e,a,r=e.elementType===a?r:ts(a,r),n);case 7:return zo(t,e,e.pendingProps,n),e.child;case 8:case 12:return zo(t,e,e.pendingProps.children,n),e.child;case 10:t:{a=e.type._context,r=e.pendingProps,i=e.memoizedProps,s=r.value;var c=e.type._context;if(mr(es,c._currentValue),c._currentValue=s,null!==i)if(c=i.value,0===(s=Ga(c,s)?0:0|("function"===typeof a._calculateChangedBits?a._calculateChangedBits(c,s):1073741823))){if(i.children===r.children&&!br.current){e=ei(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var l=c.dependencies;if(null!==l){i=c.child;for(var u=l.firstContext;null!==u;){if(u.context===a&&0!==(u.observedBits&s)){1===c.tag&&((u=ps(n,null)).tag=2,fs(c,u)),c.expirationTime<n&&(c.expirationTime=n),null!==(u=c.alternate)&&u.expirationTime<n&&(u.expirationTime=n),is(c.return,n),l.expirationTime<n&&(l.expirationTime=n);break}u=u.next}}else i=10===c.tag&&c.type===e.type?null:c.child;if(null!==i)i.return=c;else for(i=c;null!==i;){if(i===e){i=null;break}if(null!==(c=i.sibling)){c.return=i.return,i=c;break}i=i.return}c=i}zo(t,e,r.children,n),e=e.child}return e;case 9:return r=e.type,a=(s=e.pendingProps).children,cs(e,n),a=a(r=ls(r,s.unstable_observedBits)),e.effectTag|=1,zo(t,e,a,n),e.child;case 14:return s=ts(r=e.type,e.pendingProps),Bo(t,e,r,s=ts(r.type,s),a,n);case 15:return Wo(t,e,e.type,e.pendingProps,a,n);case 17:return a=e.type,r=e.pendingProps,r=e.elementType===a?r:ts(a,r),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,wr(a)?(t=!0,Tr(e)):t=!1,cs(e,n),Is(e,a,r),Ts(e,a,r,n),Ho(null,e,a,!0,t,n);case 19:return ti(t,e,n)}throw Error(o(156,e.tag))};var Pc=null,Bc=null;function Wc(t,e,n,a){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Vc(t,e,n,a){return new Wc(t,e,n,a)}function Uc(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Gc(t,e){var n=t.alternate;return null===n?((n=Vc(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Hc(t,e,n,a,r,s){var i=2;if(a=t,"function"===typeof t)Uc(t)&&(i=1);else if("string"===typeof t)i=5;else t:switch(t){case nt:return jc(n.children,r,s,e);case it:i=8,r|=7;break;case at:i=8,r|=1;break;case rt:return(t=Vc(12,n,e,8|r)).elementType=rt,t.type=rt,t.expirationTime=s,t;case lt:return(t=Vc(13,n,e,r)).type=lt,t.elementType=lt,t.expirationTime=s,t;case ut:return(t=Vc(19,n,e,r)).elementType=ut,t.expirationTime=s,t;default:if("object"===typeof t&&null!==t)switch(t.$$typeof){case st:i=10;break t;case ot:i=9;break t;case ct:i=11;break t;case ht:i=14;break t;case dt:i=16,a=null;break t;case pt:i=22;break t}throw Error(o(130,null==t?t:typeof t,""))}return(e=Vc(i,n,e,r)).elementType=t,e.type=a,e.expirationTime=s,e}function jc(t,e,n,a){return(t=Vc(7,t,a,e)).expirationTime=n,t}function Kc(t,e,n){return(t=Vc(6,t,null,e)).expirationTime=n,t}function qc(t,e,n){return(e=Vc(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Xc(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Yc(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Qc(t,e){var n=t.firstSuspendedTime,a=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(a>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Jc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Zc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function $c(t,e,n,a){var r=e.current,s=lc(),i=bs.suspense;s=uc(s,r,i);t:if(n){e:{if(te(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(o(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(wr(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(o(171))}if(1===n.tag){var l=n.type;if(wr(l)){n=Nr(n,l,c);break t}}n=c}else n=gr;return null===e.context?e.context=n:e.pendingContext=n,(e=ps(s,i)).payload={element:t},null!==(a=void 0===a?null:a)&&(e.callback=a),fs(r,e),hc(r,s),s}function tl(t){return(t=t.current).child?(t.child.tag,t.child.stateNode):null}function el(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function nl(t,e){el(t,e),(t=t.alternate)&&el(t,e)}function al(t,e,n){var a=new Xc(t,e,n=null!=n&&!0===n.hydrate),r=Vc(3,null,null,2===e?7:1===e?3:0);a.current=r,r.stateNode=a,hs(r),t[Dn]=a.current,n&&0!==e&&function(t,e){var n=$t(e);Ce.forEach((function(t){me(t,e,n)})),Ee.forEach((function(t){me(t,e,n)}))}(0,9===t.nodeType?t:t.ownerDocument),this._internalRoot=a}function rl(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function sl(t,e,n,a,r){var s=n._reactRootContainer;if(s){var o=s._internalRoot;if("function"===typeof r){var i=r;r=function(){var t=tl(o);i.call(t)}}$c(e,o,t,r)}else{if(s=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new al(t,0,e?{hydrate:!0}:void 0)}(n,a),o=s._internalRoot,"function"===typeof r){var c=r;r=function(){var t=tl(o);c.call(t)}}bc((function(){$c(e,o,t,r)}))}return tl(o)}function ol(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rl(e))throw Error(o(200));return function(t,e,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:et,key:null==a?null:""+a,children:t,containerInfo:e,implementation:n}}(t,e,null,n)}al.prototype.render=function(t){$c(t,this._internalRoot,null,null)},al.prototype.unmount=function(){var t=this._internalRoot,e=t.containerInfo;$c(null,t,null,(function(){e[Dn]=null}))},ge=function(t){if(13===t.tag){var e=$r(lc(),150,100);hc(t,e),nl(t,e)}},ye=function(t){13===t.tag&&(hc(t,3),nl(t,3))},be=function(t){if(13===t.tag){var e=lc();hc(t,e=uc(e,t,null)),nl(t,e)}},E=function(t,e,n){switch(e){case"input":if(Tt(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var a=n[e];if(a!==t&&a.form===t.form){var r=Ln(a);if(!r)throw Error(o(90));wt(a),Tt(a,r)}}}break;case"textarea":Dt(t,n);break;case"select":null!=(e=n.value)&&At(t,!!n.multiple,e,!1)}},O=yc,M=function(t,e,n,a,r){var s=Bi;Bi|=4;try{return Xr(98,t.bind(null,e,n,a,r))}finally{(Bi=s)===Ai&&Jr()}},L=function(){(Bi&(1|Fi|Di))===Ai&&(function(){if(null!==sc){var t=sc;sc=null,t.forEach((function(t,e){Zc(e,t),fc(e)})),Jr()}}(),Dc())},z=function(t,e){var n=Bi;Bi|=2;try{return t(e)}finally{(Bi=n)===Ai&&Jr()}};var il={Events:[On,Mn,Ln,S,I,Gn,function(t){se(t,Un)},D,_,Ze,ce,Dc,{current:!1}]};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);Pc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64===(64&t.current.effectTag))}catch(a){}},Bc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(a){}}}catch(a){}})(r({},t,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Q.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=ae(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:_n,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}),e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=il,e.createPortal=ol,e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"===typeof t.render)throw Error(o(188));throw Error(o(268,Object.keys(t)))}return t=null===(t=ae(e))?null:t.stateNode},e.flushSync=function(t,e){if((Bi&(Fi|Di))!==Ai)throw Error(o(187));var n=Bi;Bi|=1;try{return Xr(99,t.bind(null,e))}finally{Bi=n,Jr()}},e.hydrate=function(t,e,n){if(!rl(e))throw Error(o(200));return sl(null,t,e,!0,n)},e.render=function(t,e,n){if(!rl(e))throw Error(o(200));return sl(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!rl(t))throw Error(o(40));return!!t._reactRootContainer&&(bc((function(){sl(null,null,t,!1,(function(){t._reactRootContainer=null,t[Dn]=null}))})),!0)},e.unstable_batchedUpdates=yc,e.unstable_createPortal=function(t,e){return ol(t,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(t,e,n,a){if(!rl(n))throw Error(o(200));if(null==t||void 0===t._reactInternalFiber)throw Error(o(38));return sl(t,e,n,!1,a)},e.version="16.13.1"},950:(t,e,n)=>{"use strict";!function t(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}(),t.exports=n(730)},29:function(t,e,n){var a;a=function(t){return function(t){var e={};function n(a){if(e[a])return e[a].exports;var r=e[a]={i:a,l:!1,exports:{}};return t[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(a,r,function(e){return t[e]}.bind(null,r));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(t,e,n){"use strict";n.r(e);var a=n("react"),r=function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},t(e,n)};return function(e,n){function a(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),s=function(){return s=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t},s.apply(this,arguments)},o=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return e?new Promise((function(n,a){e.call(navigator,t,n,a)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(t){function e(e){var n=t.call(this,e)||this;return n.canvas=null,n.ctx=null,n.state={hasUserMedia:!1},n}return r(e,t),e.prototype.componentDidMount=function(){var t=this.state,e=this.props;i()?t.hasUserMedia||this.requestUserMedia():e.onUserMediaError("getUserMedia not supported")},e.prototype.componentDidUpdate=function(t){var e=this.props;if(i()){var n=JSON.stringify(t.audioConstraints)!==JSON.stringify(e.audioConstraints),a=JSON.stringify(t.videoConstraints)!==JSON.stringify(e.videoConstraints),r=t.minScreenshotWidth!==e.minScreenshotWidth,s=t.minScreenshotHeight!==e.minScreenshotHeight;(a||r||s)&&(this.canvas=null,this.ctx=null),(n||a)&&(this.stopAndCleanup(),this.requestUserMedia())}else e.onUserMediaError("getUserMedia not supported")},e.prototype.componentWillUnmount=function(){this.stopAndCleanup()},e.prototype.stopAndCleanup=function(){var t=this.state;t.hasUserMedia&&(this.stream&&(this.stream.getVideoTracks&&this.stream.getAudioTracks?(this.stream.getVideoTracks().map((function(t){return t.stop()})),this.stream.getAudioTracks().map((function(t){return t.stop()}))):this.stream.stop()),t.src&&window.URL.revokeObjectURL(t.src))},e.prototype.getScreenshot=function(t){var e=this.state,n=this.props;if(!e.hasUserMedia)return null;var a=this.getCanvas(t);return a&&a.toDataURL(n.screenshotFormat,n.screenshotQuality)},e.prototype.getCanvas=function(t){var e=this.state,n=this.props;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var a=this.video.videoWidth,r=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=a/r;r=(a=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&r<n.minScreenshotHeight&&(a=(r=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===t||void 0===t?void 0:t.width)||a,this.canvas.height=(null===t||void 0===t?void 0:t.height)||r,this.ctx=this.canvas.getContext("2d")}var o=this.ctx,i=this.canvas;return o&&i&&(n.mirrored&&(o.translate(i.width,0),o.scale(-1,1)),o.imageSmoothingEnabled=n.imageSmoothing,o.drawImage(this.video,0,0,i.width,i.height),n.mirrored&&(o.scale(-1,1),o.translate(-i.width,0))),i},e.prototype.requestUserMedia=function(){var t=this,e=this.props,n=function(n,a){var r={video:"undefined"===typeof a||a};e.audio&&(r.audio="undefined"===typeof n||n),navigator.mediaDevices.getUserMedia(r).then((function(e){t.handleUserMedia(null,e)})).catch((function(e){t.handleUserMedia(e)}))};if("mediaDevices"in navigator)n(e.audioConstraints,e.videoConstraints);else{var a=function(t){return{optional:[{sourceId:t}]}},r=function(t){var e=t.deviceId;return"string"===typeof e?e:Array.isArray(e)&&e.length>0?e[0]:"object"===typeof e&&e.ideal?e.ideal:null};MediaStreamTrack.getSources((function(t){var s=null,o=null;t.forEach((function(t){"audio"===t.kind?s=t.id:"video"===t.kind&&(o=t.id)}));var i=r(e.audioConstraints);i&&(s=i);var c=r(e.videoConstraints);c&&(o=c),n(a(s),a(o))}))}},e.prototype.handleUserMedia=function(t,e){var n=this.props;if(t||!e)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(t);this.stream=e;try{this.video&&(this.video.srcObject=e),this.setState({hasUserMedia:!0})}catch(a){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(e)})}n.onUserMedia(e)},e.prototype.render=function(){var t=this,e=this.state,n=this.props,r=n.audio,i=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),c=n.style,l=void 0===c?{}:c,u=o(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),h=i?s(s({},l),{transform:(l.transform||"")+" scaleX(-1)"}):l;return a.createElement("video",s({autoPlay:!0,src:e.src,muted:r,playsInline:!0,ref:function(e){t.video=e},style:h},u))},e.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},e}(a.Component);e.default=c},react:function(e,n){e.exports=t}}).default},t.exports=a(n(43))},202:(t,e,n)=>{"use strict";var a=n(123),r="function"===typeof Symbol&&Symbol.for,s=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,c=r?Symbol.for("react.strict_mode"):60108,l=r?Symbol.for("react.profiler"):60114,u=r?Symbol.for("react.provider"):60109,h=r?Symbol.for("react.context"):60110,d=r?Symbol.for("react.forward_ref"):60112,p=r?Symbol.for("react.suspense"):60113,f=r?Symbol.for("react.memo"):60115,m=r?Symbol.for("react.lazy"):60116,g="function"===typeof Symbol&&Symbol.iterator;function y(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function v(t,e,n){this.props=t,this.context=e,this.refs=x,this.updater=n||b}function w(){}function k(t,e,n){this.props=t,this.context=e,this.refs=x,this.updater=n||b}v.prototype.isReactComponent={},v.prototype.setState=function(t,e){if("object"!==typeof t&&"function"!==typeof t&&null!=t)throw Error(y(85));this.updater.enqueueSetState(this,t,e,"setState")},v.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},w.prototype=v.prototype;var I=k.prototype=new w;I.constructor=k,a(I,v.prototype),I.isPureReactComponent=!0;var N={current:null},T=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function C(t,e,n){var a,r={},o=null,i=null;if(null!=e)for(a in void 0!==e.ref&&(i=e.ref),void 0!==e.key&&(o=""+e.key),e)T.call(e,a)&&!S.hasOwnProperty(a)&&(r[a]=e[a]);var c=arguments.length-2;if(1===c)r.children=n;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];r.children=l}if(t&&t.defaultProps)for(a in c=t.defaultProps)void 0===r[a]&&(r[a]=c[a]);return{$$typeof:s,type:t,key:o,ref:i,props:r,_owner:N.current}}function E(t){return"object"===typeof t&&null!==t&&t.$$typeof===s}var A=/\/+/g,R=[];function F(t,e,n,a){if(R.length){var r=R.pop();return r.result=t,r.keyPrefix=e,r.func=n,r.context=a,r.count=0,r}return{result:t,keyPrefix:e,func:n,context:a,count:0}}function D(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>R.length&&R.push(t)}function _(t,e,n,a){var r=typeof t;"undefined"!==r&&"boolean"!==r||(t=null);var i=!1;if(null===t)i=!0;else switch(r){case"string":case"number":i=!0;break;case"object":switch(t.$$typeof){case s:case o:i=!0}}if(i)return n(a,t,""===e?"."+M(t,0):e),1;if(i=0,e=""===e?".":e+":",Array.isArray(t))for(var c=0;c<t.length;c++){var l=e+M(r=t[c],c);i+=_(r,l,n,a)}else if(null===t||"object"!==typeof t?l=null:l="function"===typeof(l=g&&t[g]||t["@@iterator"])?l:null,"function"===typeof l)for(t=l.call(t),c=0;!(r=t.next()).done;)i+=_(r=r.value,l=e+M(r,c++),n,a);else if("object"===r)throw n=""+t,Error(y(31,"[object Object]"===n?"object with keys {"+Object.keys(t).join(", ")+"}":n,""));return i}function O(t,e,n){return null==t?0:_(t,"",e,n)}function M(t,e){return"object"===typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function L(t,e){t.func.call(t.context,e,t.count++)}function z(t,e,n){var a=t.result,r=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?P(t,a,n,(function(t){return t})):null!=t&&(E(t)&&(t=function(t,e){return{$$typeof:s,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,r+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(A,"$&/")+"/")+n)),a.push(t))}function P(t,e,n,a,r){var s="";null!=n&&(s=(""+n).replace(A,"$&/")+"/"),O(t,z,e=F(e,s,a,r)),D(e)}var B={current:null};function W(){var t=B.current;if(null===t)throw Error(y(321));return t}var V={ReactCurrentDispatcher:B,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:N,IsSomeRendererActing:{current:!1},assign:a};e.Children={map:function(t,e,n){if(null==t)return t;var a=[];return P(t,a,null,e,n),a},forEach:function(t,e,n){if(null==t)return t;O(t,L,e=F(null,null,e,n)),D(e)},count:function(t){return O(t,(function(){return null}),null)},toArray:function(t){var e=[];return P(t,e,null,(function(t){return t})),e},only:function(t){if(!E(t))throw Error(y(143));return t}},e.Component=v,e.Fragment=i,e.Profiler=l,e.PureComponent=k,e.StrictMode=c,e.Suspense=p,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=V,e.cloneElement=function(t,e,n){if(null===t||void 0===t)throw Error(y(267,t));var r=a({},t.props),o=t.key,i=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,c=N.current),void 0!==e.key&&(o=""+e.key),t.type&&t.type.defaultProps)var l=t.type.defaultProps;for(u in e)T.call(e,u)&&!S.hasOwnProperty(u)&&(r[u]=void 0===e[u]&&void 0!==l?l[u]:e[u])}var u=arguments.length-2;if(1===u)r.children=n;else if(1<u){l=Array(u);for(var h=0;h<u;h++)l[h]=arguments[h+2];r.children=l}return{$$typeof:s,type:t.type,key:o,ref:i,props:r,_owner:c}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:h,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:u,_context:t},t.Consumer=t},e.createElement=C,e.createFactory=function(t){var e=C.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:d,render:t}},e.isValidElement=E,e.lazy=function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},e.memo=function(t,e){return{$$typeof:f,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return W().useCallback(t,e)},e.useContext=function(t,e){return W().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return W().useEffect(t,e)},e.useImperativeHandle=function(t,e,n){return W().useImperativeHandle(t,e,n)},e.useLayoutEffect=function(t,e){return W().useLayoutEffect(t,e)},e.useMemo=function(t,e){return W().useMemo(t,e)},e.useReducer=function(t,e,n){return W().useReducer(t,e,n)},e.useRef=function(t){return W().useRef(t)},e.useState=function(t){return W().useState(t)},e.version="16.13.1"},43:(t,e,n)=>{"use strict";t.exports=n(202)},234:(t,e)=>{"use strict";var n,a,r,s,o;if("undefined"===typeof window||"function"!==typeof MessageChannel){var i=null,c=null,l=function(){if(null!==i)try{var t=e.unstable_now();i(!0,t),i=null}catch(n){throw setTimeout(l,0),n}},u=Date.now();e.unstable_now=function(){return Date.now()-u},n=function(t){null!==i?setTimeout(n,0,t):(i=t,setTimeout(l,0))},a=function(t,e){c=setTimeout(t,e)},r=function(){clearTimeout(c)},s=function(){return!1},o=e.unstable_forceFrameRate=function(){}}else{var h=window.performance,d=window.Date,p=window.setTimeout,f=window.clearTimeout;if("undefined"!==typeof console){var m=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof h&&"function"===typeof h.now)e.unstable_now=function(){return h.now()};else{var g=d.now();e.unstable_now=function(){return d.now()-g}}var y=!1,b=null,x=-1,v=5,w=0;s=function(){return e.unstable_now()>=w},o=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):v=0<t?Math.floor(1e3/t):5};var k=new MessageChannel,I=k.port2;k.port1.onmessage=function(){if(null!==b){var t=e.unstable_now();w=t+v;try{b(!0,t)?I.postMessage(null):(y=!1,b=null)}catch(n){throw I.postMessage(null),n}}else y=!1},n=function(t){b=t,y||(y=!0,I.postMessage(null))},a=function(t,n){x=p((function(){t(e.unstable_now())}),n)},r=function(){f(x),x=-1}}function N(t,e){var n=t.length;t.push(e);t:for(;;){var a=n-1>>>1,r=t[a];if(!(void 0!==r&&0<C(r,e)))break t;t[a]=e,t[n]=r,n=a}}function T(t){return void 0===(t=t[0])?null:t}function S(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var a=0,r=t.length;a<r;){var s=2*(a+1)-1,o=t[s],i=s+1,c=t[i];if(void 0!==o&&0>C(o,n))void 0!==c&&0>C(c,o)?(t[a]=c,t[i]=n,a=i):(t[a]=o,t[s]=n,a=s);else{if(!(void 0!==c&&0>C(c,n)))break t;t[a]=c,t[i]=n,a=i}}}return e}return null}function C(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var E=[],A=[],R=1,F=null,D=3,_=!1,O=!1,M=!1;function L(t){for(var e=T(A);null!==e;){if(null===e.callback)S(A);else{if(!(e.startTime<=t))break;S(A),e.sortIndex=e.expirationTime,N(E,e)}e=T(A)}}function z(t){if(M=!1,L(t),!O)if(null!==T(E))O=!0,n(P);else{var e=T(A);null!==e&&a(z,e.startTime-t)}}function P(t,n){O=!1,M&&(M=!1,r()),_=!0;var o=D;try{for(L(n),F=T(E);null!==F&&(!(F.expirationTime>n)||t&&!s());){var i=F.callback;if(null!==i){F.callback=null,D=F.priorityLevel;var c=i(F.expirationTime<=n);n=e.unstable_now(),"function"===typeof c?F.callback=c:F===T(E)&&S(E),L(n)}else S(E);F=T(E)}if(null!==F)var l=!0;else{var u=T(A);null!==u&&a(z,u.startTime-n),l=!1}return l}finally{F=null,D=o,_=!1}}function B(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=o;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){O||_||(O=!0,n(P))},e.unstable_getCurrentPriorityLevel=function(){return D},e.unstable_getFirstCallbackNode=function(){return T(E)},e.unstable_next=function(t){switch(D){case 1:case 2:case 3:var e=3;break;default:e=D}var n=D;D=e;try{return t()}finally{D=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=W,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=D;D=t;try{return e()}finally{D=n}},e.unstable_scheduleCallback=function(t,s,o){var i=e.unstable_now();if("object"===typeof o&&null!==o){var c=o.delay;c="number"===typeof c&&0<c?i+c:i,o="number"===typeof o.timeout?o.timeout:B(t)}else o=B(t),c=i;return t={id:R++,callback:s,priorityLevel:t,startTime:c,expirationTime:o=c+o,sortIndex:-1},c>i?(t.sortIndex=c,N(A,t),null===T(E)&&t===T(A)&&(M?r():M=!0,a(z,c-i))):(t.sortIndex=o,N(E,t),O||_||(O=!0,n(P))),t},e.unstable_shouldYield=function(){var t=e.unstable_now();L(t);var n=T(E);return n!==F&&null!==F&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<F.expirationTime||s()},e.unstable_wrapCallback=function(t){var e=D;return function(){var n=D;D=e;try{return t.apply(this,arguments)}finally{D=n}}}},853:(t,e,n)=>{"use strict";t.exports=n(234)},334:(t,e,n)=>{var a=n(359),r=n(66),s=n(16),o=n(538),i=n(288),c=n(262),l=n(430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,t.exports=l},359:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n=function(){var t=4022871197,e=function(e){e=e.toString();for(var n=0;n<e.length;n++){var a=.02519603282416938*(t+=e.charCodeAt(n));a-=t=a>>>0,t=(a*=t)>>>0,t+=4294967296*(a-=t)}return 2.3283064365386963e-10*(t>>>0)};return e}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new o(t),a=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.alea=c}(0,t=n.nmd(t),n.amdD)},262:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,a=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-a|0,e.d=a<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var a=0;a<n.length+20;a++)e.b^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.tychei=c}(0,t=n.nmd(t),n.amdD)},66:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor128=c}(0,t=n.nmd(t),n.amdD)},288:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.w,r=e.X,s=e.i;return e.w=a=a+1640531527|0,n=r[s+34&127],t=r[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[s]=n^t,e.i=s,n+(a^a>>>16)|0},function(t,e){var n,a,r,s,o,i=[],c=128;for(e===(0|e)?(a=e,e=null):(e+="\0",a=0,c=Math.max(c,e.length)),r=0,s=-32;s<c;++s)e&&(a^=e.charCodeAt((s+32)%e.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(e&&e.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;t.w=o,t.X=i,t.i=r}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xor4096=c}(0,t=n.nmd(t),n.amdD)},538:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this;e.next=function(){var t,n,a=e.x,r=e.i;return t=a[r],n=(t^=t>>>7)^t<<24,n^=(t=a[r+1&7])^t>>>10,n^=(t=a[r+3&7])^t>>>3,n^=(t=a[r+4&7])^t<<7,t=a[r+7&7],n^=(t^=t<<13)^t<<9,a[r]=n,e.i=r+1&7,n},function(t,e){var n,a=[];if(e===(0|e))a[0]=e;else for(e=""+e,n=0;n<e.length;++n)a[7&n]=a[7&n]<<15^e.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],t.x=a,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorshift7=c}(0,t=n.nmd(t),n.amdD)},16:function(t,e,n){var a;!function(t,r,s){function o(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var a=0;a<n.length+64;a++)e.x^=0|n.charCodeAt(a),a==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new o(t),a=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(e,n,e,r))||(r.exports=a):this.xorwow=c}(0,t=n.nmd(t),n.amdD)},430:(t,e,n)=>{var a;!function(r,s){var o,i=this,c=256,l="random",u=s.pow(c,6),h=s.pow(2,52),d=2*h,p=c-1;function f(t,e,n){var a=[],p=b(y((e=1==e?{entropy:!0}:e||{}).entropy?[t,x(r)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(c):(t=new Uint8Array(c),(i.crypto||i.msCrypto).getRandomValues(t)),x(t)}catch(a){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,x(r)]}}():t,3),a),f=new m(a),v=function(){for(var t=f.g(6),e=u,n=0;t<h;)t=(t+n)*c,e*=c,n=f.g(1);for(;t>=d;)t/=2,e/=2,n>>>=1;return(t+n)/e};return v.int32=function(){return 0|f.g(4)},v.quick=function(){return f.g(4)/4294967296},v.double=v,b(x(f.S),r),(e.pass||n||function(t,e,n,a){return a&&(a.S&&g(a,f),t.state=function(){return g(f,{})}),n?(s[l]=t,e):t})(v,p,"global"in e?e.global:this==s,e.state)}function m(t){var e,n=t.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(t=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=p&s+t[r%n]+(e=o[r])],o[s]=e;(a.g=function(t){for(var e,n=0,r=a.i,s=a.j,o=a.S;t--;)e=o[r=p&r+1],n=n*c+o[p&(o[r]=o[s=p&s+e])+(o[s]=e)];return a.i=r,a.j=s,n})(c)}function g(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function y(t,e){var n,a=[],r=typeof t;if(e&&"object"==r)for(n in t)try{a.push(y(t[n],e-1))}catch(s){}return a.length?a:"string"==r?t:t+"\0"}function b(t,e){for(var n,a=t+"",r=0;r<a.length;)e[p&r]=p&(n^=19*e[p&r])+a.charCodeAt(r++);return x(e)}function x(t){return String.fromCharCode.apply(0,t)}if(s["seed"+l]=f,b(s.random(),r),t.exports){t.exports=f;try{o=n(996)}catch(v){}}else void 0===(a=function(){return f}.call(e,n,e,t))||(t.exports=a)}([],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},996:()=>{}},e={};function n(a){var r=e[a];if(void 0!==r)return r.exports;var s=e[a]={id:a,loaded:!1,exports:{}};return t[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),(()=>{"use strict";var t={};n.r(t),n.d(t,{assertParamsValid:()=>ws,computeFlatOffset:()=>Os,computeOutShape:()=>Is,getNormalizedAxes:()=>Cs,isSliceContinous:()=>_s,maskToAxes:()=>ks,parseSliceParams:()=>Ms,sliceInfo:()=>Ls,startForAxis:()=>Fs,startIndicesWithElidedDims:()=>Es,stopForAxis:()=>Ds,stopIndicesWithElidedDims:()=>As,stridesForAxis:()=>Rs,stridesWithElidedDims:()=>Ns});var e={};n.r(e),n.d(e,{collectGatherOpShapeInfo:()=>mu,computeOutShape:()=>fu,segOpComputeOptimalWindowSize:()=>pu});var a={};n.r(a),n.d(a,{ERF_A1:()=>Vl,ERF_A2:()=>Ul,ERF_A3:()=>Gl,ERF_A4:()=>Hl,ERF_A5:()=>jl,ERF_P:()=>Wl,PARALLELIZE_THRESHOLD:()=>Sl,SELU_SCALE:()=>Bl,SELU_SCALEALPHA:()=>Pl,applyActivation:()=>bc,assertAndGetBroadcastShape:()=>Vo,assertAxesAreInnerMostDims:()=>gi,assertParamsConsistent:()=>Nl,assignToTypedArray:()=>$l,axesAreInnerMostDims:()=>di,calculateShapes:()=>zl,checkEinsumDimSizes:()=>cu,combineLocations:()=>pi,complexWithEvenIndex:()=>Ql,complexWithOddIndex:()=>Jl,computeConv2DInfo:()=>ro,computeConv3DInfo:()=>so,computeDefaultPad:()=>oo,computeDilation2DInfo:()=>eo,computeOptimalWindowSize:()=>Cl,computeOutAndReduceShapes:()=>fi,computeOutShape:()=>Tl,computePool2DInfo:()=>no,computePool3DInfo:()=>ao,convertConv2DDataFormat:()=>fo,decodeEinsumEquation:()=>ou,eitherStridesOrDilationsAreOne:()=>po,expandShapeToKeepDim:()=>mi,exponent:()=>eu,exponents:()=>tu,fromStringArrayToUint8:()=>yu,fromUint8ToStringArray:()=>gu,getAxesPermutation:()=>yi,getBroadcastDims:()=>Bo,getComplexWithIndex:()=>Zl,getEinsumComputePath:()=>lu,getEinsumPermutation:()=>iu,getFusedBiasGradient:()=>yc,getFusedDyActivation:()=>gc,getImageCenter:()=>El,getInnerMostAxes:()=>xi,getPermuted:()=>Rl,getReductionAxes:()=>Wo,getReshaped:()=>Al,getReshapedPermuted:()=>Fl,getSliceBeginCoords:()=>Dl,getSliceSize:()=>_l,getUndoAxesPermutation:()=>bi,isIdentityPermutation:()=>uu,log:()=>ql,mergeRealAndImagArrays:()=>Xl,prepareAndValidate:()=>Ol,prepareSplitSize:()=>du,segment_util:()=>e,shouldFuse:()=>xc,slice_util:()=>t,splitRealAndImagArrays:()=>Yl,tupleValuesAreOne:()=>ho,upcastType:()=>Ja,validateInput:()=>Ll,validateUpdateShape:()=>Ml,warn:()=>Kl});var r={};n.r(r),n.d(r,{addImpl:()=>tv,bincountImpl:()=>Kv,bincountReduceImpl:()=>qv,ceilImpl:()=>Qv,concatImpl:()=>nw,expImpl:()=>Yw,expm1Impl:()=>tk,floorImpl:()=>yk,gatherV2Impl:()=>Sk,greaterImpl:()=>Ek,lessImpl:()=>Vk,linSpaceImpl:()=>qk,logImpl:()=>Yk,maxImpl:()=>uI,maximumImpl:()=>pI,minimumImpl:()=>II,multiplyImpl:()=>Rw,negImpl:()=>_I,prodImpl:()=>tN,rangeImpl:()=>nN,rsqrtImpl:()=>fN,simpleAbsImpl:()=>lv,sliceImpl:()=>Uv,sparseReshapeImpl:()=>ON,stridedSliceImpl:()=>KN,subImpl:()=>ok,tileImpl:()=>JN,topKImpl:()=>$N,transposeImpl:()=>gv,uniqueImpl:()=>oT});var s={};n.r(s),n.d(s,{json:()=>sO});var o={};n.r(o),n.d(o,{json:()=>oO});var i={};n.r(i),n.d(i,{json:()=>iO});var c={};n.r(c),n.d(c,{json:()=>cO});var l={};n.r(l),n.d(l,{json:()=>lO});var u={};n.r(u),n.d(u,{json:()=>uO});var h={};n.r(h),n.d(h,{json:()=>hO});var d={};n.r(d),n.d(d,{json:()=>dO});var p={};n.r(p),n.d(p,{json:()=>pO});var f={};n.r(f),n.d(f,{json:()=>fO});var m={};n.r(m),n.d(m,{json:()=>mO});var g={};n.r(g),n.d(g,{json:()=>gO});var y={};n.r(y),n.d(y,{json:()=>yO});var b={};n.r(b),n.d(b,{json:()=>bO});var x={};n.r(x),n.d(x,{json:()=>xO});var v={};n.r(v),n.d(v,{json:()=>vO});var w={};n.r(w),n.d(w,{json:()=>wO});var k=n(43),I=n(950);class N{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class T{refCount(t){return S("refCount")}incRef(t){return S("incRef")}timerAvailable(){return!0}time(t){return S("time")}read(t){return S("read")}readSync(t){return S("readSync")}numDataIds(){return S("numDataIds")}disposeData(t,e){return S("disposeData")}write(t,e,n){return S("write")}move(t,e,n,a,r){return S("move")}memory(){return S("memory")}floatPrecision(){return S("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return S("dispose")}}function S(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function C(t){let e=t.length,n=0,a=0;for(;e>0;)a=Math.random()*e|0,e--,n=t[e],t[e]=t[a],t[a]=n}function E(t,e,n){return Math.max(t,Math.min(e,n))}function A(t){return t%2===0?t:t+1}function R(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function F(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";R(M(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}function D(t){R(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function _(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||K(t)&&!n)for(let a=0;a<t.length;++a)_(t[a],e,n);else e.push(t);return e}function O(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function M(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function L(t){return t%1===0}function z(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function P(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function B(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise(((a,r)=>{let s=0;const o=()=>{if(t())return void a();s++;const i=e(s);null!=n&&s>=n?r():setTimeout(o,i)};o()}))}function W(t,e){let n=1,a=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(t[s]<0)throw Error("Shapes can not be < 0. Found ".concat(t[s]," at dim ").concat(s));if(-1===a){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const r=t.slice();return r[a]=e/n,r}function V(t,e){const n=e.length;return R((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t))),R(t.every((t=>L(t))),(()=>"All values in axis param must be integers but "+"got axis ".concat(t))),t.map((t=>t<0?n+t:t))}function U(t,e){const n=[],a=[],r=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||r?null:V(e,t).sort();let o=0;for(let i=0;i<t.length;++i){if(null!=s){if(s[o]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===t[i]&&(n.push(t[i]),a.push(i)),s[o]<=i&&o++}1!==t[i]&&(n.push(t[i]),a.push(i))}return{newShape:n,keptDims:a}}function G(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));n=new Uint8Array(e)}return n}function H(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function j(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function K(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function q(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function X(t){return"string"===typeof t||t instanceof String}function Y(t){return"number"===typeof t}function Q(t){return Array.isArray(t)?Q(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":Y(t)?"float32":X(t)?"string":"boolean"===typeof t?"bool":"float32"}function J(t){return!!(t&&t.constructor&&t.call&&t.apply)}function Z(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function $(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let a=e-3;a>=0;--a)n[a]=n[a+1]*t[a+1];return n}function tt(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===e.length){const s=e[0]*(a?2:1);for(let e=0;e<s;e++)r[e]=n[t+e]}else{const s=e[0],o=e.slice(1),i=o.reduce(((t,e)=>t*e))*(a?2:1);for(let e=0;e<s;e++)r[e]=tt(t+e*i,o,n,a)}return r}function et(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===t.length)return e[0];const a=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===a)return[];if(a!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length).concat(n?" for a complex tensor":"","."));return tt(0,t,e,n)}function nt(t,e){const n=at(t,e);for(let a=0;a<n.length;a++)n[a]=1;return n}function at(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function rt(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return et(t,new Float32Array(n));if("int32"===e)return et(t,new Int32Array(n));if("bool"===e)return et(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function st(t){t.forEach((e=>{R(Number.isInteger(e)&&e>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"].")))}))}function ot(t,e,n){if(0===e)return 0;if(1===e)return t[0];let a=t[t.length-1];for(let r=0;r<t.length-1;++r)a+=n[r]*t[r];return a}function it(t,e,n){if(0===e)return[];if(1===e)return[t];const a=new Array(e);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(t/n[r]),t-=a[r]*n[r];return a[a.length-1]=t,a}function ct(t){return t&&t.then&&"function"===typeof t.then}const lt="tfjsflags";class ut{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ht,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(ct(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(lt in t){t[lt].split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)}))}}}function ht(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,a[0],a[1]),a.join("=")})),e}function dt(){return ft}let pt,ft=null;function mt(){if(null==pt){let t;if("undefined"!==typeof window)t=window;else if("undefined"!==typeof n.g)t=n.g;else if("undefined"!==typeof process)t=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");t=self}pt=t}return pt}function gt(t,e){const n=function(){const t=mt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const a=e();return n.set(t,a),n.get(t)}}const yt="Abs",bt="Acos",xt="Acosh",vt="Add",wt="AddN",kt="All",It="Any",Nt="ArgMax",Tt="ArgMin",St="Asin",Ct="Asinh",Et="Atan",At="Atanh",Rt="Atan2",Ft="AvgPool",Dt="AvgPoolGrad",_t="AvgPool3D",Ot="AvgPool3DGrad",Mt="BatchMatMul",Lt="BatchToSpaceND",zt="Bincount",Pt="Cast",Bt="Ceil",Wt="ClipByValue",Vt="Complex",Ut="ComplexAbs",Gt="Concat",Ht="Conv2D",jt="Conv2DBackpropFilter",Kt="Conv2DBackpropInput",qt="Conv3D",Xt="Conv3DBackpropFilterV2",Yt="Conv3DBackpropInputV2",Qt="Cos",Jt="Cosh",Zt="Cumsum",$t="CropAndResize",te="DenseBincount",ee="DepthToSpace",ne="DepthwiseConv2dNative",ae="DepthwiseConv2dNativeBackpropFilter",re="DepthwiseConv2dNativeBackpropInput",se="Diag",oe="Dilation2D",ie="Dilation2DBackpropInput",ce="Dilation2DBackpropFilter",le="RealDiv",ue="Einsum",he="Elu",de="EluGrad",pe="Erf",fe="Equal",me="Exp",ge="ExpandDims",ye="Expm1",be="FFT",xe="Fill",ve="FlipLeftRight",we="Floor",ke="FloorDiv",Ie="FusedBatchNorm",Ne="GatherV2",Te="GatherNd",Se="Greater",Ce="GreaterEqual",Ee="Identity",Ae="IFFT",Re="Imag",Fe="IsFinite",De="IsInf",_e="IsNan",Oe="LeakyRelu",Me="Less",Le="LessEqual",ze="LinSpace",Pe="Log",Be="Log1p",We="LogicalAnd",Ve="LogicalNot",Ue="LogicalOr",Ge="LRN",He="LRNGrad",je="Max",Ke="Maximum",qe="MaxPool",Xe="MaxPoolGrad",Ye="MaxPool3D",Qe="MaxPool3DGrad",Je="MaxPoolWithArgmax",Ze="Mean",$e="Min",tn="Minimum",en="MirrorPad",nn="Mod",an="Multinomial",rn="Multiply",sn="Neg",on="NotEqual",cn="NonMaxSuppressionV3",ln="NonMaxSuppressionV4",un="NonMaxSuppressionV5",hn="OnesLike",dn="OneHot",pn="Pack",fn="PadV2",mn="Pow",gn="Prelu",yn="Prod",bn="Range",xn="Real",vn="Reciprocal",wn="Relu",kn="Reshape",In="ResizeNearestNeighbor",Nn="ResizeNearestNeighborGrad",Tn="ResizeBilinear",Sn="ResizeBilinearGrad",Cn="Relu6",En="Reverse",An="Round",Rn="Rsqrt",Fn="ScatterNd",Dn="Select",_n="Selu",On="Slice",Mn="Sin",Ln="Sinh",zn="Sign",Pn="Sigmoid",Bn="Softplus",Wn="Sqrt",Vn="Sum",Un="SpaceToBatchND",Gn="SplitV",Hn="Softmax",jn="SparseReshape",Kn="SparseToDense",qn="SquaredDifference",Xn="Square",Yn="StridedSlice",Qn="Sub",Jn="Tan",Zn="Tanh",$n="Tile",ta="TopK",ea="Transform",na="Transpose",aa="Unique",ra="Unpack",sa="UnsortedSegmentSum",oa="ZerosLike",ia="Step",ca="FromPixels",la="RotateWithOffset",ua="_FusedMatMul",ha="FusedConv2D",da="FusedDepthwiseConv2D",pa=gt("kernelRegistry",(()=>new Map)),fa=gt("gradRegistry",(()=>new Map));function ma(t,e){const n=va(t,e);return pa.get(n)}function ga(t){return fa.get(t)}function ya(t){const e=pa.entries(),n=[];for(;;){const{done:a,value:r}=e.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===t&&n.push(o)}return n}function ba(t){const{kernelName:e,backendName:n}=t,a=va(e,n);pa.has(a)&&console.warn("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),pa.set(a,t)}function xa(t){const{kernelName:e}=t;fa.has(e)&&dt().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),fa.set(e,t)}function va(t,e){return"".concat(e,"_").concat(t)}function wa(t,e){return"string"===e?Ta(t):ka([t],e)}function ka(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=_(t)),dt().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const a=t[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(a,"."))}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function Ia(){return dt().platform.now()}function Na(t,e){return dt().platform.fetch(t,e)}function Ta(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",dt().platform.encode(t,e)}function Sa(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",dt().platform.decode(t,e)}class Ca{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Aa)}profileKernel(t,e,n){let a;const r=()=>{a=n()};let s;const o=Ia();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const t of a)t.dataSync();s=Promise.resolve({kernelMs:Ia()-o})}if(dt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const e=a[i];e.data().then((n=>{Ea(n,e.dtype,t)}))}return{kernelName:t,outputs:a,inputs:e,timeMs:s.then((t=>t.kernelMs)),extraInfo:s.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:a,inputs:r,extraInfo:s}=t;n.forEach((t=>{Promise.all([t.data(),a,s]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function Ea(t,e,n){if("float32"!==e)return!1;for(let a=0;a<t.length;a++){const e=t[a];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class Aa{logKernelProfile(t,e,n,a,r,s){const o="number"===typeof a?P("".concat(a,"ms"),9):a.error,i=P(t,25),c=e.rank,l=e.size,u=P(e.shape.toString(),14);let h="";for(const d in r){const t=r[d];if(null!=t){const n=t.shape||e.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Ra=20,Fa=3,Da=7;function _a(t,e,n,a){const r=$(e),s=function(t,e,n,a){const r=O(e),s=a[a.length-1],o=new Array(s).fill(0),i=e.length,c="complex64"===n?za(t):t;if(i>1)for(let l=0;l<r/s;l++){const t=l*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],Oa(c[t+e],0,n).length)}return o}(t,e,n,r),o=e.length,i=La(t,e,n,r,s),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(o)),c.push("  shape: [".concat(e,"]")),c.push("  values:")),c.push(i.map((t=>"    "+t)).join("\n")),c.join("\n")}function Oa(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(Da))," + ")+"".concat(parseFloat(t[1].toFixed(Da)),"j"):X(t)?"'".concat(t,"'"):"bool"===n?Ma(t):parseFloat(t.toFixed(Da)).toString(),P(a,e)}function Ma(t){return 0===t?"false":"true"}function La(t,e,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const o="complex64"===n?2:1,i=e[0],c=e.length;if(0===c){if("complex64"===n){return[Oa(za(t)[0],0,n)]}return"bool"===n?[Ma(t[0])]:[t[0].toString()]}if(1===c){if(i>Ra){const e=Fa*o;let a=Array.from(t.slice(0,e)),s=Array.from(t.slice((i-Fa)*o,i*o));return"complex64"===n&&(a=za(a),s=za(s)),["["+a.map(((t,e)=>Oa(t,r[e],n))).join(", ")+", ..., "+s.map(((t,e)=>Oa(t,r[i-Fa+e],n))).join(", ")+"]"]}return["["+("complex64"===n?za(t):Array.from(t)).map(((t,e)=>Oa(t,r[e],n))).join(", ")+"]"]}const l=e.slice(1),u=a.slice(1),h=a[0]*o,d=[];if(i>Ra){for(let e=0;e<Fa;e++){const a=e*h,s=a+h;d.push(...La(t.slice(a,s),l,n,u,r,!1))}d.push("...");for(let e=i-Fa;e<i;e++){const a=e*h,s=a+h;d.push(...La(t.slice(a,s),l,n,u,r,e===i-1))}}else for(let m=0;m<i;m++){const e=m*h,a=e+h;d.push(...La(t.slice(e,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function za(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Pa{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=O(t),null!=n){const t=n.length;R(t===this.size,(()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||H(e,this.size),this.strides=$(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),R(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let a=0;for(const s of e){if(s<0||s>=this.shape[a]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}a++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Ba().makeTensor(this.values,this.shape,this.dtype)}}let Ba=null,Wa=null,Va=null;class Ua{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=O(t),this.strides=$(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Wa.buffer(this.shape,this.dtype,t)}bufferSync(){return Wa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return et(this.shape,t,"complex64"===this.dtype)}arraySync(){return et(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Ba().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>Sa(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Ba().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Sa(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Ba().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Ba().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Wa.print(this,t)}clone(){return this.throwIfDisposed(),Wa.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _a(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Wa.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Ba().makeVariable(this,t,e,n)}}function Ga(){return gt("Tensor",(()=>Ua))}Object.defineProperty(Ua,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),Ga();class Ha extends Ua{constructor(t,e,n,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!M(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));Ba().disposeTensor(this),this.dataId=t.dataId,Ba().incRef(this,null)}dispose(){Ba().disposeVariable(this),this.isDisposedInternal=!0}}var ja,Ka,qa,Xa,Ya;Object.defineProperty(Ha,Symbol.hasInstance,{value:t=>t instanceof Ua&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(ja||(ja={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Ka||(Ka={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(qa||(qa={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(Xa||(Xa={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Ya||(Ya={}));const Qa={float32:Xa,int32:Ka,bool:qa,complex64:Ya};function Ja(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return Qa[t][e]}function Za(t){return Ja(t,"int32")}function $a(t,e){if(t.dtype===e.dtype)return[t,e];const n=Ja(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function tr(t,e){return e.some((e=>e.id===t.id))}function er(t){const e=[];return nr(t,e,new Set),e}function nr(t,e,n){if(null==t)return;if(t instanceof Ua)return void e.push(t);if(a=t,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=t;for(const s in r){const t=r[s];n.has(t)||(n.add(t),nr(t,e,n))}}function ar(t){return null!=t.kernelName}class rr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class sr{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new rr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Ca(this.backendInstance),!0}setupRegisteredKernels(){ya(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){ya(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof T||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,a=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),a=n.backend,r=this.readSync(e),s=a.refCount(e);a.disposeData(e,!0),n.backend=t,t.move(e,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,a=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=t}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(a){throw e(),a}}nextTensorId(){return sr.nextTensorId++}nextVariableId(){return sr.nextVariableId++}clone(t){const e=ir.runKernel(Ee,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return ir.runKernel(Pt,e,n)}})),[],{}),e}runKernel(t,e,n){if(!(null!=ma(t,this.backendName)))throw new Error("Kernel '".concat(t,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const a=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-e-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(t,"'"))}runKernelFunc(t){let e,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=ar(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ar(t)){const{kernelName:e,inputs:r,attrs:s}=t;null==this.backendName&&this.backend;const c=ma(e,this.backendName);R(null!=c,(()=>"Cannot find registered kernel '".concat(e,"' for backend '").concat(this.backendName,"'"))),o=()=>{const t=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,o);const l=o.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:a}=t;return this.makeTensorFromDataId(e,n,a)}));if(a){const t=this.getTensorsForGradient(e,r,l);n=this.saveTensorsForBackwardMode(t)}return l}}else{const{forwardFunc:e}=t,r=t=>{a&&(n=t.map((t=>this.keep(this.clone(t)))))};o=()=>{const t=this.backend.numDataIds();i=this.tidy((()=>e(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,t,n),n}}const{inputs:l,attrs:u}=t,h=ar(t)?null:t.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=o()})),a&&this.addTapeNode(c,l,e,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((t=>null!=l[t]?l[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const a=ga(t);if(null!=a){const t=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(R(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(e).map((t=>e[t]))):s=t.map((t=>e[t]));const o=n.filter(((t,e)=>r[e]));return s.concat(o)}return[]}makeTensor(t,e,n,a){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=t;"string"===n&&X(t[0])&&(r=t.map((t=>Ta(t))));const s=a.write(r,e,n),o=new Ua(e,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const t=this.state.tensorInfo.get(s),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return o}makeTensorFromDataId(t,e,n,a){const r=new Ua(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(r,a),r}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==t.dtype&&(t=t.cast(a));const r=new Ha(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*q(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Ha||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*q(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},i=ga(t);null!=i&&(a=i.gradFunc),null!=a&&(o.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],a=at(t.size,t.dtype);return this.makeTensor(a,t.shape,t.dtype)}return t})),a(t.length>1?t:t[0],r,s))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=er(t),n=new Set(e.map((t=>t.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const t=this.state.activeScope.track[r];t.kept||n.has(t.id)||t.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==a.id||this.track(t)}))}gradients(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(R(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));R(r instanceof Ua,(()=>"The result y returned by f() must be a tensor."));const s=function(t,e,n){const a={},r={};for(let c=0;c<e.length;c++)a[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],s=n.inputs;for(const t in s){const o=s[t];let i=!1;for(let t=0;t<e.length;t++)if(a[o.id]){n.outputs.forEach((t=>a[t.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,o[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(r[e.id]&&o[e.id]){const t={};for(const r in e.inputs){const n=e.inputs[r];a[n.id]&&(t[r]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,r);if(!a&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=nt(O(t),"float32");return ir.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,a){for(let r=e.length-1;r>=0;r--){const s=e[r],o=[];if(s.outputs.forEach((e=>{const n=t[e.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const e in s.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[e]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[e];if(!M(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==t[o.id])t[o.id]=r;else{const e=t[o.id];t[o.id]=a(e,r),e.dispose()}}}}(t,s,(t=>this.tidy(t)),cr);const a=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(t){var e=this;return R(J(t),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;R(a.every((t=>t instanceof Ua)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((t,e)=>{o[e]=t}));return e.runKernelFunc({forwardFunc:(e,n)=>(s=t(...a,n),R(s.value instanceof Ua,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),R(J(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(t,e)=>{const n=s.gradFunc(t,e),r=Array.isArray(n)?n:[n];R(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),R(r.every((t=>t instanceof Ua)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((t,e)=>{o[e]=()=>t})),o},inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Ia(),n=await this.backend.time(t);return n.wallMs=Ia()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new rr;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function or(){const t=mt();if(null==t._tfengine){const e=new ut(t);t._tfengine=new sr(e)}var e;return e=t._tfengine.ENV,ft=e,Ba=()=>t._tfengine,t._tfengine}sr.nextTensorId=0,sr.nextVariableId=0;const ir=or();function cr(t,e){const n={a:t,b:e};return ir.runKernel(vt,n)}function lr(t){if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function ur(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const hr=dt();function dr(t,e){let n=t;if(K(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const a=[];for(;Array.isArray(n)||K(n)&&"string"!==e;)a.push(n.length),n=n[0];return Array.isArray(t)&&dt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&pr(t,a,[]),a}function pr(t,e,n){if(n=n||[],!Array.isArray(t)&&!K(t))return void R(0===e.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(e[0]," elements")));R(e.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(t.length," elements"))),R(t.length===e[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(e[0]," ")+"elements, but has ".concat(t.length," elements")));const a=e.slice(1);for(let r=0;r<t.length;++r)pr(t[r],a,n.concat(r))}function fr(t,e,n,a){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function mr(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof Ua)return fr(a,t.dtype,e,n),t;let r=Q(t);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),fr(a,r,e,n),null==t||!K(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const a=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const s=dr(t,r);K(t)||Array.isArray(t)||(t=[t]);const o="string"!==r?ka(t,r):_(t,[],!0);return ir.makeTensor(o,s,r)}function gr(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return t.map(((t,r)=>mr(t,"".concat(e,"[").concat(r,"]"),n,a)))}hr.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),hr.registerFlag("IS_BROWSER",(()=>ur())),hr.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),hr.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),hr.registerFlag("PROD",(()=>!1)),hr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>hr.getBool("DEBUG"))),hr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),hr.registerFlag("IS_TEST",(()=>!1)),hr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),hr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));function yr(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const a=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=function(){ir.startScope(n);try{const t=a(...arguments);return ct(t)&&console.error("Cannot return a Promise inside of tidy."),ir.endScope(t),t}catch(t){throw ir.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const br=yr({complex_:function(t,e){const n=mr(t,"real","complex"),a=mr(e,"imag","complex");F(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return ir.runKernel(Vt,r)}});function xr(t,e,n,a){if(null==a&&(a=Q(t)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!K(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){st(e);const t=O(e),a=O(n);R(t===a,(()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(a)));for(let r=0;r<n.length;++r){const t=n[r],a=r!==n.length-1||t!==O(e.slice(r));R(n[r]===e[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). ")))}}return K(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==a?ka(t,a):_(t,[],!0),ir.makeTensor(t,e,a)}function vr(t,e,n){return xr(t,e,dr(t,n),n)}const wr={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},kr=4;async function Ir(t,e){const n=[],a=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(t)?t[s].tensor:t[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise((async t=>{const e=await i.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+kr*e.length,a=new Uint8Array(n);let r=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);a.set(n,r),r+=kr,a.set(t,r),r+=t.length}t(a)}));a.push(t)}else a.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:Tr(await Promise.all(a)),specs:n}}function Nr(t,e){const n={};let a,r=0;for(const s of e){const e=s.name,o=s.dtype,i=s.shape,c=O(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(s.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(s.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==o)throw new Error("Weight ".concat(s.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(o,"."))}const i=wr[n.dtype],u=t.slice(r,r+c*i),h="uint8"===n.dtype?new Uint8Array(u):new Uint16Array(u);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===a&&(a=Rr()),l=a(h)}else{if("int32"!==o)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(o));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");l=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];l[t]=Math.round(e*n.scale+n.min)}}r+=c*i}else if("string"===o){const e=O(s.shape);l=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(r,r+kr))[0];r+=kr;const n=new Uint8Array(t.slice(r,r+e));l.push(n),r+=e}}else{const a=wr[o],s=t.slice(r,r+c*a);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(o));{l=new Float32Array(s);const t=new Float32Array(l.length/2),a=new Float32Array(l.length/2);for(let e=0;e<t.length;e++)t[e]=l[2*e],a[e]=l[2*e+1];const r=vr(t,i,"float32"),o=vr(a,i,"float32");n[e]=br(r,o),r.dispose(),o.dispose()}}r+=c*a}"complex64"!==o&&(n[e]=vr(l,i,o))}return n}function Tr(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))}));const a=new Uint8Array(e);let r=0;return n.forEach((t=>{a.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),a.buffer}const Sr="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Cr(t){return Sr?Buffer.byteLength(t):new Blob([t]).size}function Er(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let a=0;return t.forEach((t=>{n.set(new Uint8Array(t),a),a+=t.byteLength})),n.buffer}function Ar(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Cr(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Cr(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Rr(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=t[n[r>>10]+(1023&r)]+e[r>>10];s[o]=i}return new Float32Array(r)}}class Fr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Fr.instance&&(Fr.instance=new Fr),Fr.instance}static registerSaveRouter(t){Fr.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Fr.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Fr.getHandlers(t,"save")}static getLoadHandlers(t,e){return Fr.getHandlers(t,"load",e)}static getHandlers(t,e,n){const a=[];return("load"===e?Fr.getInstance().loadRouters:Fr.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&a.push(r)})),a}}const Dr=t=>Fr.getSaveHandlers(t),_r="tensorflowjs",Or="models_store",Mr="model_info_store";function Lr(){if(!dt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function zr(t){const e=t.result;e.createObjectStore(Or,{keyPath:"modelPath"}),e.createObjectStore(Mr,{keyPath:"modelPath"})}class Pr{constructor(t){if(this.indexedDB=Lr(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const a=this.indexedDB.open(_r,1);a.onupgradeneeded=()=>zr(a),a.onsuccess=()=>{const r=a.result;if(null==e){const e=r.transaction(Or,"readonly"),a=e.objectStore(Or).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(a.result.modelArtifacts)},a.onerror=t=>(r.close(),n(a.error)),e.oncomplete=()=>r.close()}else{const a=Ar(e),s=r.transaction(Mr,"readwrite");let o=s.objectStore(Mr);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:a});let c;i.onsuccess=()=>{c=r.transaction(Or,"readwrite");const i=c.objectStore(Or).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});i.onsuccess=()=>t({modelArtifactsInfo:a}),i.onerror=t=>{o=s.objectStore(Mr);const e=o.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(i.error)),e.onerror=t=>(r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=t=>n(a.error)}))}}Pr.URL_SCHEME="indexeddb://";const Br=t=>{return dt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Pr.URL_SCHEME)?(e=t.slice(Pr.URL_SCHEME.length),new Pr(e)):null;var e};Fr.registerSaveRouter(Br),Fr.registerLoadRouter(Br);class Wr{constructor(){this.indexedDB=Lr()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(_r,1);n.onupgradeneeded=()=>zr(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Mr,"readonly"),s=r.objectStore(Mr).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(a.close(),e(s.error)),r.oncomplete=()=>a.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Pr.URL_SCHEME)?e.slice(Pr.URL_SCHEME.length):e,new Promise(((e,n)=>{const a=this.indexedDB.open(_r,1);a.onupgradeneeded=()=>zr(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(Mr,"readwrite"),o=s.objectStore(Mr),i=o.get(t);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const a=o.delete(t),s=()=>{c=r.transaction(Or,"readwrite");const a=c.objectStore(Or).delete(t);a.onsuccess=()=>e(i.result.modelArtifactsInfo),a.onerror=t=>n(i.error)};a.onsuccess=s,a.onerror=t=>(s(),r.close(),n(i.error))}},i.onerror=t=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=t=>n(a.error)}))}}const Vr="/",Ur="tensorflowjs_models",Gr="info",Hr="model_topology",jr="weight_specs",Kr="weight_data",qr="model_metadata";function Xr(t){return{info:[Ur,t,Gr].join(Vr),topology:[Ur,t,Hr].join(Vr),weightSpecs:[Ur,t,jr].join(Vr),weightData:[Ur,t,Kr].join(Vr),modelMetadata:[Ur,t,qr].join(Vr)}}function Yr(t){const e=t.split(Vr);if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join(Vr)}class Qr{constructor(t){if(!dt().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Xr(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),a=JSON.stringify(t.weightSpecs),r=Ar(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(t){if(Sr)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let a=0,r=e.length;a<r;a++)n+=String.fromCharCode(e[a]);return btoa(n)}(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=function(t){if(Sr){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let a=0;a<e.length;++a)n.set([e.charCodeAt(a)],a);return n.buffer}(s),e}}Qr.URL_SCHEME="localstorage://";const Jr=t=>{return dt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Qr.URL_SCHEME)?(e=t.slice(Qr.URL_SCHEME.length),new Qr(e)):null;var e};Fr.registerSaveRouter(Jr),Fr.registerLoadRouter(Jr);class Zr{constructor(){R(dt().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),R("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ur+Vr,n=Vr+Gr;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(n)){t[Yr(r)]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){var e;const n=Xr(t=(e=t).startsWith(Qr.URL_SCHEME)?e.slice(Qr.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const a=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),a}}const $r="://";class ts{constructor(){this.managers={}}static getInstance(){return null==ts.instance&&(ts.instance=new ts),ts.instance}static registerManager(t,e){R(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith($r)&&(t=t.slice(0,t.indexOf($r))),R(t.length>0,(()=>"scheme must not be an empty string."));const n=ts.getInstance();R(null==n.managers[t],(()=>"A model store manager is already registered for scheme '".concat(t,"'."))),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class es{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(dt().get("IS_BROWSER")){dt().setPlatform("browser",new es);try{ts.registerManager(Qr.URL_SCHEME,new Zr)}catch(ZM){}try{ts.registerManager(Pr.URL_SCHEME,new Wr)}catch(ZM){}}const ns=()=>n(817);let as;class rs{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=dt().global.fetch?dt().global.fetch(t,e):(null==as&&(as=ns()),as(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}function ss(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",st(t),new Pa(t,e,n)}dt().get("IS_NODE")&&dt().setPlatform("node",new rs);const os=yr({cast_:function(t,e){const n=mr(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:e};return ir.runKernel(Pt,a,r)}});const is=yr({clone_:function(t){const e={x:mr(t,"x","clone","string_or_numeric")};return ir.runKernel(Ee,e)}});or();const cs={buffer:ss,cast:os,clone:is,print:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}};Wa=cs;function ls(t){return new Promise((t=>setTimeout(t))).then(t)}class us{constructor(t){if(!dt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(us.URL_SCHEME)&&(t=t.slice(us.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=r,await ls((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await ls((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ar(t)}}}}us.URL_SCHEME="downloads://";function hs(t,e,n,a){!function(t){R(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){R(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t))),R(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e))),R(e>=t,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(t.map((s=>(s.then((s=>{const o=n+ ++r/t.length*(a-n);return e(o),s})),s))))}async function ds(t,e){null==e&&(e={});const n=null==e.fetchFunc?dt().platform.fetch:e.fetchFunc,a=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(a):await hs(a,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await hs(r,e.onProgress,.5,1)}Fr.registerSaveRouter((t=>dt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(us.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new us(t)}(t.slice(us.URL_SCHEME.length)):null));class ps{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(R("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=dt().platform.fetch,R(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&R(2===t.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,")."))),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Ar(t),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(p){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,a=e.weightsManifest,r=e.generatedBy,s=e.convertedBy,o=e.format,i=e.signature,c=e.userDefinedMetadata;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");let l,u;if(null!=a){const t=await this.loadWeights(a);[l,u]=t}const h={modelTopology:n,weightSpecs:l,weightData:u,generatedBy:r,convertedBy:s,format:o};null!=i&&(h.signature=i),null!=c&&(h.userDefinedMetadata=c);const d=e.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),a=t.substring(0,e),r=n>e?t.substring(n):"";return[a+"/",r]}(e),r=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const o=[],i=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):o.push(r+t+a);this.weightUrlConverter&&o.push(...await Promise.all(i));return[s,Er(await ds(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function fs(t){return null!=t.match(ps.URL_SCHEME_REGEX)}ps.URL_SCHEME_REGEX=/^https?:\/\//;const ms=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>fs(t))):fs(t),n)return gs(t,e)}return null};function gs(t,e){return new ps(t,e)}function ys(t,e){return gs(t,e)}Fr.registerSaveRouter(ms),Fr.registerLoadRouter(ms);let bs;function xs(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=ma(ca,ir.backendName)){const n={pixels:t},a={numChannels:e};return ir.runKernel(ca,n,a)}const[c,l]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,h;if(o?u=t.getContext("2d").getImageData(0,0,c,l).data:a||n?u=t.data:(s||r||i)&&(null==bs&&(bs=document.createElement("canvas").getContext("2d")),bs.canvas.width=c,bs.canvas.height=l,bs.drawImage(t,0,0,c,l),u=bs.getImageData(0,0,c,l).data),4===e)h=new Int32Array(u);else{const t=c*l;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=u[4*n+t]}return function(t,e,n){if(D(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const a=dr(t,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return xr(t,e,a,n)}(h,[l,c,e],"int32")}const vs=yr({fromPixels_:xs});function ws(t,e,n){const a=t.shape.length;R(a===e.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(a,")."))),R(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)R(e[r]+n[r]<=t.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(e[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(t.shape[r],")")))}function ks(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Is(t,e,n){const a=[];for(let r=0;r<t.length;r++)a[r]=Math.ceil((e[r]-t[r])/n[r]);return a}function Ns(t,e,n,a){const r=[...t];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[e]=1:(r.splice(e,0,1),r.pop());return r}function Ts(t,e,n){return n<=t?n:n-(e-1)}function Ss(t,e){const n=[];for(let a=0;a<t;a++)n.push(e+a);return n}function Cs(t,e,n,a,r,s,o,i,c){const l=t.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;u=Es(o,c,l,a,t),h=As(i,c,l,r,t),d=Ns(s,c,l,t)}else for(let p=0;p<l;p++)u[p]=Fs(o,a,s,t,p,c),h[p]=Ds(i,r,s,t,p,c),d[p]=Rs(s,p,c);return{begin:u,end:h,strides:d}}function Es(t,e,n,a,r){const s=[...r],o=Ss(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=Ts(e,n,i);let o=a[r];t&1<<r&&(o=0),s[i]=o}return s}function As(t,e,n,a,r){const s=[...r],o=Ss(n,e);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const r=Ts(e,n,i);let o=a[r];t&1<<r&&(o=Number.MAX_SAFE_INTEGER),s[i]=o}for(let i=0;i<s.length;i++){const t=r[i];s[i]<0&&(s[i]+=t),s[i]=E(0,s[i],r[i])}return s}function Rs(t,e,n){let a=t[e];return(n&1<<e||null==a)&&(a=1),a}function Fs(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=E(0,o,c-1),o}function Ds(t,e,n,a,r,s){let o=e[r];const i=n[r]||1;(t&1<<r||s&1<<r||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return o<0&&(o+=c),o=i>0?E(0,o,c):E(-1,o,c-1),o}function _s(t,e,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function Os(t,e){let n=t.length>0?t[t.length-1]:1;for(let a=0;a<t.length-1;a++)n+=t[a]*e[a];return n}function Ms(t,e,n){let a;const r=t.shape.length;let s;return a="number"===typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),a.forEach((t=>{R(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(R(-1===e,(()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,"."))),t.shape[n]-a[n]))),[a,s]}function Ls(t,e,n,a,r,s,o,i,c){let l=e.slice(),u=n.slice(),h=a;null==a&&(h=new Array(l.length));const d=ks(o);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=t.length-l.length,f=ks(i),m=t.slice();f.forEach((t=>{l[t]=0,u[t]=1,m.splice(t,0,1)}));const{begin:g,end:y,strides:b}=Cs(m,d,p,l,u,h,r,s,o);l=g,u=y,h=b;const x=ks(c);x.forEach((t=>{u[t]=l[t]+1,h[t]=1}));const v=Is(l,u,h),w=v.filter(((t,e)=>-1===x.indexOf(e)));return{nonStrided:h.every((t=>1===t)),$begin:l,$end:u,$strides:h,size:v,newShape:m,outShape:w}}class zs{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ps{constructor(){this.classNameMap={}}static getMap(){return null==Ps.instance&&(Ps.instance=new Ps),Ps.instance}static register(t){Ps.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Bs(t){R(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),R("string"===typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),R(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ps.register(t)}function Ws(){return ir}function Vs(){return ir.memory()}function Us(t,e){return ir.tidy(t,e)}function Gs(t){er(t).forEach((t=>t.dispose()))}function Hs(t){return ir.keep(t)}function js(){return ir.backendName}function Ks(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return ir.registerBackend(t,e,n)}function qs(t){return ir.customGrad(t)}function Xs(t,e){if((K(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&K(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return xr(t,[],[],e)}Va=function(t){dt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Ys extends zs{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return Gs(r),e?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){R(J(t),(()=>"The f passed in variableGrads(f) must be a function")),R(null==e||Array.isArray(e)&&e.every((t=>t instanceof Ha)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in ir.registeredVariables)e.push(ir.registeredVariables[t])}const a=n?e.filter((t=>!t.trainable)):null,r=e.length;e=e.filter((t=>t.trainable)),R(e.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:s,grads:o}=ir.gradients(t,e,null,!0);R(o.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),R(0===s.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(s.rank," tensor")));const i={};return e.forEach(((t,e)=>{null!=o[e]&&(i[t.name]=o[e])})),null!=a&&a.forEach((t=>i[t.name]=null)),{value:s,grads:i}}(t,e)}dispose(){null!=this.iterations_&&Gs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Xs(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ys,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Qs=yr({abs_:function(t){const e=mr(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return ir.runKernel(Ut,t)}{const t={x:e};return ir.runKernel(yt,t)}}});const Js=yr({add_:function(t,e){let n=mr(t,"a","add"),a=mr(e,"b","add");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(vt,r)}});const Zs=yr({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:mr(t,"x","all","bool")},r={axis:e,keepDims:n};return ir.runKernel(kt,a,r)}});const $s=yr({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:mr(t,"x","any","bool")},r={axis:e,keepDims:n};return ir.runKernel(It,a,r)}});const to=yr({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:mr(t,"x","argMax")},a={axis:e};return ir.runKernel(Nt,n,a)}});function eo(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return ro(t,[...e,t[3]],n,s,a,null,null,fo(r))}function no(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=io(e);let l;if("channelsLast"===o)l=[i,c,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));l=[i,c,t[1],t[1]]}return ro(t,l,n,a,r,s,!1,o)}function ao(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=co(e);let u,h;if("NDHWC"===o)h="channelsLast",u=[i,c,l,t[4],t[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",u=[i,c,l,t[1],t[1]]}return so(t,u,n,a,r,!1,h,s)}function ro(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=t}const[d,p,,f]=e,[m,g]=io(n),[y,b]=io(a),x=lo(d,y),v=lo(p,b),{padInfo:w,outHeight:k,outWidth:I}=function(t,e,n,a,r,s,o,i,c){let l,u,h;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,a,r){null==a&&(a=oo(t,e,n));const s=t[0],o=t[1],i=uo((s-e+2*a)/n+1,r),c=uo((o-e+2*a)/n+1,r);return[i,c]}([e,n],s,a,t,i);u=r[0],h=r[1]}else if("same"===t){u=Math.ceil(e/a),h=Math.ceil(n/r);const t=Math.max(0,(u-1)*a+s-e),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(t/2),d=t-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const d="channelsLast"===c?t[1][0]:t[2][0],p="channelsLast"===c?t[1][1]:t[2][1],f="channelsLast"===c?t[2][0]:t[3][0],m="channelsLast"===c?t[2][1]:t[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=uo((e-s+d+p)/a+1,i),h=uo((n-o+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,s,i),N=o?f*h:f;let T;return"channelsFirst"===i?T=[c,N,k,I]:"channelsLast"===i&&(T=[c,k,I,N]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:t,outShape:T,filterShape:e}}function so(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,h,d]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,d,l,u,h]=t}const[p,f,m,,g]=e,[y,b,x]=co(n),[v,w,k]=co(a),I=lo(p,v),N=lo(f,w),T=lo(m,k),{padInfo:S,outDepth:C,outHeight:E,outWidth:A}=function(t,e,n,a,r,s,o,i,c,l,u){let h,d,p,f;if("number"===typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,a,r,s){null==r&&(r=oo(t,e,a));const o=t[0],i=t[1],c=t[2],l=uo((o-e+2*r)/a+1,s),u=uo((i-e+2*r)/a+1,s),h=uo((c-e+2*r)/a+1,s);return[l,u,h,n]}([e,n,a,1],i,1,r,t,u);d=s[0],p=s[1],f=s[2]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/s),f=Math.ceil(a/o);const t=(d-1)*r+i-e,u=(p-1)*s+c-n,m=(f-1)*o+l-a,g=Math.floor(t/2),y=t-g,b=Math.floor(u/2),x=u-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-i+1)/r),p=Math.ceil((n-c+1)/s),f=Math.ceil((a-l+1)/o)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,u,h,y,b,x,I,N,T,i),R=s?g*d:g;let F;return"channelsFirst"===o?F=[c,R,C,E,A]:"channelsLast"===o&&(F=[c,C,E,A,R]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:C,outHeight:E,outWidth:A,outChannels:R,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:t,outShape:F,filterShape:e}}function oo(t,e,n){const a=lo(e,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((t[0]*(n-1)-n+a)/2)}function io(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function co(t){return"number"===typeof t?[t,t,t]:t}function lo(t,e){return e<=1?t:t+(t-1)*(e-1)}function uo(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function ho(t){const[e,n,a]=io(t);return 1===e&&1===n&&1===a}function po(t,e){return ho(t)||ho(e)}function fo(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}const mo=yr({reshape_:function(t,e){const n={x:mr(t,"x","reshape","string_or_numeric")},a={shape:e};return ir.runKernel(kn,n,a)}});const go=yr({avgPool_:function(t,e,n,a,r){const s=mr(t,"x","avgPool","float32");R(po(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let o=s,i=!1;3===s.rank&&(i=!0,o=mo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),R(4===o.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(o.rank,"."))),null!=r&&R(L(a),(()=>"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r};let u=ir.runKernel(Ft,c,l);return u=os(u,s.dtype),i?mo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const yo=yr({avgPool3d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=mr(t,"x","avgPool3d","float32");let i=o,c=!1;4===o.rank&&(c=!0,i=mo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),R(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),R("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),null!=r&&R(L(a),(()=>"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let h=ir.runKernel(_t,l,u);return h=os(h,i.dtype),c?mo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const bo=yr({batchNorm_:function(t,e,n,a,r,s){null==s&&(s=.001);const o=mr(t,"x","batchNorm"),i=mr(e,"mean","batchNorm"),c=mr(n,"variance","batchNorm");let l,u;null!=r&&(l=mr(r,"scale","batchNorm")),null!=a&&(u=mr(a,"offset","batchNorm")),R(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),R(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),R(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?mo(t,[1,1,1,t.size]):2===t.rank?mo(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?mo(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(o),d={x:h,scale:l,offset:u,mean:i,variance:c},p={varianceEpsilon:s},f=ir.runKernel(Ie,d,p);return mo(f,o.shape)}});const xo=yr({batchNorm2d_:function(t,e,n,a,r,s){const o=mr(t,"x","batchNorm"),i=mr(e,"mean","batchNorm"),c=mr(n,"variance","batchNorm");let l,u;return null!=r&&(l=mr(r,"scale","batchNorm")),null!=a&&(u=mr(a,"offset","batchNorm")),R(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),R(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),R(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&R(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&R(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),bo(o,i,c,u,l,s)}});const vo=yr({batchNorm3d_:function(t,e,n,a,r,s){const o=mr(t,"x","batchNorm"),i=mr(e,"mean","batchNorm"),c=mr(n,"variance","batchNorm");let l,u;return null!=r&&(l=mr(r,"scale","batchNorm")),null!=a&&(u=mr(a,"offset","batchNorm")),R(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),R(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),R(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&R(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&R(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),bo(o,i,c,u,l,s)}});const wo=yr({batchNorm4d_:function(t,e,n,a,r,s){const o=mr(t,"x","batchNorm"),i=mr(e,"mean","batchNorm"),c=mr(n,"variance","batchNorm");let l,u;return null!=r&&(l=mr(r,"scale","batchNorm")),null!=a&&(u=mr(a,"offset","batchNorm")),R(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),R(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),R(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&R(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&R(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),bo(o,i,c,u,l,s)}});const ko=yr({clipByValue_:function(t,e,n){const a=mr(t,"x","clipByValue");R(e<=n,(()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,").")));const r={x:a},s={clipValueMin:e,clipValueMax:n};return ir.runKernel(Wt,r,s)}});const Io=yr({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;R(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=gr(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))})),1===n.length)return is(n[0]);const a=n,r={axis:e};return ir.runKernel(Gt,a,r)}});const No=yr({concat1d_:function(t){return Io(t,0)}});const To=yr({concat2d_:function(t,e){return Io(t,e)}});const So=yr({concat3d_:function(t,e){return Io(t,e)}});const Co=yr({concat4d_:function(t,e){return Io(t,e)}});const Eo=yr({conv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=mr(t,"x","conv2d"),c=mr(e,"filter","conv2d");let l=i,u=!1;3===i.rank&&(u=!0,l=mo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),R(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),R(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),null!=o&&R(L(a),(()=>"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];R(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),R(po(n,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'")));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},f=ir.runKernel(Ht,d,p);return u?mo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ao=yr({conv1d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6?arguments[6]:void 0;const i=mr(t,"x","conv1d"),c=mr(e,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=mo(i,[1,i.shape[0],i.shape[1]])),R(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),R(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),null!=o&&R(L(a),(()=>"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,"."))),R(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),R(po(n,s),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(s,"'"))),R("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=mo(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=mo(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Eo(d,h,[1,n],a,"NHWC",[1,s],o);return mo(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Ro=yr({conv2DBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0;R(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let i=t,c=e,l=!1;3===e.rank&&(l=!0,c=mo(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),R(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),R(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),R(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===s?i[3]:i[1],h="NHWC"===s?c.shape[3]:c.shape[1];R(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),R(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),null!=o&&R(L(r),(()=>"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(r,".")));const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,inputShape:i},f=ir.runKernel(Kt,d,p);return l?mo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Fo=yr({conv2dTranspose_:function(t,e,n,a,r,s){const o=mr(t,"x","conv2dTranspose"),i=mr(e,"filter","conv2dTranspose");return Ro(n,o,i,a,r,"NHWC",s)}});const Do=yr({conv3d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=mr(t,"x","conv3d"),i=mr(e,"filter","conv3d");let c=o,l=!1;4===o.rank&&(l=!0,c=mo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),R(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),R(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),R(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),R(po(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),R("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported.")));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:s},d=ir.runKernel(qt,u,h);return l?mo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const _o=yr({conv3DBackpropInput_:function(t,e,n,a,r){R(t.length===e.rank,(()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match")));let s=t,o=e,i=!1;4===e.rank&&(i=!0,o=mo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),s=[1,t[0],t[1],t[2],t[3]]);const c=s[4],l=o.shape[4];R(5===s.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(s.length,"."))),R(5===o.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(o.rank))),R(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),R(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),R(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:o,filter:n},h={pad:r,strides:a,inputShape:s},d=ir.runKernel(Yt,u,h);return i?mo(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Oo=yr({conv3dTranspose_:function(t,e,n,a,r){const s=mr(t,"x","conv3dTranspose"),o=mr(e,"filter","conv3dTranspose");return _o(n,s,o,a,r)}});const Mo=yr({depthwiseConv2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0;const i=mr(t,"x","depthwiseConv2d"),c=mr(e,"filter","depthwiseConv2d");let l=i,u=!1;3===i.rank&&(u=!0,l=mo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),R(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),R(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),R(l.shape[3]===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(l.shape[3],") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),null!=o&&R(L(a),(()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(a,".")));const h={x:l,filter:c},d={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:o},p=ir.runKernel(ne,h,d);return u?mo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const Lo=yr({floorDiv_:function(t,e){let n=mr(t,"a","floorDiv"),a=mr(e,"b","floorDiv");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(ke,r)}});const zo=yr({div_:function(t,e){let n=mr(t,"a","div"),a=mr(e,"b","div");if([n,a]=$a(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Lo(n,a);const r={a:n,b:a};return ir.runKernel(le,r,{})}});const Po=yr({elu_:function(t){const e={x:mr(t,"x","elu")};return ir.runKernel(he,e)}});function Bo(t,e){const n=t.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=t[s]||1;(e[e.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function Wo(t,e){const n=[];for(let a=0;a<e.length;a++){const r=t[t.length-a-1],s=e.length-a-1,o=e[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function Vo(t,e){const n=[],a=Math.max(t.length,e.length);for(let r=0;r<a;r++){let a=t[t.length-r-1];null==a&&(a=1);let s=e[e.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(a)}}return n}const Uo=yr({equal_:function(t,e){let n=mr(t,"a","equal"),a=mr(e,"b","equal");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(fe,r)}});const Go=yr({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=mr(t,"x","expandDims","string_or_numeric");R(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:e};return ir.runKernel(ge,a,r)}});const Ho=yr({tile_:function(t,e){const n=mr(t,"x","tile","string_or_numeric");R(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,".")));const a={x:n},r={reps:e};return ir.runKernel($n,a,r)}});const jo=yr({eye_:function(t,e,n){null==e&&(e=t);const a=ss([t,e],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=t<=e?t:e;for(let o=0;o<r;++o)a.set(1,o,o);const s=mo(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return Ho(Go(s,0),[n[0],1,1]);if(2===n.length)return Ho(Go(Go(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ho(Go(Go(Go(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});function Ko(t,e,n){const a={shape:t,value:e,dtype:n};return ir.runKernel(xe,{},a)}const qo=yr({floor_:function(t){const e={x:mr(t,"x","floor")};return ir.runKernel(we,e)}});const Xo=yr({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:mr(t,"x","gather"),indices:mr(e,"indices","gather","int32")},s={axis:n,batchDims:a};return ir.runKernel(Ne,r,s)}});const Yo=yr({greater_:function(t,e){let n=mr(t,"a","greater"),a=mr(e,"b","greater");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Se,r)}});const Qo=yr({greaterEqual_:function(t,e){let n=mr(t,"a","greaterEqual"),a=mr(e,"b","greaterEqual");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Ce,r)}});const Jo=yr({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:mr(t,"x","leakyRelu")},a={alpha:e};return ir.runKernel(Oe,n,a)}});const Zo=yr({log_:function(t){const e={x:mr(t,"x","log")};return ir.runKernel(Pe,e)}});const $o=yr({exp_:function(t){const e={x:mr(t,"x","exp")};return ir.runKernel(me,e)}});const ti=yr({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:mr(t,"x","max")},r={reductionIndices:e,keepDims:n};return ir.runKernel(je,a,r)}});const ei=yr({mul_:function(t,e){let n=mr(t,"a","mul"),a=mr(e,"b","mul");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(rn,r)}});const ni=yr({sub_:function(t,e){let n=mr(t,"a","sub"),a=mr(e,"b","sub");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(Qn,r)}});const ai=yr({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=mr(t,"x","sum");"bool"===a.dtype&&(a=os(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return ir.runKernel(Vn,r,s)}});const ri=yr({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=mr(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const a=qs(((t,n)=>{const a=ti(t,e,!0),r=ni(t,a),s=ni(os(r,"float32"),Zo(ai($o(r),e,!0)));n([s]);return{value:s,gradFunc:(t,n)=>{const[a]=n,r=$o(a);return ni(t,ei(ai(t,e,!0),r))}}}));return a(n)}});const si=yr({logicalAnd_:function(t,e){const n=mr(t,"a","logicalAnd","bool"),a=mr(e,"b","logicalAnd","bool");Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(We,r)}});const oi=yr({maxPool_:function(t,e,n,a,r){const s=mr(t,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=mo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),R(4===o.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.rank,"."))),R(po(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),null!=r&&R(L(a),(()=>"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const c={x:o},l={filterSize:e,strides:n,pad:a,dimRoundingMode:r},u=ir.runKernel(qe,c,l);return i?mo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const ii=yr({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=mr(t,"x","maxPool3d");let i=o,c=!1;4===o.rank&&(c=!0,i=mo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),R(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),R("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),null!=r&&R(L(a),(()=>"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(r," but got pad ").concat(a,".")));const l={x:i},u={filterSize:e,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=ir.runKernel(Ye,l,u);return c?mo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const ci=yr({maximum_:function(t,e){let n=mr(t,"a","maximum"),a=mr(e,"b","maximum");[n,a]=$a(n,a),"bool"===n.dtype&&(n=os(n,"int32"),a=os(a,"int32")),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Ke,r)}});const li=yr({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:mr(t,"x","mean")},r={axis:e,keepDims:n};return ir.runKernel(Ze,a,r)}});const ui=yr({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:mr(t,"x","min")},r={axis:e,keepDims:n};return ir.runKernel($e,a,r)}});const hi=yr({minimum_:function(t,e){let n=mr(t,"a","minimum"),a=mr(e,"b","minimum");[n,a]=$a(n,a),"bool"===n.dtype&&(n=os(n,"int32"),a=os(a,"int32")),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(tn,r)}});function di(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function pi(t,e,n){const a=t.length+e.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(t[s++]):r.push(e[o++]);return r}function fi(t,e){const n=[],a=t.length;for(let r=0;r<a;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function mi(t,e){return pi(t,e.map((t=>1)),e)}function gi(t,e,n){R(di(e,n),(()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input.")))}function yi(t,e){if(di(t,e))return null;const n=[];for(let a=0;a<e;++a)-1===t.indexOf(a)&&n.push(a);return t.forEach((t=>n.push(t))),n}function bi(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function xi(t,e){const n=[];for(let a=e-t;a<e;++a)n.push(a);return n}const vi=yr({square_:function(t){const e=mr(t,"x","square");return ir.runKernel("Square",{x:e},{})}});const wi=yr({moments_:function(t){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=V(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(t=mr(t,"x","moments")).shape),a=li(t,n,e);let r=a.shape;e||(r=mi(a.shape,n));const s=vi(ni(os(t,"float32"),mo(a,r)));return{mean:a,variance:li(s,n,e)}}});const ki=yr({neg_:function(t){const e={x:mr(t,"x","neg")};return ir.runKernel(sn,e)}});const Ii=yr({notEqual_:function(t,e){let n=mr(t,"a","notEqual"),a=mr(e,"b","notEqual");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(on,r)}});const Ni=yr({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const r={indices:mr(t,"indices","oneHot","int32")},s={depth:e,onValue:n,offValue:a};return ir.runKernel(dn,r,s)}});function Ti(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=Ti(t,"float32"),n=Ti(t,"float32");return br(e,n)}const n=at(O(t),e);return ir.makeTensor(n,t,e)}function Si(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=Si(t,"float32"),n=Ti(t,"float32");return br(e,n)}const n=nt(O(t),e);return ir.makeTensor(n,t,e)}const Ci=yr({onesLike_:function(t){const e={x:mr(t,"x","onesLike")};return ir.runKernel(hn,e)}});const Ei=yr({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=mr(t,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},s={x:a};return ir.runKernel(fn,s,r)}});const Ai=yr({prelu_:function(t,e){const n={x:mr(t,"x","prelu"),alpha:mr(e,"alpha","prelu")};return ir.runKernel(gn,n)}});var Ri=n(334);class Fi{constructor(t,e,n,a,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Ri.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,e=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Di{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=Ri.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const _i=yr({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Fi(e,n,a,!1,r),o=ss(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Oi=yr({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>4?arguments[4]:void 0;const r=ss(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),s=new Di(e,n,null,a);for(let o=0;o<r.values.length;o++)r.values[o]=s.nextValue();return r.toTensor()}});const Mi=yr({relu_:function(t){const e={x:mr(t,"x","relu")};return ir.runKernel(wn,e)}});const Li=yr({reverse_:function(t,e){const n={x:mr(t,"x","reverse")},a={dims:e};return ir.runKernel(En,n,a)}});const zi=yr({selu_:function(t){const e={x:mr(t,"x","selu")};return ir.runKernel(_n,e)}});const Pi=yr({separableConv2d_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=mr(t,"x","separableConv2d"),c=mr(e,"depthwiseFilter","separableConv2d"),l=mr(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=mo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");R(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),R(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),R(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),R(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),R(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];R(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=Mo(u,c,a,r,o,s),m=Eo(f,l,1,"valid",o);return h?mo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const Bi=yr({sigmoid_:function(t){const e={x:mr(t,"x","sigmoid")};return ir.runKernel(Pn,e)}});const Wi=yr({slice_:function(t,e,n){const a=mr(t,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:e,size:n};return ir.runKernel(On,r,s)}});const Vi=yr({slice1d_:function(t,e,n){const a=mr(t,"x","slice1d");return R(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),Wi(a,[e],[n])}});const Ui=yr({slice2d_:function(t,e,n){const a=mr(t,"x","slice2d");return R(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),Wi(a,e,n)}});const Gi=yr({slice3d_:function(t,e,n){const a=mr(t,"x","slice3d");return R(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),Wi(a,e,n)}});const Hi=yr({slice4d_:function(t,e,n){const a=mr(t,"x","slice4d");return R(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),Wi(a,e,n)}});const ji=yr({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=mr(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const a={logits:n},r={dim:e};return ir.runKernel(Hn,a,r)}});const Ki=yr({softplus_:function(t){const e={x:mr(t,"x","softplus")};return ir.runKernel(Bn,e)}});const qi=yr({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:mr(t,"x","split")},r={numOrSizeSplits:e,axis:n};return ir.runKernel(Gn,a,r)}});const Xi=yr({sqrt_:function(t){const e={x:mr(t,"x","sqrt")};return ir.runKernel(Wn,e)}});const Yi=yr({squeeze_:function(t,e){const n=mr(t,"x","squeeze");return mo(n,U(n.shape,e).newShape)}});const Qi=yr({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=gr(t,"tensors","stack","string_or_numeric");R(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&R(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:e};return ir.runKernel(pn,a,r)}});const Ji=yr({tanh_:function(t){const e={x:mr(t,"x","tanh")};return ir.runKernel(Zn,e)}});function Zi(t,e){D(t);const n=dr(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return xr(t,null,n,e)}function $i(t,e,n){if(D(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const a=dr(t,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return xr(t,e,a,n)}const tc=yr({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Fi(e,n,a,!0,r),o=ss(t,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const ec=yr({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=mr(t,"x","unstack","string_or_numeric");R(e>=-n.shape.length&&e<n.shape.length,(()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:e};return ir.runKernel(ra,a,r)}});const nc=yr({broadcastTo_:function(t,e){let n=mr(t,"broadcastTo","x");const a=n.shape;if(e.some((t=>!(t>0)||t%1!==0)))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=mo(n,t)}const r=n.shape,s=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])s[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(e,"]."));if(0===s.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return is(n);const o={x:n},i={reps:s};return ir.runKernel($n,o,i)}});const ac=yr({where_:function(t,e,n){const a=mr(e,"a","where"),r=mr(n,"b","where"),s=mr(t,"condition","where","bool"),o=Vo(Vo(s.shape,a.shape),r.shape),i={condition:nc(s,o),t:nc(a,o),e:nc(r,o)};return ir.runKernel(Dn,i)}});const rc=yr({zerosLike_:function(t){const e={x:mr(t,"x","zerosLike")};return ir.runKernel(oa,e)}});const sc=yr({transpose_:function(t,e){const n=mr(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),R(n.rank===e.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of perm ".concat(e,"."))),e.forEach((t=>{R(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(n.rank-1)+" but got ".concat(e)))})),n.rank<=1)return n.clone();const a={x:n},r={perm:e};return ir.runKernel(na,a,r)}});const oc=yr({dropout_:function(t,e,n,a){const r=mr(t,"x","dropout");if(R("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),R(e>=0&&e<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(e,"."))),0===e)return t instanceof Ua?r.clone():r;const s=function(t,e){if(null==e)return t.shape.slice();if(M(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let a=0;a<t.shape.length;a++)null==e[a]&&null!=t.shape[a]?n.push(t.shape[a]):n.push(e[a]);return n}return e}(r,n),o=1-e,i=zo(qo(Js(Oi(s,0,1,"float32",a),o)),o);return ei(r,i)}});const ic=yr({imag_:function(t){const e={input:mr(t,"input","imag")};return ir.runKernel(Re,e)}});const cc=yr({real_:function(t){const e={input:mr(t,"input","real")};return ir.runKernel(xn,e)}});const lc=yr({fft_:function(t){R("complex64"===t.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return ir.runKernel(be,e)}});const uc=yr({rfft_:function(t,e){R("float32"===t.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(t.dtype)));let n=t.shape[t.shape.length-1];const a=t.size/n;let r;if(null!=e&&e<n){const a=t.shape.map((t=>0)),s=t.shape.map((t=>t));s[t.shape.length-1]=e,r=Wi(t,a,s),n=e}else if(null!=e&&e>n){const a=t.shape.map((t=>t));a[t.shape.length-1]=e-n,r=Io([t,Ti(a)],t.shape.length-1),n=e}else r=t;const s=rc(r),o=mo(br(r,s),[a,n]),i=lc(o),c=Math.floor(n/2)+1,l=cc(i),u=ic(i),h=qi(l,[c,n-c],l.shape.length-1),d=qi(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,mo(br(h[0],d[0]),p)}});const hc=yr({ifft_:function(t){R("complex64"===t.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,".")));const e={input:t};return ir.runKernel(Ae,e)}});const dc=yr({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const r=mo(t,[n,e]);a=hc(r)}else{const r=[n,2*(e-1)],s=mo(cc(t),[n,e]),o=mo(ic(t),[n,e]),i=Li(Wi(s,[0,1],[n,e-2]),1),c=ei(Li(Wi(o,[0,1],[n,e-2]),1),Xs(-1)),l=Io([s,i],1),u=Io([o,c],1),h=mo(br(l,u),[r[0],r[1]]);a=hc(h)}if(a=cc(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=mo(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}});const pc=yr({conv2DBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=mo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=mo(e,[1,e.shape[0],e.shape[1],e.shape[2]])),R(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),R(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),R(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===s?i.shape[3]:i.shape[1],u="NHWC"===s?c.shape[3]:c.shape[1];R(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),R(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),null!=o&&R(L(r),(()=>"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(r,".")));const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:o,filterShape:n};return ir.runKernel(jt,h,d)}});const fc=yr({relu6_:function(t){const e={x:mr(t,"x","relu6")};return ir.runKernel(Cn,e)}});const mc=yr({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:mr(t,"x","step")},a={alpha:e};return ir.runKernel(ia,n,a)}});function gc(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return ei(t,mc(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function yc(t,e){let n=e;const a=Wo(t.shape,e.shape);return a.length>0&&(n=ai(n,a)),mo(n,t.shape)}function bc(t,e,n,a){if("linear"===e)return t;if("relu"===e)return Mi(t);if("elu"===e)return Po(t);if("relu6"===e)return fc(t);if("prelu"===e)return Ai(t,n);if("leakyrelu"===e)return Jo(t,a);if("sigmoid"===e)return Bi(t);throw new Error("Unknown fused activation ".concat(e,"."))}const xc=(t,e)=>!(t>0)||"linear"===e;const vc=yr({fusedConv2d_:function(t){let{x:e,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=t;if(l=l||"linear",!1===xc(ir.state.gradientDepth,l)){let t=Eo(e,n,a,r,s,o,i);return null!=c&&(t=Js(t,c)),bc(t,l,u,h)}const d=mr(e,"x","conv2d"),p=mr(n,"filter","conv2d");let f=d,m=!1;3===d.rank&&(m=!0,f=mo(d,[1,d.shape[0],d.shape[1],d.shape[2]])),R(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),R(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),null!=i&&R(L(r),(()=>"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(i," but got pad ").concat(r,"."))),R(f.shape[3]===p.shape[2],(()=>"Error in conv2d: depth of input (".concat(f.shape[3],") must match ")+"input depth for filter ".concat(p.shape[2],"."))),R(po(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'"))),R("NHWC"===s,(()=>"Error in conv2d: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const g=ro(f.shape,p.shape,a,o,r,i);let y,b;null!=c&&(y=mr(c,"bias","fused conv2d"),[y]=$a(y,d),Vo(g.outShape,y.shape)),null!=u&&(b=mr(u,"prelu weights","fused conv2d"));const x=(t,e)=>{const[n,s,i,c]=e,u=gc(t,i,l);R(ho(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const h=[Ro(s.shape,u,n,a,r),pc(s,u,n.shape,a,r)];if(null!=c){const t=yc(c,u);h.push(t)}return h},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const t=qs(((t,e,n)=>{let a=ir.runKernel(ha,v,w);return n([e,t,a]),m&&(a=mo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return t(f,p)}{const t=qs(((t,e,n,a)=>{let r=ir.runKernel(ha,v,w);return a([e,t,r,n]),m&&(r=mo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return t(f,p,y)}}});const wc=yr({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=t;3===t.rank&&(i=mo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let c=e;3===c.rank&&(c=mo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,filterShape:n};return ir.runKernel(ae,l,u)}});const kc=yr({depthwiseConv2dNativeBackpropInput_:function(t,e,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],o=arguments.length>6?arguments[6]:void 0,i=e,c=!1;3===e.rank&&(c=!0,i=mo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:o,dilations:s,inputShape:t},h=ir.runKernel(re,l,u);return c?mo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Ic=yr({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=t;if(!1===xc(ir.state.gradientDepth,l)){let t=Mo(e,n,a,r,s,o,i);return null!=c&&(t=Js(t,c)),bc(t,l,u,h)}const d=mr(e,"x","depthwiseConv2d"),p=mr(n,"filter","depthwiseConv2d");let f=d,m=!1;3===d.rank&&(m=!0,f=mo(d,[1,d.shape[0],d.shape[1],d.shape[2]])),R(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),R(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),R(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==o&&(o=[1,1]),R(po(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),null!=i&&R(L(r),(()=>"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(i," but got pad ").concat(r,".")));const g=ro(f.shape,p.shape,a,o,r,i,!0);let y,b;null!=c&&(y=mr(c,"bias","fused conv2d"),[y]=$a(y,d),Vo(g.outShape,y.shape)),null!=u&&(b=mr(u,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{R(ho(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,c,u]=e,h=gc(t,c,l),d=kc(s.shape,h,n,a,r,o,i),p=wc(s,h,n.shape,a,r,o,i);if(null!=u){return[d,p,yc(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const t=qs(((t,e,n)=>{let a=ir.runKernel(da,v,w);return n([e,t,a]),m&&(a=mo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return t(f,p)}{const t=qs(((t,e,n,a)=>{let r=ir.runKernel(da,v,w);return a([e,t,r,n]),m&&(r=mo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return t(f,p,y)}}});const Nc=yr({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=mr(t,"a","matMul"),s=mr(e,"b","matMul");[r,s]=$a(r,s);const o={a:r,b:s},i={transposeA:n,transposeB:a};return ir.runKernel(Mt,o,i)}});const Tc=yr({fusedMatMul_:function(t){let{a:e,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c}=t;if(!1===xc(ir.state.gradientDepth,o)){let t=Nc(e,n,a,r);return null!=s&&(t=Js(t,s)),bc(t,o,i,c)}let l=mr(e,"a","fused matMul"),u=mr(n,"b","fused matMul");[l,u]=$a(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=O(m),b=O(g);R(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(l.rank," and ").concat(u.rank,"."))),R(M(m,g),(()=>"Error in fused matMul: outer dimensions (".concat(m,") and (")+"".concat(g,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," must match."))),R(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=l.shape.slice(0,-2).concat([p,f]),v=mo(l,a?[y,h,p]:[y,p,h]),w=mo(u,r?[b,f,d]:[b,d,f]);let k,I;null!=s&&(k=mr(s,"bias","fused matMul"),[k]=$a(k,l),Vo(x,k.shape)),null!=i&&(I=mr(i,"prelu weights","fused matMul"));const N=(t,e)=>{const[n,i,c,l]=e,u=gc(mo(t,c.shape),c,o);let h,d;if(a||r?!a&&r?(h=Nc(u,i,!1,!1),d=Nc(u,n,!0,!1)):a&&!r?(h=Nc(i,u,!1,!0),d=Nc(n,u,!1,!1)):(h=Nc(i,u,!0,!0),d=Nc(u,n,!0,!0)):(h=Nc(u,i,!1,!0),d=Nc(n,u,!0,!1)),null!=s){return[h,d,yc(l,u)]}return[h,d]},T={a:v,b:w,bias:k,preluActivationWeights:I},S={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:c};if(null==s){const t=qs(((t,e,n)=>{const a=ir.runKernel(ua,T,S);return n([t,e,a]),{value:mo(a,x),gradFunc:N}}));return t(v,w)}{const t=qs(((t,e,n,a)=>{const r=ir.runKernel(ua,T,S);return a([t,e,r,n]),{value:mo(r,x),gradFunc:N}}));return t(v,w,k)}}});function Sc(t,e,n){const a=1-t%2,r=new Float32Array(t);for(let s=0;s<t;++s){const o=2*Math.PI*s/(t+a-1);r[s]=e-n*Math.cos(o)}return Zi(r,"float32")}yr({hammingWindow_:function(t){return Sc(t,.54,.46)}});const Cc=yr({hannWindow_:function(t){return Sc(t,.5,.5)}});const Ec=yr({frame_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+e<=t.size;)o.push(Wi(t,s,e)),s+=n;if(a)for(;s<t.size;){const a=s+e-t.size,i=Io([Wi(t,s,e-a),Ko([a],r)]);o.push(i),s+=n}return 0===o.length?$i([],[0,e]):mo(Io(o),[o.length,e])}});yr({stft_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Cc;var s;null==a&&(s=e,a=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const o=Ec(t,e,n),i=ei(o,r(e));return uc(i,a)}});const Ac=yr({cropAndResize_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=mr(t,"image","cropAndResize"),i=mr(e,"boxes","cropAndResize","float32"),c=mr(n,"boxInd","cropAndResize","int32"),l=i.shape[0];R(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),R(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),R(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),R(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),R(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),R("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:o,boxes:i,boxInd:c},h={method:r,extrapolationValue:s,cropSize:a};return ir.runKernel($t,u,h)}});const Rc=yr({flipLeftRight_:function(t){const e=mr(t,"image","flipLeftRight","float32");R(4===e.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,".")));const n={image:e};return ir.runKernel(ve,n,{})}});const Fc=yr({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=mr(t,"image","rotateWithOffset","float32");R(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:e,fillValue:n,center:a};return ir.runKernel(la,s,o)}});function Dc(t,e,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=t.shape[0];return n=Math.min(n,o),R(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),R(2===t.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'"))),R(4===t.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1]))),R(1===e.rank,(()=>"scores must be a 1D tensor")),R(e.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(e.shape[0]))),R(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const _c=yr({nonMaxSuppression_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=mr(t,"boxes","nonMaxSuppression"),o=mr(e,"scores","nonMaxSuppression"),i=Dc(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return ir.runKernel(cn,{boxes:s,scores:o},c)}});function Oc(t,e,n){const a=function(t,e,n){return function(t,e,n){let a=0,r=t.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(e,t[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(t,e,n||Mc)}(t,e,n),r=a<0?-(a+1):a;t.splice(r,0,e)}function Mc(t,e){return t>e?1:t<e?-1:0}function Lc(t,e,n,a,r){return Bc(t,e,n,a,r,0)}function zc(t,e,n,a,r,s){return Bc(t,e,n,a,r,0,!1,s,!0)}function Pc(t,e,n,a,r,s){return Bc(t,e,n,a,r,s,!0)}function Bc(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<e.length;g++)e[g]>r&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(Uc);const u=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&l.length>0;){const e=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=e;if(n<r)break;let i=!1;for(let c=h.length-1;c>=o;--c){const n=Wc(t,s,h[c]);if(n>=a){i=!0;break}if(e.score=e.score*Vc(a,u,n),e.score<=r)break}e.suppressBeginIndex=h.length,i||(e.score===n?(h.push(s),d.push(e.score)):e.score>r&&Oc(l,e,Uc))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function Wc(t,e,n){const a=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Vc(t,e,n){const a=Math.exp(e*n*n);return n<=t?a:0}function Uc(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const Gc=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=mr(t,"boxes","nonMaxSuppressionAsync"),o=mr(e,"scores","nonMaxSuppressionAsync"),i=Dc(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],u=c[1],{selectedIndices:h}=Lc(l,u,n,a,r);return s!==t&&s.dispose(),o!==e&&o.dispose(),Zi(h,"int32")};const Hc=yr({nonMaxSuppressionWithScore_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=mr(t,"boxes","nonMaxSuppression"),i=mr(e,"scores","nonMaxSuppression"),c=Dc(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l={boxes:o,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},h=ir.runKernel(un,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const jc=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=mr(t,"boxes","nonMaxSuppressionAsync"),i=mr(e,"scores","nonMaxSuppressionAsync"),c=Dc(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Pc(u,h,n,a,r,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Zi(d,"int32"),selectedScores:Zi(p)}};const Kc=yr({nonMaxSuppressionPadded_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=mr(t,"boxes","nonMaxSuppression"),i=mr(e,"scores","nonMaxSuppression"),c=Dc(o,i,n,a,r,null),l={boxes:o,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:s},h=ir.runKernel(ln,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const qc=async function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=mr(t,"boxes","nonMaxSuppressionAsync"),i=mr(e,"scores","nonMaxSuppressionAsync"),c=Dc(o,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=zc(d,p,l,u,h,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),{selectedIndices:Zi(f,"int32"),validOutputs:Xs(m,"int32")}};const Xc=yr({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=mr(t,"images","resizeBilinear");R(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),R(2===e.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,"."))),R(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=mo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=ir.runKernel(Tn,i,c);return o?mo(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Yc=yr({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=mr(t,"images","resizeNearestNeighbor");R(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),R(2===e.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,"."))),R("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),R(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,o=!1;3===r.rank&&(o=!0,s=mo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=e,i={images:s},c={alignCorners:n,halfPixelCenters:a,size:e},l=ir.runKernel(In,i,c);return o?mo(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Qc=yr({transform_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=mr(t,"image","transform","float32"),i=mr(e,"transforms","transform","float32");R(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),R(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),R(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const c={image:o,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return ir.runKernel(ea,c,l)}});const Jc=yr({lessEqual_:function(t,e){let n=mr(t,"a","lessEqual"),a=mr(e,"b","lessEqual");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Le,r)}});function Zc(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:a};return ir.runKernel(bn,{},r)}const $c=yr({bandPart_:function(t,e,n){R(e%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(e,"."))),R(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,".")));const a=mr(t,"a","bandPart");R(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);if(!(e<=s))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(s,")."));if(!(n<=o))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."));e<0&&(e=s),n<0&&(n=o);const i=mo(Zc(0,s,1,"int32"),[-1,1]),c=Zc(0,o,1,"int32"),l=ni(i,c),u=si(Jc(l,Xs(+e,"int32")),Qo(l,Xs(-n,"int32"))),h=Ti([s,o],a.dtype);return mo(Qi(ec(mo(a,[-1,s,o])).map((t=>ac(u,t,h)))),r)}});const tl=yr({pow_:function(t,e){let n=mr(t,"base","pow"),a=mr(e,"exp","pow");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(mn,r)}});function el(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return Qs(t);if(1!==t.rank&&null===n)return el(mo(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return ai(Qs(t),n);if(e===1/0)return ti(Qs(t),n);if(e===-1/0)return ui(Qs(t),n);if("euclidean"===e||2===e)return Xi(ai(tl(Qs(t),Xs(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return ti(ai(Qs(t),n[0]),n[1]-1);if(e===1/0)return ti(ai(Qs(t),n[1]),n[0]);if(e===-1/0)return ui(ai(Qs(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Xi(ai(vi(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const nl=yr({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=el(t=mr(t,"x","norm"),e,n);let s=r.shape;if(a){const e=V(n,t.shape);s=mi(r.shape,e)}return mo(r,s)}});const al=yr({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,R(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)R(t[e].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")")))}else e=!0,t=qi(t,t.shape[0],0).map((t=>Yi(t,[0])));R(t.length<=t[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],").")));const n=[],a=t;for(let r=0;r<t.length;++r)n.push(ir.tidy((()=>{let t=a[r];if(r>0)for(let e=0;e<r;++e){const a=ei(ai(ei(n[e],t)),n[e]);t=ni(t,a)}return zo(t,nl(t,"euclidean"))})));return e?Qi(n,0):n}});function rl(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ir.tidy((()=>{R(2===t.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor.")));const n=t.shape[0],a=t.shape[1];let r=jo(n),s=is(t);const o=$i([[1]],[1,1]);let i=is(o);const c=n>=a?a:n;for(let t=0;t<c;++t){const e=s,c=i,l=r;[i,s,r]=ir.tidy((()=>{const e=Wi(s,[t,t],[n-t,1]),c=nl(e),l=Wi(s,[t,t],[1,1]),u=ac(Yo(l,0),$i([[-1]]),$i([[1]])),h=ni(l,ei(u,c)),d=zo(e,h);i=1===d.shape[0]?is(o):Io([o,Wi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ki(zo(Nc(u,h),c)),f=Wi(s,[t,0],[n-t,a]),m=ei(p,i),g=sc(i);if(0===t)s=ni(f,Nc(m,Nc(g,f)));else{const e=ni(f,Nc(m,Nc(g,f)));s=Io([Wi(s,[0,0],[t,a]),e],0)}const y=sc(m),b=Wi(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=ni(b,Nc(Nc(b,i),y));else{const e=ni(b,Nc(Nc(b,i),y));r=Io([Wi(r,[0,0],[n,t]),e],1)}return[i,s,r]})),Gs([e,c,l])}return!e&&n>a&&(r=Wi(r,[0,0],[n,a]),s=Wi(s,[0,0],[a,a])),[r,s]}))}const sl=yr({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(R(t.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank))),2===t.rank)return rl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),a=ec(mo(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],s=[];a.forEach((t=>{const[n,a]=rl(t,e);r.push(n),s.push(a)}));return[mo(Qi(r,0),t.shape),mo(Qi(s,0),t.shape)]}}});var ol;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ol||(ol={}));const il=yr({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ol.SUM_BY_NONZERO_WEIGHTS;const a=mr(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=mr(e,"weights","computeWeightedLoss"));const s=null==r?a:ei(a,r);if(n===ol.NONE)return s;if(n===ol.SUM)return ai(s);if(n===ol.MEAN){if(null==r)return li(s);{const t=a.size/r.size,e=zo(ai(s),ai(r));return t>1?zo(e,Xs(t)):e}}if(n===ol.SUM_BY_NONZERO_WEIGHTS){if(null==r)return zo(ai(s),Xs(a.size));{const t=ei(r,Si(a.shape)),e=os(ai(Ii(t,Xs(0))),"float32");return zo(ai(s),e)}}throw Error("Unknown reduction: ".concat(n))}});yr({absoluteDifference_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ol.SUM_BY_NONZERO_WEIGHTS;const r=mr(t,"labels","absoluteDifference"),s=mr(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=mr(n,"weights","absoluteDifference")),F(r.shape,s.shape,"Error in absoluteDifference: ");const i=Qs(ni(r,s));return il(i,o,a)}});yr({cosineDistance_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ol.SUM_BY_NONZERO_WEIGHTS;const s=mr(t,"labels","cosineDistance"),o=mr(e,"predictions","cosineDistance");let i=null;null!=a&&(i=mr(a,"weights","cosineDistance")),F(s.shape,o.shape,"Error in cosineDistance: ");const c=Xs(1),l=ni(c,ai(ei(s,o),n,!0));return il(l,i,r)}});yr({hingeLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ol.SUM_BY_NONZERO_WEIGHTS,r=mr(t,"labels","hingeLoss");const s=mr(e,"predictions","hingeLoss");let o=null;null!=n&&(o=mr(n,"weights","hingeLoss")),F(r.shape,s.shape,"Error in hingeLoss: ");const i=Xs(1);r=ni(ei(Xs(2),r),i);const c=Mi(ni(i,ei(r,s)));return il(c,o,a)}});yr({huberLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ol.SUM_BY_NONZERO_WEIGHTS;const s=mr(t,"labels","huberLoss"),o=mr(e,"predictions","huberLoss");let i=null;null!=n&&(i=mr(n,"weights","huberLoss")),F(s.shape,o.shape,"Error in huberLoss: ");const c=Xs(a),l=Qs(ni(o,s)),u=hi(l,c),h=ni(l,u),d=Js(ei(Xs(.5),vi(u)),ei(c,h));return il(d,i,r)}});yr({logLoss_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ol.SUM_BY_NONZERO_WEIGHTS;const s=mr(t,"labels","logLoss"),o=mr(e,"predictions","logLoss");let i=null;null!=n&&(i=mr(n,"weights","logLoss")),F(s.shape,o.shape,"Error in logLoss: ");const c=Xs(1),l=Xs(a),u=ki(ei(s,Zo(Js(o,l)))),h=ei(ni(c,s),Zo(Js(ni(c,o),l))),d=ni(u,h);return il(d,i,r)}});const cl=yr({squaredDifference_:function(t,e){let n=mr(t,"a","squaredDifference"),a=mr(e,"b","squaredDifference");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(qn,r,{})}});yr({meanSquaredError_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ol.SUM_BY_NONZERO_WEIGHTS;const r=mr(t,"labels","meanSquaredError"),s=mr(e,"predictions","meanSquaredError");let o=null;null!=n&&(o=mr(n,"weights","meanSquaredError")),F(r.shape,s.shape,"Error in meanSquaredError: ");const i=cl(r,s);return il(i,o,a)}});const ll=yr({log1p_:function(t){const e={x:mr(t,"x","log1p")};return ir.runKernel(Be,e)}});yr({sigmoidCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ol.SUM_BY_NONZERO_WEIGHTS,s=mr(t,"multiClassLabels","sigmoidCrossEntropy");const o=mr(e,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=mr(n,"weights","sigmoidCrossEntropy")),F(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const t=Xs(a),e=Xs(1),n=Xs(.5);s=Js(ei(s,ni(e,t)),ei(n,t))}const c=function(t,e){const n=mr(t,"labels","sigmoidCrossEntropyWithLogits"),a=mr(e,"logits","sigmoidCrossEntropyWithLogits");F(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Mi(a),s=ei(a,n),o=ll($o(ki(Qs(a))));return Js(ni(r,s),o)}(s,o);return il(c,i,r)}});const ul=yr({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=mr(t,"x","logSumExp"),r=V(e,a.shape),s=ti(a,r,!0),o=ni(a,s),i=$o(o),c=ai(i,r),l=Zo(c),u=Js(mo(s,l.shape),l);if(n){const t=mi(u.shape,r);return mo(u,t)}return u}});yr({softmaxCrossEntropy_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:ol.SUM_BY_NONZERO_WEIGHTS,s=mr(t,"onehotLabels","softmaxCrossEntropy");const o=mr(e,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=mr(n,"weights","softmaxCrossEntropy")),F(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const t=Xs(a),e=Xs(1),n=Xs(s.shape[1]);s=Js(ei(s,ni(e,t)),zo(t,n))}const c=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const a=qs(((t,e,a)=>{const r=ul(e,[n],!0),s=ni(os(e,"float32"),r);a([t,s]);const o=ki(ei(s,t));return{value:ai(o,[n]),gradFunc:(t,e)=>{const[a,r]=e,s=mi(t.shape,[n]);return[ei(mo(t,s),ni(os(a,"float32"),$o(r))),ei(mo(t,s),ni($o(r),os(a,"float32")))]}}}));return a(t,e)}(s,o);return il(c,i,r)}});yr({sparseReshape_:function(t,e,n){const a=mr(t,"inputIndices","sparseReshape"),r=mr(e,"inputShape","sparseReshape"),s=mr(n,"newShape","sparseReshape");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=ir.runKernel(jn,o);return{outputIndices:i[0],outputShape:i[1]}}});const hl={flipLeftRight:Rc,resizeNearestNeighbor:Yc,resizeBilinear:Xc,rotateWithOffset:Fc,cropAndResize:Ac,nonMaxSuppression:_c,nonMaxSuppressionAsync:Gc,nonMaxSuppressionWithScore:Hc,nonMaxSuppressionWithScoreAsync:jc,nonMaxSuppressionPadded:Kc,nonMaxSuppressionPaddedAsync:qc,transform:Qc},dl={bandPart:$c,gramSchmidt:al,qr:sl};class pl extends Ys{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ir.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=ir.registeredVariables[e],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:Us((()=>rc(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:Us((()=>rc(a).variable(r)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Us((()=>{const t=Js(ei(o,this.rho),ei(vi(s),1-this.rho)),e=ei(zo(Xi(Js(i,this.epsilon)),Xi(Js(o,this.epsilon))),s),n=Js(ei(i,this.rho),ei(vi(e),1-this.rho));o.assign(t),i.assign(n);const r=Js(ei(e,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Gs(this.accumulatedGrads.map((t=>t.variable))),Gs(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}pl.className="Adadelta",Bs(pl);class fl extends Ys{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=ir.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:Us((()=>Ko(a.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=this.accumulatedGrads[n].variable;Us((()=>{const t=Js(s,vi(r));s.assign(t);const e=Js(ei(zo(r,Xi(Js(t,ir.backend.epsilon()))),-this.learningRate),a);a.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Gs(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}fl.className="Adagrad",Bs(fl);class ml extends Ys{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Us((()=>{this.accBeta1=Xs(e).variable(),this.accBeta2=Xs(n).variable()})),null==a&&(this.epsilon=ir.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Us((()=>{const n=ni(1,this.accBeta1),a=ni(1,this.accBeta2);e.forEach(((e,r)=>{const s=ir.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:Us((()=>rc(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(e,"/v"),variable:Us((()=>rc(s).variable(o)))});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Js(ei(c,this.beta1),ei(i,1-this.beta1)),h=Js(ei(l,this.beta2),ei(vi(i),1-this.beta2)),d=zo(u,n),p=zo(h,a);c.assign(u),l.assign(h);const f=Js(ei(zo(d,Js(Xi(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(ei(this.accBeta1,this.beta1)),this.accBeta2.assign(ei(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Gs(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Gs(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Us((()=>{this.accBeta1.assign(tl(this.beta1,this.iterations_+1)),this.accBeta2.assign(tl(this.beta2,this.iterations_+1))}));const e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}ml.className="Adam",Bs(ml);class gl extends Ys{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Us((()=>{this.iteration=Xs(0).variable(),this.accBeta1=Xs(e).variable()})),null==a&&(this.epsilon=ir.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Us((()=>{const n=ni(1,this.accBeta1),a=zo(-this.learningRate,Js(ei(this.iteration,this.decay),1));e.forEach(((e,r)=>{const s=ir.registeredVariables[e],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(e,"/m"),variable:rc(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(e,"/v"),variable:rc(s).variable(o)});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Js(ei(c,this.beta1),ei(i,1-this.beta1)),h=ei(l,this.beta2),d=Qs(i),p=ci(h,d);c.assign(u),l.assign(p);const f=Js(ei(zo(a,n),zo(u,Js(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Js(this.iteration,1)),this.accBeta1.assign(ei(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Gs(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Gs(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}gl.className="Adamax",Bs(gl);class yl extends Ys{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const r=ir.registeredVariables[e];Us((()=>{const t=Js(ei(this.c,a),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Hs(Xs(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}yl.className="SGD",Bs(yl);class bl extends yl{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Xs(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=ir.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:Us((()=>rc(a).variable(t)))}}const r=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Us((()=>{let t;const e=Js(ei(this.m,r),s);t=this.useNesterov?Js(ei(this.c,Js(s,ei(e,this.m))),a):Js(ei(this.c,e),a),r.assign(e),a.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Gs(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}bl.className="Momentum",Bs(bl);class xl extends Ys{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=ir.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const a=ir.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:Us((()=>rc(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:Us((()=>rc(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:Us((()=>rc(a).variable(r)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Us((()=>{const t=Js(ei(o,this.decay),ei(vi(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Js(ei(e,this.decay),ei(s,1-this.decay)),c=zo(ei(s,this.learningRate),Xi(ni(t,Js(vi(r),this.epsilon)))),l=Js(ei(i,this.momentum),c);o.assign(t),e.assign(r),i.assign(l);const u=ni(a,l);a.assign(u)}else{const t=Js(ei(o,this.decay),ei(vi(s),1-this.decay)),e=Js(ei(i,this.momentum),zo(ei(s,this.learningRate),Xi(Js(t,this.epsilon))));o.assign(t),i.assign(e);const n=ni(a,e);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Gs(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Gs(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Gs(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}xl.className="RMSProp",Bs(xl);class vl{static sgd(t){return new yl(t)}static momentum(t,e){return new bl(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new xl(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new ml(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new pl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new gl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new fl(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}const wl={sgd:vl.sgd,momentum:vl.momentum,adadelta:vl.adadelta,adagrad:vl.adagrad,rmsprop:vl.rmsprop,adamax:vl.adamax,adam:vl.adam},kl="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function Il(){return new Promise((t=>kl((()=>t()))))}function Nl(t,e){const n=t[0].length;t.forEach(((t,e)=>{R(t.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),R(e>=0&&e<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=t[0];t.forEach(((t,r)=>{for(let s=0;s<n;s++)R(s===e||t[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function Tl(t,e){const n=t[0].slice();for(let a=1;a<t.length;a++)n[e]+=t[a][e];return n}const Sl=30;function Cl(t){return t<=Sl?t:Z(t,Math.floor(Math.sqrt(t)))}function El(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Al(t,e,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function Rl(t,e){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(e);for(let a=e+1;a<t;++a)a<=2*e?(n.push(a),n.push(a-(e+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<t;++n)n>=2*e+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function Fl(t,e,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(t[0]/n):r.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?a?r.push(e[s-1]*t[s]):r.push(t[s]/e[s-1]):r.push(t[s]);return r}function Dl(t,e){const n=[0];for(let a=0;a<e;++a)n.push(t[a][0]);return n}function _l(t,e,n){const a=t.slice(0,1);for(let r=0;r<n;++r)a.push(t[r+1]-e[r][0]-e[r][1]);return a}function Ol(t,e){const n=t.shape.length,a=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[a-1]," vs. ").concat(n));if(0===O(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const r=e.shape,s=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const i=t.shape,c=r.slice();c.pop();let l=1;for(let h=s;h<n;++h)l*=i[h],c.push(i[h]);const u=[...$(t.shape).map((t=>t/l)),1].slice(0,s);return[c,o,l,u]}function Ml(t,e,n){const a=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(t.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+t.length-a)throw new Error(s+" update.rank != ".concat(r+t.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==e.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(e.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==t[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(t[o+r],")"))}function Ll(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}Ml(n,e,t)}function zl(t,e,n){const a=e.shape.length,r=a>1?e.shape[a-1]:1,s=n.length;let o=1;for(let c=r;c<s;++c)o*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:O(e.shape)/i,sliceSize:o,strides:[...$(n.slice(0,r)),1],outputSize:O(n)}}const Pl=1.7580993408473768,Bl=1.0507009873554805,Wl=.3275911,Vl=.254829592,Ul=-.284496736,Gl=1.421413741,Hl=-1.453152027,jl=1.061405429;function Kl(){dt().getBool("IS_TEST")||console.warn(...arguments)}function ql(){dt().getBool("IS_TEST")||console.log(...arguments)}function Xl(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let a=0;a<n.length;a+=2)n[a]=t[a/2],n[a+1]=e[a/2];return n}function Yl(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<t.length;a+=2)e[a/2]=t[a],n[a/2]=t[a+1];return{real:e,imag:n}}function Ql(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=0;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function Jl(t){const e=Math.floor(t.length/4),n=new Float32Array(e),a=new Float32Array(e);for(let r=2;r<t.length;r+=4)n[Math.floor(r/4)]=t[r],a[Math.floor(r/4)]=t[r+1];return{real:n,imag:a}}function Zl(t,e){return{real:t[2*e],imag:t[2*e+1]}}function $l(t,e,n,a){t[2*a]=e,t[2*a+1]=n}function tu(t,e){const n=new Float32Array(t/2),a=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const s=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function eu(t,e,n){const a=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(a),imag:Math.sin(a)}}const nu="->",au=/->/g,ru=",",su="...";function ou(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(au,"").length)/nu.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(nu,'").'));const[a,r]=t.split(nu);R(-1===a.indexOf(su),(()=>'The ellipsis notation ("'.concat(su,'") is not supported yet.')));const s=a.split(ru),o=s.length;if(e!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(e));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const t=r[h];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error("Output subscripts contain the label ".concat(t," ")+"not present in the input subscripts.");-1===i.indexOf(t)&&i.push(t)}for(let h=0;h<a.length;++h){const t=a[h];-1===i.indexOf(t)&&t!==ru&&i.push(t)}const c=new Array(s.length);for(let h=0;h<o;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error("Found duplicate axes in input component ".concat(s[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let t=0;t<s[h].length;++t)c[h].push(i.indexOf(s[h][t]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function iu(t,e){let n=new Array(t);n.fill(-1);for(let r=0;r<e.length;++r)n[e[r]]=r;const a=[];for(let r=0;r<t;++r)-1===n[r]&&a.push(r);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:a}}function cu(t,e,n){const a=new Array(t);for(let r=0;r<n.length;++r){const t=n[r].shape;for(let n=0;n<e[r].length;++n)void 0===a[e[r][n]]?a[e[r][n]]=t[n]:R(a[e[r][n]]===t[n],(()=>"Expected dimension ".concat(a[e[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(t),", ")+"but got dimension ".concat(t[n])))}}function lu(t,e){const n=t,a=[];let r=0;0===t.length&&n.push(-1),r=t.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const t=hu(e,n[o]);for(const e of t)-1===s.indexOf(e)&&(a[o].push(e),s.push(e))}return{path:n,steps:a}}function uu(t){return t.every(((t,e)=>t===e))}function hu(t,e){const n=[];for(let a=0;a<t.length;++a)0!==t[a].length&&-1===t[a].indexOf(e)&&-1!==e||n.push(a);return n}function du(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof e)R(t.shape[n]%e===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(e).fill(t.shape[n]/e);else{const r=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);R(r<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const a=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-a}R(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=e}return a}function pu(t,e){let n,a=!1;for(t<=Sl?(n=t,a=!0):n=Z(t,Math.floor(Math.sqrt(t)));!a;)n>e||n===t?a=!0:n=Z(t,n+1);return n}function fu(t,e,n){const a=[],r=t.length;for(let s=0;s<r;s++)s!==e?a.push(t[s]):a.push(n);return a}function mu(t,e,n,a){const r=e.shape.length,s=t.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(t.shape[h]!==e.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(t.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(e.shape[h],"."));const o=t.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(t.shape[h]),c*=t.shape[h];for(let h=a;h<n;h++)i.push(t.shape[h]),l*=t.shape[h];for(let h=a;h<r;h++)i.push(e.shape[h]);for(let h=n+1;h<s;h++)i.push(t.shape[h]),u*=t.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function gu(t){try{return t.map((t=>Sa(t)))}catch(ZM){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(ZM))}}function yu(t){return t.map((t=>Ta(t)))}function bu(t,e){const n=[];for(let s=0;s<e.length;s++)e[s]&&n.push(s);const a=ss(t,"int32"),r=ss([n.length,t.length],"int32");for(let s=0;s<n.length;s++){const e=a.indexToLoc(n[s]),o=s*t.length;r.values.set(e,o)}return r.toTensor()}const xu={kernelName:yt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,mc(os(n,"float32"),-1))}}},vu={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=vi(os(n,"float32")),a=Xi(ni(Xs(1),e));return ki(zo(t,a))}}}},wu={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xi(ni(vi(os(n,"float32")),1));return zo(t,e)}}}},ku={kernelName:vt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{let e=t;const a=Wo(n.shape,r);return a.length>0&&(e=ai(e,a)),mo(e,n.shape)},b:()=>{let e=t;const n=Wo(a.shape,r);return n.length>0&&(e=ai(e,n)),mo(e,a.shape)}}}},Iu={kernelName:wt,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,a)=>{n[a]=()=>t.clone()})),n}},Nu={kernelName:Nt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>rc(n)}}},Tu={kernelName:Tt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>rc(n)}}},Su={kernelName:St,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,Xi(ni(Xs(1),vi(os(n,"float32")))))}}},Cu={kernelName:Ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xi(Js(Xs(1),vi(os(n,"float32"))));return zo(t,e)}}}},Eu={kernelName:Rt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{const e=Js(vi(n),vi(a));let s=ei(t,zo(a,e));const o=Wo(n.shape,r);return o.length>0&&(s=ai(s,o)),mo(s,n.shape)},b:()=>{const e=Js(vi(n),vi(a));let s=ki(ei(t,zo(n,e)));const o=Wo(a.shape,r);return o.length>0&&(s=ai(s,o)),mo(s,a.shape)}}}},Au={kernelName:Et,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,Js(vi(os(n,"float32")),1))}}},Ru={kernelName:At,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,ni(Xs(1),vi(os(n,"float32"))))}}};const Fu=yr({avgPool3dGrad_:function(t,e,n,a,r,s){const o=mr(t,"dy","avgPool3dGrad"),i=mr(e,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=mo(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=mo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),R(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),R(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),null!=s&&R(L(r),(()=>"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(s," but got pad ").concat(r,".")));const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=ir.runKernel(Ot,h,d);return u?mo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Du={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>Fu(t,a,r,s,o,i)}}};const _u=yr({avgPoolGrad_:function(t,e,n,a,r){const s=mr(t,"dy","avgPoolGrad"),o=mr(e,"input","avgPoolGrad");R(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=mo(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=mo(s,[1,s.shape[0],s.shape[1],s.shape[2]])),R(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),R(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=ir.runKernel(Dt,u,h);return l?mo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ou={kernelName:Ft,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{filterSize:r,strides:s,pad:o}=n;return{x:()=>_u(t,a,r,s,o)}}},Mu={kernelName:Mt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[a,r]=e,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>Nc(t,r,!1,!1),b:()=>Nc(t,a,!0,!1)}:s&&!o?{a:()=>Nc(r,t,!1,!0),b:()=>Nc(a,t,!1,!1)}:{a:()=>Nc(r,t,!0,!0),b:()=>Nc(t,a,!0,!0)}:{a:()=>Nc(t,r,!1,!0),b:()=>Nc(a,t,!0,!1)}}};const Lu=yr({spaceToBatchND_:function(t,e,n){const a=mr(t,"x","spaceToBatchND");R(a.rank>=1+e.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(e.length))),R(n.length===e.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length))),R(a.shape.reduce(((t,a,r)=>r>0&&r<=e.length?t&&(a+n[r-1][0]+n[r-1][1])%e[r-1]===0:t),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString())));const r={x:a},s={blockShape:e,paddings:n};return ir.runKernel(Un,r,s)}}),zu={kernelName:Lt,gradFunc:(t,e,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Lu(t,a,r)}}},Pu={kernelName:"BroadcastTo",gradFunc:(t,e,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>ai(t,i,!0)}}},Bu={kernelName:Pt,gradFunc:t=>({x:()=>t.clone()})},Wu={kernelName:Bt,gradFunc:t=>({x:()=>rc(t)})},Vu={kernelName:Wt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>ac(si(Qo(a,r),Jc(a,s)),t,rc(t))}}},Uu={kernelName:Ut,inputsToSave:["x"],gradFunc:xu.gradFunc},Gu={kernelName:Gt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const a=e.map((t=>t.shape)),{axis:r}=n,s=V(r,e[0].shape)[0],o=a.map((t=>t[s]));return qi(t,o,s).map((t=>()=>t))}},Hu={kernelName:Ht,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return R(ho(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>Ro(a.shape,t,r,o,i,c),filter:()=>pc(a,t,r.shape,o,i,c)}}},ju={kernelName:Kt,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Eo(t,r,s,o,i,1,c),filter:()=>pc(t,a,r.shape,s,o,i,c)}}};const Ku=yr({conv3DBackpropFilter_:function(t,e,n,a,r){let s=t;4===t.rank&&(s=mo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=mo(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),R(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),R(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),R(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),R(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),R(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return ir.runKernel(Xt,i,c)}}),qu={kernelName:qt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s}=n;R(ho(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=e;return{x:()=>_o(o.shape,t,i,r,s),filter:()=>Ku(o,t,i.shape,r,s)}}};const Xu=yr({sin_:function(t){const e={x:mr(t,"x","sin")};return ir.runKernel(Mn,e)}}),Yu={kernelName:Qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(ki(Xu(os(n,"float32"))),t)}}};const Qu=yr({sinh_:function(t){const e={x:mr(t,"x","sinh")};return ir.runKernel(Ln,e)}}),Ju={kernelName:Jt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(Qu(os(n,"float32")),t)}}};const Zu=yr({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:mr(t,"x","cumsum")},s={axis:e,exclusive:n,reverse:a};return ir.runKernel(Zt,r,s)}}),$u={kernelName:Zt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const e=yi([r],a.rank);let n=Zu(t,r,s,!o);return null!=e&&(n=sc(n,e)),n}}}},th={kernelName:ne,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;R(ho(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=e;return R(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),R(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),R(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),R(po(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),null!=o&&R(L(s),(()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,"."))),{x:()=>kc(c.shape,t,l,r,s,a,o),filter:()=>wc(c,t,l.shape,r,s,a,o)}}},eh={kernelName:oe,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[a,r]=e,s={x:a,filter:r,dy:t},o={x:a,filter:r,dy:t};return{x:()=>ir.runKernel(ie,s,n),filter:()=>ir.runKernel(ce,o,n)}}},nh={kernelName:he,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,a={dy:t,y:n};return{x:()=>ir.runKernel(de,a)}}},ah={kernelName:pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=ei($o(ki(vi(n))),2/Math.sqrt(Math.PI));return{x:()=>ei(t,a)}}},rh={kernelName:me,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,n)}}},sh={kernelName:ge,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>mo(t,n.shape)}}},oh={kernelName:ye,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,$o(n))}}},ih={kernelName:we,gradFunc:t=>({x:()=>rc(t)})},ch={kernelName:ke,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{const e=zo(t,os(a,"float32")),s=Wo(n.shape,r);return s.length>0?mo(ai(e,s),n.shape):e},b:()=>{let e=ei(t,os(n,"float32"));const s=Wo(a.shape,r);s.length>0&&(e=mo(ai(e,s),a.shape));const o=vi(a);return ki(zo(e,os(o,"float32")))}}}};const lh=yr({rsqrt_:function(t){const e={x:mr(t,"x","rsqrt")};return ir.runKernel(Rn,e)}}),uh={kernelName:Ie,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=e,c=null==i?Xs(1):i,l=Wo(s.shape,r.shape),u=[];if(1===s.rank){for(let t=0;t<r.shape.length-1;++t)u.push(r.shape[t]);u.push(1)}const h=ni(r,s),d=ei(t,c),p=lh(Js(o,Xs(a))),f=ei(ei(ei(p,p),p),Xs(-.5));return{x:()=>1===s.rank?mo(ei(ei(t,Ho(mo(p,[1,1,1,s.shape[0]]),u)),c),r.shape):mo(ei(ei(t,p),c),r.shape),mean:()=>{let t=ei(ei(p,Xs(-1)),d);return 1===s.rank&&(t=ai(t,l)),mo(t,s.shape)},variance:()=>{let t=ei(ei(f,h),d);return 1===s.rank&&(t=ai(t,l)),mo(t,s.shape)},scale:()=>{const e=ei(h,p);let n=ei(t,e);return 1===s.rank&&(n=ai(n,l)),mo(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=ai(e,l)),mo(e,s.shape)}}}};const hh=yr({unsortedSegmentSum_:function(t,e,n){const a=mr(t,"x","unsortedSegmentSum"),r=mr(e,"segmentIds","unsortedSegmentSum","int32");R(L(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},o={numSegments:n};return ir.runKernel(sa,s,o)}}),dh={kernelName:Ne,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[a,r]=e,{axis:s}=n,o=V(s,a.shape)[0];return{x:()=>{const e=a.shape,n=r.size,i=e.slice(0,o),c=i.length,l=e.slice(s,e.length).slice(1),u=l.length,h=ph(0,c),d=ph(c+1,c+1+u),p=fh([i,[n],l]),f=mo(t,p),m=mo(r,[n]),g=fh([[c],h,d]),y=sc(f,g);let b=hh(y,m,a.shape[o]);const x=bi(g);return b=sc(b,x),b},indices:()=>r}}};function ph(t,e){const n=[];for(let a=t;a<e;++a)n.push(a);return n}function fh(t){const e=[];for(let n=0;n<t.length;++n)for(let a=0;a<t[n].length;++a)e.push(t[n][a]);return e}const mh={kernelName:Ce,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>rc(n),b:()=>rc(a)}}},gh={kernelName:Ee,gradFunc:t=>({x:()=>os(t,"float32")})},yh={kernelName:Fe,gradFunc:t=>({x:()=>rc(t)})},bh={kernelName:De,gradFunc:t=>({x:()=>rc(t)})},xh={kernelName:_e,gradFunc:t=>({x:()=>rc(t)})},vh={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{alpha:r}=n,s=Yo(a,0);return{x:()=>ac(s,t,ei(t,r))}}},wh={kernelName:Be,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,Js(n,1))}}},kh={kernelName:Pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,os(n,"float32"))}}},Ih={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n;return{logits:()=>{const e=$o(a);return ni(t,ei(ai(t,r,!0),e))}}}};const Nh=yr({localResponseNormalizationBackprop_:function(t,e,n){const a={x:t,y:e,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return ir.runKernel(He,a,r)}}),Th={kernelName:Ge,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Nh(a,r,t,s,o,i,c)}}};function Sh(t,e,n,a){return e.rank<n.rank&&(e=mo(e,mi(e.shape,a))),t.rank<n.rank&&(t=mo(t,mi(t.shape,a))),{x:()=>ei(t,os(Uo(n,e),t.dtype))}}const Ch={kernelName:je,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{reductionIndices:r}=a,s=e[0],o=Sh(t,e[1],s,V(r,s.shape));return{x:()=>o.x()}}};const Eh=yr({less_:function(t,e){let n=mr(t,"a","less"),a=mr(e,"b","less");[n,a]=$a(n,a),Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Me,r)}}),Ah={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>ei(t,os(Qo(n,a),"float32")),b:()=>ei(t,os(Eh(n,a),"float32"))}}};const Rh=yr({maxPool3dGrad_:function(t,e,n,a,r,s,o){const i=mr(t,"dy","maxPool3dGrad"),c=mr(e,"input","maxPool3dGrad"),l=mr(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=mo(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=mo(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=mo(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),R(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),R(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),R(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),null!=o&&R(L(s),(()=>"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(o," but got pad ").concat(s,".")));const f={dy:u,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=ir.runKernel(Qe,f,m);return p?mo(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Fh={kernelName:Ye,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>Rh(t,a,r,s,o,i,c)}}};const Dh=yr({maxPoolGrad_:function(t,e,n,a,r,s,o){const i=mr(t,"dy","maxPoolGrad"),c=mr(e,"input","maxPoolGrad"),l=mr(n,"output","maxPoolGrad");R(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),R(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),R(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),null!=o&&R(L(s),(()=>"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(o," but got pad ").concat(s,".")));const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return ir.runKernel(Xe,u,h)}}),_h={kernelName:qe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a,r]=e,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Dh(t,a,r,s,o,i)}}},Oh={kernelName:Ze,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{axis:r}=n,s=V(r,a.shape),o=O(fi(a.shape,s)[1]);return{x:()=>{const e=a.shape.slice();s.forEach((t=>{e[t]=1}));const n=mo(t,e);return zo(ei(n,Si(a.shape,"float32")),o)}}}},Mh={kernelName:$e,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const a=n,{axis:r}=a,[s,o]=e,i=Sh(t,o,s,V(r,s.shape));return{x:()=>i.x()}}},Lh={kernelName:tn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e;return{a:()=>ei(t,os(Jc(n,a),"float32")),b:()=>ei(t,os(Yo(n,a),"float32"))}}},zh={kernelName:en,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>Wi(t,s,a.shape)}}},Ph={kernelName:nn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{const e=Wo(n.shape,r);return e.length>0?mo(ai(t,e),n.shape):t},b:()=>{const e=ei(t,ki(qo(zo(n,a)))),s=Wo(a.shape,r);return s.length>0?mo(ai(e,s),a.shape):e}}}},Bh={kernelName:rn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{const e=ei(t,os(a,"float32")),s=Wo(n.shape,r);return s.length>0?mo(ai(e,s),n.shape):e},b:()=>{const e=ei(t,os(n,"float32")),s=Wo(a.shape,r);return s.length>0?mo(ai(e,s),a.shape):e}}}},Wh={kernelName:sn,gradFunc:t=>({x:()=>ki(t)})},Vh={kernelName:dn,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Ti(n.shape,"float32")}}},Uh={kernelName:hn,gradFunc:t=>({x:()=>rc(t)})},Gh={kernelName:pn,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:a}=n;return ec(t,a).map((t=>()=>t))}},Hh={kernelName:fn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const a=e[0],{paddings:r}=n,s=r.map((t=>t[0]));return{x:()=>Wi(t,s,a.shape)}}},jh={kernelName:mn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,a,r]=e,s=n,o=a,i=Vo(s.shape,o.shape);return{a:()=>{const e=os(o,"float32");let n=ei(t,ei(e,tl(s,ni(e,Xs(1)))));const a=Wo(s.shape,i);return a.length>0&&(n=ai(n,a)),mo(n,s.shape)},b:()=>{const e=Yo(s,0),n=ac(e,Zo(s),rc(s));let a=ei(t,ei(r,n));const c=Wo(o.shape,i);return c.length>0&&(a=ai(a,c)),mo(a,o.shape)}}}},Kh={kernelName:gn,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,a]=e,r=Yo(n,0);return{x:()=>ac(r,t,ei(t,a)),alpha:()=>{let e=ac(r,rc(t),ei(t,n));const s=Wo(a.shape,t.shape);return s.length>0&&(e=ai(e,s)),mo(e,a.shape)}}}},qh={kernelName:le,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{const e=zo(t,os(a,"float32")),s=Wo(n.shape,r);return s.length>0?mo(ai(e,s),n.shape):e},b:()=>{let e=ei(t,os(n,"float32"));const s=Wo(a.shape,r);s.length>0&&(e=mo(ai(e,s),a.shape));const o=vi(a);return ki(zo(e,os(o,"float32")))}}}},Xh={kernelName:vn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,ki(vi(n)))}}},Yh={kernelName:Cn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,a=ei(Jc(n,6),mc(n));return{x:()=>ei(t,os(a,"float32"))}}},Qh={kernelName:wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,os(mc(n),"float32"))}}},Jh={kernelName:kn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>mo(t,n.shape)}}},Zh={kernelName:Tn,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>ir.runKernel(Sn,r,n)}}},$h={kernelName:In,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[a]=e,r={dy:t,images:a};return{images:()=>ir.runKernel(Nn,r,n)}}},td={kernelName:En,gradFunc:(t,e,n)=>{const{dims:a}=n,r=V(a,t.shape);return{x:()=>Li(t,r)}}},ed={kernelName:An,gradFunc:t=>({x:()=>rc(t)})},nd={kernelName:Rn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ki(zo(t,ei(tl(n,1.5),2)))}}};const ad=yr({logicalNot_:function(t){const e={x:mr(t,"x","logicalNot","bool")};return ir.runKernel(Ve,e)}}),rd={kernelName:Dn,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>os(rc(n),"float32"),t:()=>ei(t,os(n,t.dtype)),e:()=>ei(t,os(ad(n),t.dtype))}}},sd={kernelName:_n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Yo(n,Xs(0)),a=Xs(Pl),r=Xs(Bl),s=ei(t,r),o=ei(ei(t,a),$o(os(n,"float32")));return ac(e,s,o)}}}},od={kernelName:Pn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,ei(n,ni(Xs(1),n)))}}},id={kernelName:zn,gradFunc:t=>({x:()=>rc(t)})};const cd=yr({cos_:function(t){const e={x:mr(t,"x","cos")};return ir.runKernel(Qt,e)}}),ld={kernelName:Mn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(cd(os(n,"float32")),t)}}};const ud=yr({cosh_:function(t){const e={x:mr(t,"x","cosh")};return ir.runKernel(Jt,e)}}),hd={kernelName:Ln,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(ud(os(n,"float32")),t)}}},dd={kernelName:On,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{begin:r,size:s}=n,o=a.shape,[i,c]=Ms(a,r,s),l=[];for(let u=0;u<t.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>Ei(t,l)}}},pd={kernelName:Hn,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[a]=e,{dim:r}=n,s=ei(t,a);return{logits:()=>ni(s,ei(ai(s,[r],true),a))}}},fd={kernelName:Bn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,Bi(n))}}};const md=yr({batchToSpaceND_:function(t,e,n){const a=mr(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));R(a.rank>=1+e.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(e.length))),R(n.length===e.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length))),R(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(r)));const s={x:a},o={blockShape:e,crops:n};return ir.runKernel(Lt,s,o)}}),gd={kernelName:Un,gradFunc:(t,e,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>md(t,a,r)}}},yd={kernelName:Gn,gradFunc:(t,e,n)=>{const{axis:a}=n;return{x:()=>Io(t,a)}}},bd={kernelName:Wn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,ei(Xi(os(n,"float32")),2))}}},xd={kernelName:Xn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(t,ei(os(n,"float32"),2))}}},vd={kernelName:qn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Xs(2);return{a:()=>ei(t,ei(r,ni(n,a))),b:()=>ei(t,ei(r,ni(a,n)))}}},wd={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,a]=e,r=Vo(n.shape,a.shape);return{a:()=>{let e=t;const a=Wo(n.shape,r);return a.length>0&&(e=ai(e,a)),mo(e,n.shape)},b:()=>{let e=t;const n=Wo(a.shape,r);return n.length>0&&(e=ai(e,n)),mo(ki(e),a.shape)}}}},kd={kernelName:Vn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,r=a.shape.slice(),{axis:s}=n;V(s,a.shape).forEach((t=>{r[t]=1}));const o=mo(t,r),i=ei(o,Si(a.shape,"float32"));return{x:()=>i}}},Id={kernelName:Jn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>zo(t,vi(cd(n)))}}},Nd={kernelName:Zn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ei(ni(Xs(1),vi(n)),t)}}},Td={kernelName:$n,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[a]=e,{reps:r}=n;return{x:()=>{let e=rc(a);if(1===a.rank)for(let n=0;n<r[0];++n)e=Js(e,Wi(t,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)e=Js(e,Wi(t,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)e=Js(e,Wi(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)e=Js(e,Wi(t,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return e}}}},Sd={kernelName:sa,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=ci(e,rc(e)),a=Xo(t,n);let r=Qo(e,Xs(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=Go(r,i+1);r=si(r,Si(a.shape,"bool"));const o=rc(a);return ac(r,a,o)}(t,n)}}};const Cd=[xu,vu,wu,ku,Iu,Nu,Tu,Su,Cu,Eu,Au,Ru,Du,Ou,Mu,zu,Pu,Bu,Wu,Vu,Uu,Gu,ju,Hu,qu,Yu,Ju,$u,th,eh,qh,nh,ah,rh,sh,oh,ch,ih,uh,dh,mh,gh,yh,bh,xh,vh,wh,kh,Ih,Th,Ch,Ch,Ah,Fh,_h,Oh,Mh,Lh,zh,Ph,Bh,Wh,Vh,Uh,Gh,Hh,Hh,jh,Kh,Xh,Yh,Qh,Jh,Zh,$h,td,ed,nd,rd,sd,od,id,ld,hd,dd,pd,fd,gd,gd,yd,yd,bd,vd,xd,{kernelName:ia,gradFunc:t=>({x:()=>rc(t)})},wd,kd,Id,Nd,Td,{kernelName:na,gradFunc:(t,e,n)=>{const a=n,{perm:r}=a,s=bi(r);return{x:()=>sc(t,s)}}},{kernelName:ra,gradFunc:(t,e,n)=>{const a=n,{axis:r}=a;return{value:()=>Qi(t,r)}}},Sd,{kernelName:oa,gradFunc:t=>({x:()=>rc(t)})}];for(const n of Cd)xa(n);Ga().prototype.abs=function(){return this.throwIfDisposed(),Qs(this)};const Ed=yr({acos_:function(t){const e={x:mr(t,"x","acos")};return ir.runKernel(bt,e)}});Ga().prototype.acos=function(){return this.throwIfDisposed(),Ed(this)};const Ad=yr({acosh_:function(t){const e={x:mr(t,"x","acosh")};return ir.runKernel(xt,e)}});Ga().prototype.acosh=function(){return this.throwIfDisposed(),Ad(this)},Ga().prototype.add=function(t){return this.throwIfDisposed(),Js(this,t)},Ga().prototype.all=function(t,e){return this.throwIfDisposed(),Zs(this,t,e)},Ga().prototype.any=function(t,e){return this.throwIfDisposed(),$s(this,t,e)},Ga().prototype.argMax=function(t){return this.throwIfDisposed(),to(this,t)};const Rd=yr({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:mr(t,"x","argMin")},a={axis:e};return ir.runKernel(Tt,n,a)}});Ga().prototype.argMin=function(t){return this.throwIfDisposed(),Rd(this,t)},Ga().prototype.asScalar=function(){return this.throwIfDisposed(),R(1===this.size,(()=>"The array must have only 1 element.")),mo(this,[])},Ga().prototype.asType=function(t){return this.throwIfDisposed(),os(this,t)},Ga().prototype.as1D=function(){return this.throwIfDisposed(),mo(this,[this.size])},Ga().prototype.as2D=function(t,e){return this.throwIfDisposed(),mo(this,[t,e])},Ga().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),mo(this,[t,e,n])},Ga().prototype.as4D=function(t,e,n,a){return this.throwIfDisposed(),mo(this,[t,e,n,a])},Ga().prototype.as5D=function(t,e,n,a,r){return this.throwIfDisposed(),mo(this,[t,e,n,a,r])};const Fd=yr({asin_:function(t){const e={x:mr(t,"x","asin")};return ir.runKernel(St,e)}});Ga().prototype.asin=function(){return this.throwIfDisposed(),Fd(this)};const Dd=yr({asinh_:function(t){const e={x:mr(t,"x","asinh")};return ir.runKernel(Ct,e)}});Ga().prototype.asinh=function(){return this.throwIfDisposed(),Dd(this)};const _d=yr({atan_:function(t){const e={x:mr(t,"x","atan")};return ir.runKernel(Et,e)}});Ga().prototype.atan=function(){return this.throwIfDisposed(),_d(this)};const Od=yr({atan2_:function(t,e){let n=mr(t,"a","atan2"),a=mr(e,"b","atan2");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(Rt,r)}});Ga().prototype.atan2=function(t){return this.throwIfDisposed(),Od(this,t)};const Md=yr({atanh_:function(t){const e={x:mr(t,"x","atanh")};return ir.runKernel(At,e)}});Ga().prototype.atanh=function(){return this.throwIfDisposed(),Md(this)},Ga().prototype.avgPool=function(t,e,n,a){return this.throwIfDisposed(),go(this,t,e,n,a)},Ga().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),md(this,t,e)},Ga().prototype.batchNorm=function(t,e,n,a,r){return this.throwIfDisposed(),bo(this,t,e,n,a,r)},Ga().prototype.broadcastTo=function(t){return this.throwIfDisposed(),nc(this,t)},Ga().prototype.cast=function(t){return this.throwIfDisposed(),os(this,t)};const Ld=yr({ceil_:function(t){const e={x:mr(t,"x","ceil")};return ir.runKernel(Bt,e)}});Ga().prototype.ceil=function(){return this.throwIfDisposed(),Ld(this)},Ga().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ko(this,t,e)},Ga().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Ua&&(t=[t]),Io([this,...t],e)},Ga().prototype.conv1d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Ao(this,t,e,n,a,r,s)},Ga().prototype.conv2dTranspose=function(t,e,n,a,r){return this.throwIfDisposed(),Fo(this,t,e,n,a,r)},Ga().prototype.conv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Eo(this,t,e,n,a,r,s)},Ga().prototype.cos=function(){return this.throwIfDisposed(),cd(this)},Ga().prototype.cosh=function(){return this.throwIfDisposed(),ud(this)},Ga().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Zu(this,t,e,n)};const zd=yr({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=mr(t,"x","depthToSpace"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],o="NHWC"===n?a.shape[3]:a.shape[1];R(r*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(a.shape))),R(s*e>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(s," and ").concat(e," for depthToSpace with input shape\n        ").concat(a.shape))),R(o%(e*e)===0,(()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(o," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:e,dataFormat:n};return ir.runKernel(ee,i,c)}});Ga().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),zd(this,t,e)},Ga().prototype.depthwiseConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Mo(this,t,e,n,a,r,s)};const Pd=yr({dilation2d_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const o=mr(t,"x","dilation2d"),i=mr(e,"filter","dilation2d");R(3===o.rank||4===o.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(o.rank,"."))),R(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),R("NHWC"===s,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(s)));let c=o,l=!1;3===o.rank&&(c=mo(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=ir.runKernel(oe,u,h);return l?mo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Ga().prototype.dilation2d=function(t,e,n,a,r){return this.throwIfDisposed(),Pd(this,t,e,n,a,r)};const Bd=yr({divNoNan_:function(t,e){let n=mr(t,"a","div"),a=mr(e,"b","div");[n,a]=$a(n,a);const r=zo(n,a),s=rc(r),o=Uo(a,s);return ac(o,s,r)}});Ga().prototype.divNoNan=function(t){return this.throwIfDisposed(),Bd(this,t)},Ga().prototype.div=function(t){return this.throwIfDisposed(),zo(this,t)};const Wd=yr({dot_:function(t,e){const n=mr(t,"t1","dot"),a=mr(e,"t2","dot");R((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(R(r===s,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(s,"."))),1===n.rank&&1===a.rank){const t=mo(n,[1,-1]),e=mo(a,[-1,1]),r=Nc(t,e);return mo(r,[])}if(1===n.rank&&2===a.rank){const t=mo(n,[1,-1]),e=mo(a,[a.shape[0],a.shape[1]]),r=Nc(t,e);return mo(r,[r.size])}if(2===n.rank&&1===a.rank){const t=mo(a,[-1,1]),e=Nc(n,t);return mo(e,[e.size])}{const t=mo(a,[a.shape[0],a.shape[1]]);return Nc(n,t)}}});Ga().prototype.dot=function(t){return this.throwIfDisposed(),Wd(this,t)},Ga().prototype.elu=function(){return this.throwIfDisposed(),Po(this)},Ga().prototype.equal=function(t){return this.throwIfDisposed(),Uo(this,t)};const Vd=yr({erf_:function(t){let e=mr(t,"x","erf");R("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=os(e,"float32"));const n={x:e};return ir.runKernel(pe,n)}});Ga().prototype.erf=function(){return this.throwIfDisposed(),Vd(this)},Ga().prototype.exp=function(){return this.throwIfDisposed(),$o(this)},Ga().prototype.expandDims=function(t){return this.throwIfDisposed(),Go(this,t)};const Ud=yr({expm1_:function(t){const e={x:mr(t,"x","expm1")};return ir.runKernel(ye,e)}});Ga().prototype.expm1=function(){return this.throwIfDisposed(),Ud(this)},Ga().prototype.fft=function(){return this.throwIfDisposed(),lc(this)},Ga().prototype.flatten=function(){return this.throwIfDisposed(),mo(this,[this.size])},Ga().prototype.floor=function(){return this.throwIfDisposed(),qo(this)},Ga().prototype.floorDiv=function(t){return this.throwIfDisposed(),Lo(this,t)},Ga().prototype.gather=function(t,e){return this.throwIfDisposed(),Xo(this,t,e)},Ga().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Qo(this,t)},Ga().prototype.greater=function(t){return this.throwIfDisposed(),Yo(this,t)},Ga().prototype.ifft=function(){return this.throwIfDisposed(),hc(this)},Ga().prototype.irfft=function(){return this.throwIfDisposed(),dc(this)};const Gd=yr({isFinite_:function(t){const e={x:mr(t,"x","isFinite")};return ir.runKernel(Fe,e)}});Ga().prototype.isFinite=function(){return this.throwIfDisposed(),Gd(this)};const Hd=yr({isInf_:function(t){const e={x:mr(t,"x","isInf")};return ir.runKernel(De,e)}});Ga().prototype.isInf=function(){return this.throwIfDisposed(),Hd(this)};const jd=yr({isNaN_:function(t){const e={x:mr(t,"x","isNaN")};return ir.runKernel(_e,e)}});Ga().prototype.isNaN=function(){return this.throwIfDisposed(),jd(this)},Ga().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Jo(this,t)},Ga().prototype.lessEqual=function(t){return this.throwIfDisposed(),Jc(this,t)},Ga().prototype.less=function(t){return this.throwIfDisposed(),Eh(this,t)};const Kd=yr({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const s=mr(t,"x","localResponseNormalization");R(4===s.rank||3===s.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(s.rank,"."))),R(L(e),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,".")));let o=s,i=!1;3===s.rank&&(i=!0,o=mo(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const c={x:o},l={depthRadius:e,bias:n,alpha:a,beta:r},u=ir.runKernel(Ge,c,l);return i?mo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});Ga().prototype.localResponseNormalization=function(t,e,n,a){return this.throwIfDisposed(),Kd(this,t,e,n,a)};const qd=yr({logSigmoid_:function(t){const e=mr(t,"x","logSigmoid"),n=qs((t=>({value:ki(Ki(ki(t))),gradFunc:e=>ei(e,Bi(ki(t)))})));return n(e)}});Ga().prototype.logSigmoid=function(){return this.throwIfDisposed(),qd(this)},Ga().prototype.logSoftmax=function(t){return this.throwIfDisposed(),ri(this,t)},Ga().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),ul(this,t,e)},Ga().prototype.log=function(){return this.throwIfDisposed(),Zo(this)},Ga().prototype.log1p=function(){return this.throwIfDisposed(),ll(this)},Ga().prototype.logicalAnd=function(t){return this.throwIfDisposed(),si(this,t)},Ga().prototype.logicalNot=function(){return this.throwIfDisposed(),ad(this)};const Xd=yr({logicalOr_:function(t,e){const n=mr(t,"a","logicalOr","bool"),a=mr(e,"b","logicalOr","bool");Vo(n.shape,a.shape);const r={a:n,b:a};return ir.runKernel(Ue,r)}});Ga().prototype.logicalOr=function(t){return this.throwIfDisposed(),Xd(this,t)};const Yd=yr({logicalXor_:function(t,e){const n=mr(t,"a","logicalXor","bool"),a=mr(e,"b","logicalXor","bool");return Vo(n.shape,a.shape),si(Xd(t,e),ad(si(t,e)))}});Ga().prototype.logicalXor=function(t){return this.throwIfDisposed(),Yd(this,t)},Ga().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Nc(this,t,e,n)},Ga().prototype.maxPool=function(t,e,n,a){return this.throwIfDisposed(),oi(this,t,e,n,a)},Ga().prototype.max=function(t,e){return this.throwIfDisposed(),ti(this,t,e)},Ga().prototype.maximum=function(t){return this.throwIfDisposed(),ci(this,t)},Ga().prototype.mean=function(t,e){return this.throwIfDisposed(),li(this,t,e)},Ga().prototype.min=function(t,e){return this.throwIfDisposed(),ui(this,t,e)},Ga().prototype.minimum=function(t){return this.throwIfDisposed(),hi(this,t)};const Qd=yr({mirrorPad_:function(t,e,n){R("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=mr(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");R(e.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(e.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)R(2===e[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),R(e[i][0]>=0&&e[i][0]<=a.shape[i]-r&&e[i][1]>=0&&e[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const s={paddings:e,mode:n},o={x:a};return ir.runKernel(en,o,s)}});Ga().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Qd(this,t,e)};const Jd=yr({mod_:function(t,e){let n=mr(t,"a","mod"),a=mr(e,"b","mod");[n,a]=$a(n,a);const r={a:n,b:a};return ir.runKernel(nn,r)}});Ga().prototype.mod=function(t){return this.throwIfDisposed(),Jd(this,t)},Ga().prototype.mul=function(t){return this.throwIfDisposed(),ei(this,t)},Ga().prototype.neg=function(){return this.throwIfDisposed(),ki(this)},Ga().prototype.norm=function(t,e,n){return this.throwIfDisposed(),nl(this,t,e,n)},Ga().prototype.notEqual=function(t){return this.throwIfDisposed(),Ii(this,t)},Ga().prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Ni(this,t,e,n)},Ga().prototype.onesLike=function(){return this.throwIfDisposed(),Ci(this)},Ga().prototype.pad=function(t,e){return this.throwIfDisposed(),Ei(this,t,e)};const Zd=yr({pool_:function(t,e,n,a,r,s){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const o=mr(t,"x","maxPool");let i=o,c=!1;3===o.rank&&(c=!0,i=mo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),R(po(s,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(r,"'")));const l=no(i.shape,e,s,r,a),u=[l.dilationHeight,l.dilationWidth];let h;h="same"===a?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))),a=n.map((t=>t-1)),r=a.map((t=>Math.floor(t/2))),s=a.map(((t,e)=>t-r[e]));return a.map(((t,e)=>[r[e],s[e]]))}([l.filterHeight,l.filterWidth],u):[[0,0],[0,0]];const d=1===u[0]&&1===u[1],[p,f]=function(t,e,n){const a=n.map((t=>t[0])),r=n.map((t=>t[1])),s=t.concat(a,r),o=e.map(((t,e)=>(t-s[e]%t)%t)),i=r.map(((t,e)=>t+o[e])),c=e.map(((t,e)=>[a[e],i[e]])),l=e.map(((t,e)=>[0,o[e]]));return[c,l]}([l.inHeight,l.inWidth],u,h),m=d?a:"valid",g=d?i:Lu(i,u,p),y=("avg"===n?()=>go(g,e,s,m):()=>oi(g,e,s,m))(),b=d?y:md(y,u,f);return c?mo(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Ga().prototype.pool=function(t,e,n,a,r){return this.throwIfDisposed(),Zd(this,t,e,n,a,r)},Ga().prototype.pow=function(t){return this.throwIfDisposed(),tl(this,t)},Ga().prototype.prelu=function(t){return this.throwIfDisposed(),Ai(this,t)};const $d=yr({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=mr(t,"x","prod");"bool"===a.dtype&&(a=os(a,"int32"));const r={x:a},s={axis:e,keepDims:n};return ir.runKernel(yn,r,s)}});Ga().prototype.prod=function(t,e){return this.throwIfDisposed(),$d(this,t,e)};const tp=yr({reciprocal_:function(t){const e={x:mr(t,"x","reciprocal")};return ir.runKernel(vn,e)}});Ga().prototype.reciprocal=function(){return this.throwIfDisposed(),tp(this)},Ga().prototype.relu=function(){return this.throwIfDisposed(),Mi(this)},Ga().prototype.relu6=function(){return this.throwIfDisposed(),fc(this)},Ga().prototype.reshapeAs=function(t){return this.throwIfDisposed(),mo(this,t.shape)},Ga().prototype.reshape=function(t){return this.throwIfDisposed(),mo(this,t)},Ga().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Xc(this,t,e,n)},Ga().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Yc(this,t,e,n)},Ga().prototype.reverse=function(t){return this.throwIfDisposed(),Li(this,t)},Ga().prototype.rfft=function(){return this.throwIfDisposed(),uc(this)};const ep=yr({round_:function(t){const e={x:mr(t,"x","round")};return ir.runKernel(An,e)}});Ga().prototype.round=function(){return this.throwIfDisposed(),ep(this)},Ga().prototype.rsqrt=function(){return this.throwIfDisposed(),lh(this)},Ga().prototype.selu=function(){return this.throwIfDisposed(),zi(this)},Ga().prototype.separableConv2d=function(t,e,n,a,r,s){return this.throwIfDisposed(),Pi(this,t,e,n,a,r,s)},Ga().prototype.sigmoid=function(){return this.throwIfDisposed(),Bi(this)};const np=yr({sign_:function(t){const e={x:mr(t,"x","sign")};return ir.runKernel(zn,e)}});Ga().prototype.sign=function(){return this.throwIfDisposed(),np(this)},Ga().prototype.sin=function(){return this.throwIfDisposed(),Xu(this)},Ga().prototype.sinh=function(){return this.throwIfDisposed(),Qu(this)},Ga().prototype.slice=function(t,e){return this.throwIfDisposed(),Wi(this,t,e)},Ga().prototype.softmax=function(t){return this.throwIfDisposed(),ji(this,t)},Ga().prototype.softplus=function(){return this.throwIfDisposed(),Ki(this)},Ga().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Lu(this,t,e)},Ga().prototype.split=function(t,e){return this.throwIfDisposed(),qi(this,t,e)},Ga().prototype.sqrt=function(){return this.throwIfDisposed(),Xi(this)},Ga().prototype.square=function(){return this.throwIfDisposed(),vi(this)},Ga().prototype.squaredDifference=function(t){return this.throwIfDisposed(),cl(this,t)},Ga().prototype.squeeze=function(t){return this.throwIfDisposed(),Yi(this,t)},Ga().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Ua?[this,t]:[this,...t];return Qi(n,e)},Ga().prototype.step=function(t){return this.throwIfDisposed(),mc(this,t)};const ap=yr({stridedSlice_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:mr(t,"x","stridedSlice")},u={begin:e,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};return ir.runKernel(Yn,l,u)}});Ga().prototype.stridedSlice=function(t,e,n,a,r,s,o,i){return this.throwIfDisposed(),ap(this,t,e,n,a,r,s,o,i)},Ga().prototype.sub=function(t){return this.throwIfDisposed(),ni(this,t)},Ga().prototype.sum=function(t,e){return this.throwIfDisposed(),ai(this,t,e)};const rp=yr({tan_:function(t){const e={x:mr(t,"x","tan")};return ir.runKernel(Jn,e)}});Ga().prototype.tan=function(){return this.throwIfDisposed(),rp(this)},Ga().prototype.tanh=function(){return this.throwIfDisposed(),Ji(this)},Ga().prototype.tile=function(t){return this.throwIfDisposed(),Ho(this,t)},Ga().prototype.toBool=function(){return this.throwIfDisposed(),os(this,"bool")},Ga().prototype.toFloat=function(){return this.throwIfDisposed(),os(this,"float32")},Ga().prototype.toInt=function(){return this.throwIfDisposed(),os(this,"int32")};const sp=yr({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=mr(t,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(e>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(e));const s={x:a},o={k:e,sorted:n},[i,c]=ir.runKernel(ta,s,o);return{values:i,indices:c}}});Ga().prototype.topk=function(t,e){return this.throwIfDisposed(),sp(this,t,e)},Ga().prototype.transpose=function(t){return this.throwIfDisposed(),sc(this,t)};const op=yr({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=mr(t,"x","unique","string_or_numeric");R(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:e},[s,o]=ir.runKernel(aa,a,r);return{values:s,indices:o}}});let ip;function cp(){return null==ip&&(ip=ir.backend.epsilon()),ip}Ga().prototype.unique=function(t){return this.throwIfDisposed(),op(this,t)},Ga().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),hh(this,t,e)},Ga().prototype.unstack=function(t){return this.throwIfDisposed(),ec(this,t)},Ga().prototype.where=function(t,e){return this.throwIfDisposed(),ac(t,this,e)},Ga().prototype.zerosLike=function(){return this.throwIfDisposed(),rc(this)};class lp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,lp.prototype)}}class up extends Error{constructor(t){super(t),Object.setPrototypeOf(this,up.prototype)}}class hp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,hp.prototype)}}class dp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dp.prototype)}}class pp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,pp.prototype)}}Error;function fp(t,e){if(Array.isArray(t)){let n=[];for(let a=0;a<e;a++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function mp(t,e){if(!t)throw new pp(e)}function gp(t,e){let n=0;for(const a of t)a===e&&n++;return n}function yp(t){return 1===t.length?t[0]:t}function bp(t){return Array.isArray(t)?t:[t]}function xp(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function vp(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let wp={};function kp(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Ip(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach((t=>Ip(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?Ip(e):t[n]=e.value)}}}function Np(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const r=t;let s;if(r in n)s=n[r];else if(r in wp)s=wp[r];else if(s=e[r],null==s)throw new hp("Unknown ".concat(a,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=t;if(null==s.className||null==s.config)throw new hp("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in wp?[i,c]=wp.className:o in e&&([i,c]=e[o]),null==i)throw new hp("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(wp))t[n]=wp[n];for(const r of Object.keys(n))t[r]=n[r];s.config.customObjects=t;const e=Object.assign({},wp);for(const r of Object.keys(n))wp[r]=n[r];Ip(s.config);const a=c(i,s.config,n,r);return wp=Object.assign({},e),a}{const t=Object.assign({},wp);for(const a of Object.keys(n))wp[a]=n[a];const e=new i(s.config);return wp=Object.assign({},t),e}}}function Tp(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function Sp(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Cp(t){if(null==t)throw new hp("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Ep(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new hp("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function Ap(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return mp(n>=0),mp(a>=n),Array.isArray(t)&&t.length>=n&&t.length<=a&&t.every((t=>typeof t===e))}function Rp(t,e){Array.isArray(t)?(R(t.length>0,(()=>"".concat(e," is unexpectedly an empty array."))),t.forEach(((t,n)=>Rp(t,"element ".concat(n+1," of ").concat(e))))):R(Number.isInteger(t)&&t>0,(()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(Fp(t),".")))}function Fp(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Fp(t))).join(",")+"]":"string"===typeof t?'"'.concat(t,'"'):"".concat(t)}function Dp(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function _p(t,e){return Us((()=>Xi(ai(ei(t,t),e,!0))))}class Op extends zs{getConfig(){return{}}}class Mp extends Op{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Us((()=>{const e=_p(t,this.axis),n=ko(e,0,this.maxValue);return ei(t,zo(n,Js(cp(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Mp.className="MaxNorm",Bs(Mp);class Lp extends Op{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Us((()=>zo(t,Js(cp(),_p(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Lp.className="UnitNorm",Bs(Lp);class zp extends Op{apply(t){return Mi(t)}}zp.className="NonNeg",Bs(zp);class Pp extends Op{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Us((()=>{const e=_p(t,this.axis),n=Js(ei(this.rate,ko(e,this.minValue,this.maxValue)),ei(1-this.rate,e));return ei(t,zo(n,Js(cp(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Pp.className="MinMaxNorm",Bs(Pp);const Bp={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Wp(t){return kp(t)}function Vp(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Np(t,Ps.getMap().classNameMap,e,"constraint")}function Up(t){if(null==t)return null;if("string"===typeof t){return Vp({className:t in Bp?Bp[t]:t,config:{}})}return t instanceof Op?t:Vp(t)}const Gp=["channelsFirst","channelsLast"],Hp=["nearest","bilinear"],jp=["valid","same","causal"],Kp=["max","avg"],qp=["sum","mul","concat","ave"],Xp=new Map;function Yp(t){Ep(Gp,"DataFormat",t)}function Qp(t){Ep(jp,"PaddingMode",t)}function Jp(t){Ep(Kp,"PoolMode",t)}const Zp=[],$p="/";function tf(t,e){Zp.push(t);try{const t=e();return Zp.pop(),t}catch(n){throw Zp.pop(),n}}function ef(t){if(!rf(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Zp.length?"":Zp.join($p)+$p)+t}function nf(t){if(!rf(t))throw new Error("Not a valid tensor name: '"+t+"'");Xp.has(t)||Xp.set(t,0);const e=Xp.get(t);if(Xp.set(t,Xp.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return Xp.set(n,1),n}return t}const af=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function rf(t){return!!t.match(af)}function sf(t){return t===parseInt(t.toString(),10)}function of(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let a=1;for(let r=e;r<n;++r)a*=t[r];return a}function cf(t){return Zi(t=Array.isArray(t)?new Float32Array(t):t)}function lf(t){return ui(cf(t)).dataSync()[0]}function uf(t){return ti(cf(t)).dataSync()[0]}function hf(t,e){if(e<t)throw new hp("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let a=t;a<e;++a)n.push(a);return n}function df(t,e){return t.asType(e)}function pf(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function ff(t,e,n){return Us((()=>{switch(t.rank){case 1:return Vi(t,e,n);case 2:return Ui(t,[e,0],[n,t.shape[1]]);case 3:return Gi(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return Hi(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return Wi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return Wi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new hp("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function mf(t,e,n){return Us((()=>{switch(t.rank){case 1:return Vi(t,e,n);case 2:return Ui(t,[0,e],[t.shape[0],n]);case 3:return Gi(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return Hi(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new hp("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function gf(t,e,n,a){return Us((()=>{switch(t.rank){case 1:return Vi(t,e,n);case 2:switch(a){case 1:return ff(t,e,n);case 2:return mf(t,e,n);default:throw new hp("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return ff(t,e,n);case 2:return Gi(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return mf(t,e,n);default:throw new hp("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return ff(t,e,n);case 2:return Hi(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return Hi(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return mf(t,e,n);default:throw new hp("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new hp("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}}))}function yf(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),Io(t,n)}function bf(t,e){switch(t.rank){case 1:return No([t,e]);case 2:return To([t,e],0);case 3:return So([t,e],0);case 4:return Co([t,e],0);default:throw new hp("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function xf(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new hp("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return Ho(t,e)}function vf(t){return _i(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function wf(t,e,n,a){if(t.rank<2||e.rank<2)throw new dp("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new dp("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){return Tc({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?Nf(t.rank,a,"channelsLast"):null,activation:n})}{const r=t.shape.slice(),s=r.pop();t=t.reshape([-1,s]);const o=e.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(u).reshape([c,-1]);const h=[...r,...l];return Tc({a:t,b:e,transposeA:!1,transposeB:!1,bias:a?Nf(t.rank,a,"channelsLast"):null,activation:n}).reshape(h)}}function kf(t,e,n){return Us((()=>(e=Array.isArray(e)?Zi(e,"int32"):e.toInt(),Xo(t,e,n))))}function If(t){return ei(t,t)}function Nf(t,e,n){const a=e.shape;if(1!==e.rank&&e.rank!==t)throw new hp("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1,1,1]):e.reshape([1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,1,1,a[0]]):e.reshape([1].concat(a))}else if(4===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1,1]):e.reshape([1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,1,a[0]]):e.reshape([1].concat(a))}else if(3===t){if("channelsFirst"===n)return 1===a.length?e.reshape([1,a[0],1]):e.reshape([1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?e.reshape([1,1,a[0]]):e.reshape([1].concat(a))}else if(t<3)return e;throw new hp("Unsupported input rank by biasAdd: ".concat(e.rank))}function Tf(t,e,n){return Us((()=>(null==n&&(n="channelsLast"),Yp(n),t.add(Nf(t.rank,e,n)))))}function Sf(t,e,n,a){return Us((()=>oc(t,e,n,a)))}function Cf(t,e){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?t():e()}const Ef=["fanIn","fanOut","fanAvg"],Af=["normal","uniform","truncatedNormal"];class Rf extends zs{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ff extends Rf{apply(t,e){return Ti(t,e)}}Ff.className="Zeros",Bs(Ff);class Df extends Rf{apply(t,e){return Si(t,e)}}Df.className="Ones",Bs(Df);class _f extends Rf{constructor(t){if(super(),"object"!==typeof t)throw new hp("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new hp("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return Us((()=>ei(Xs(this.value),Si(t,e))))}getConfig(){return{value:this.value}}}_f.className="Constant",Bs(_f);class Of extends Rf{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Oi(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Of.className="RandomUniform",Bs(Of);class Mf extends Rf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new dp("randomNormal does not support dType ".concat(e,"."));return vf(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mf.className="RandomNormal",Bs(Mf);class Lf extends Rf{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new dp("truncatedNormal does not support dType ".concat(e,"."));return tc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lf.className="TruncatedNormal",Bs(Lf);class zf extends Rf{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Us((()=>{if(2!==t.length||t[0]!==t[1])throw new hp("Identity matrix initializer can only be used for 2D square matrices.");return ei(this.gain,jo(t[0]))}))}getConfig(){return{gain:this.gain}}}zf.className="Identity",Bs(zf);class Pf extends Rf{constructor(t){if(super(),t.scale<0)throw new hp("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Ep(Ef,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Ep(Af,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Yp(a),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===a){const a=of(t,2);e=t[1]*a,n=t[0]*a}else if("channelsLast"===a){const a=of(t,0,t.length-2);e=t[t.length-2]*a,n=t[t.length-1]*a}}else{const a=of(t);e=Math.sqrt(a),n=Math.sqrt(a)}return[e,n]}(t),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new dp("".concat(this.getClassName()," does not support dType ").concat(e,"."));return tc(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Oi(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Pf.className="VarianceScaling",Bs(Pf);class Bf extends Pf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Bf.className="GlorotUniform",Bs(Bf);class Wf extends Pf{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Wf.className="GlorotNormal",Bs(Wf);class Vf extends Pf{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Vf.className="HeNormal",Bs(Vf);class Uf extends Pf{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Uf.className="HeUniform",Bs(Uf);class Gf extends Pf{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Gf.className="LeCunNormal",Bs(Gf);class Hf extends Pf{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Pf.className}}Hf.className="LeCunNormal",Bs(Hf);class jf extends Rf{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new dp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Us((()=>{if(t.length<2)throw new dp("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than 2000 (".concat(t[0]*t[1],") elements: ")+"Slowness may result.");const e=vf(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=dl.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),ei(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}jf.className="Orthogonal",Bs(jf);const Kf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function qf(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Np(t,Ps.getMap().classNameMap,e,"initializer")}function Xf(t){return kp(t)}function Yf(t){if("string"===typeof t){const e=t in Kf?Kf[t]:t;if("GlorotNormal"===e)return new Wf;if("GlorotUniform"===e)return new Bf;if("HeNormal"===e)return new Vf;if("HeUniform"===e)return new Uf;if("LeCunNormal"===e)return new Gf;if("LeCunUniform"===e)return new Hf;{const t={};return t.className=e,t.config={},qf(t)}}return t instanceof Rf?t:qf(t)}let Qf=0;function Jf(){return Qf++}const Zf={};function $f(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in Zf||(Zf[t]=0),Zf[t]+=1,t+Zf[t].toString()}function tm(t){return Array.isArray(t)&&Array.isArray(t[0])}function em(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function nm(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new hp("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function am(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new hp("Expected exactly 1 Shape; got ".concat(t.length))}return t}function rm(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const sm="Variable";class om{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:sm,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Jf(),n=null==n?sm:n,this.originalName=ef(n),this.name=nf(this.originalName),this.trainable_=a,this.constraint=r,this.val=function(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return ir.makeVariable(t,e,n,a)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function im(t){return t.map((t=>t.read()))}function cm(t){t.forEach((t=>{t[0].write(t[1])}))}class lm{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class um{constructor(t,e,n,a,r,s,o){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=Jf(),null!=s&&(this.originalName=ef(s),this.name=nf(this.originalName)),this.rank=e.length}}let hm=0;class dm{constructor(t,e){this.callArgs=e,this.id=hm++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let pm=0;class fm extends zs{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pm++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=xp(t)+"_"+$f(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new up("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new hp("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return yp(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return yp(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new lp("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new lp("Layer ".concat(this.name)+" is not connected, no input to return.");return yp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new lp("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new lp("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return yp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=bp(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=bp(this.inputSpec);if(t.length!==e.length)throw new hp("Layer ".concat(this.name," expects ").concat(e.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(t));for(let n=0;n<t.length;n++){const a=t[n],r=e[n];if(null==r)continue;const s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new hp("Input ".concat(n," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new hp("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new hp("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&a.dtype!==r.dtype)throw new hp("Input ".concat(n," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(a.dtype,"."));if(r.axes){const t=a.shape;for(const e in r.axes){const a=Number(e),s=r.axes[e],o=a>=0?t[a]:t[t.length+a];if(null!=s&&-1===[s,null].indexOf(o))throw new hp("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(a," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],s=a.shape[t];if(null!=e&&null!=s&&e!==s)throw new hp("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(a.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=bp(t);let a=!0;for(const s of n)if(!(s instanceof um)){a=!1;break}let r=!0;for(const s of n)if(s instanceof um){r=!1;break}if(a===r)throw new hp("Arguments to apply() must be all SymbolicTensors or all Tensors");return tf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of bp(t))e.push(n.shape);this.build(yp(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let a=this.call(t,e);const r=bp(a),s=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(a=yp(s),null!=this.activityRegularizer)throw new dp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(t){t=bp(t);const e=[];for(const n of t)e.push(n.shape);return yp(e)}(t),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new um(s,n,this,bp(t),e,this.name,a))):new um(s,a,this,bp(t),e,this.name),this.addInboundNode(t,r,null,null,n,a,e),this._refCount++,null!=this.activityRegularizer)throw new dp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=t[a]&&t[a]!==n&&(e=!0)})),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new lp("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new lp("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new up("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return rm(this.weights)}build(t){this.built=!0}getWeights(){return im(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){Us((()=>{const e=this.weights;if(e.length!==t.length)throw new hp('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],a=im(e);for(let r=0;r<a.length;++r){const s=a[r],o=e[r],i=t[r];if(!M(s.shape,i.shape))throw new hp("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}cm(n)}))}addWeight(t,e,n,a,r,s,o){if(-1!==this._addedWeightNames.indexOf(t))throw new hp("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=Yf("zeros"));const i=a.apply(e,n),c=new om(i,n,t,s,o);return i.dispose(),null!=r&&this.addLoss((()=>r.apply(c.read()))),null==s&&(s=!0),s?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=bp(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach((t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return e}addInboundNode(t,e,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=bp(t);e=bp(e),n=bp(n),a=bp(a),r=em(r),s=em(s);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new dm({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function mm(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const a=mm(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of a)-1===e.indexOf(t)&&e.push(t)}return e}}}class gm extends fm{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:$f("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new hp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new hp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new hp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const a=new um(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new hp("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function ym(t){if(null==t)return;const e=[],n=[],a=[];for(const r in t){const s=t[r];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(r),a.push(t)}}if(e.length>0){const r=await Promise.all(e);for(let e=0;e<r.length;++e)t[n[e]]=r[e][0];Gs(a)}}function bm(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var xm;gm.className="InputLayer",Bs(gm),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(xm||(xm={}));class vm{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class wm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class km extends vm{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const a in e){const t=e[a];if("number"===typeof t)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+t*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;const r=Us((()=>Js(this.totals[a],ei(t,n))));this.totals[a]=r,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Us((()=>{const t=ei(zo(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Hs(e[n])})))}}class Im extends vm{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];t.push(o.data()),e.push(r),n.push(s)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r){this.history[e[r]][n[r]].dispose(),this.history[e[r]][n[r]]=a[r][0]}}}class Nm extends vm{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Y(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,a=Ia();return function(){const r=Ia();return r-a<e||(a=r,n=t(...arguments)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const a=[];null!=this.yield&&(await ym(n),a.push(this.yield(t,e,n))),a.push(Il()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ym(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ym(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Il()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ym(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ym(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Il()):Y(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ym(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ym(t),await this.trainEnd(t))}}function Tm(t,e){if(null==t&&(t={}),t instanceof vm)return[t];if(Array.isArray(t)&&t[0]instanceof vm)return t;return bp(t).map((t=>new Nm(t,e)))}class Sm{constructor(){}static registerCallbackConstructor(t,e){R(t>=0&&Number.isInteger(t),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t))),Sm.checkForDuplicate(e),null==Sm.constructors[t]&&(Sm.constructors[t]=[]),Sm.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Sm.constructors){Sm.constructors[+e].forEach((e=>{if(e===t)throw new hp("Duplicate callback constructor.")}))}}static clear(){Sm.constructors={}}static createCallbacks(t){const e=[];for(const n in Sm.constructors){const a=+n;t>=a&&e.push(...Sm.constructors[a])}return e.map((t=>new t))}}function Cm(t,e,n,a,r,s,o,i,c){const l=new Im,u=[new km,...Sm.createCallbacks(e)];null!=t&&u.push(...t),u.push(l);const h=new wm(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:e,doValidation:i,metrics:c}),{callbackList:h,history:l}}function Em(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Np(t,Ps.getMap().classNameMap,e,"layer",n)}function Am(t,e){return Us((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=ai(If(t),e,!0),a=Ko(n.shape,cp()),r=Xi(ci(n,a));return zo(t,r)}))}function Rm(t,e){return Us((()=>li(If(ni(e,t)),-1)))}function Fm(t,e){return Us((()=>li(Qs(ni(e,t)),-1)))}function Dm(t,e){return Us((()=>{const n=ni(t,e),a=ko(Qs(t),cp(),Number.MAX_VALUE),r=Qs(zo(n,a));return ei(100,li(r,-1))}))}function _m(t,e){return Us((()=>{const n=ko(e,cp(),Number.MAX_VALUE),a=Zo(Js(1,n)),r=ko(t,cp(),Number.MAX_VALUE),s=Zo(Js(1,r));return li(If(ni(a,s)),-1)}))}function Om(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Us((()=>{if(n)e=ji(e);else{const t=ai(e,e.shape.length-1,!0);e=zo(e,t)}return e=ko(e,cp(),1-cp()),ki(ai(ei(t.toFloat(),Zo(e)),e.shape.length-1))}))}function Mm(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Us((()=>{const a=qo(function(t){const e=[of(t.shape)];return t.reshape(e)}(t)).toInt(),r=(e=ko(e,cp(),1-cp())).shape;return Om(Ni(a,r[r.length-1]).reshape(r),e,n)}))}function Lm(t,e){return Us((()=>{let n;return n=ko(e,cp(),1-cp()),n=Zo(zo(n,ni(1,n))),li(function(t,e){if(!M(t.shape,e.shape))throw new hp("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return Us((()=>{const n=e.relu(),a=e.abs().neg();return n.sub(e.mul(t)).add(a.exp().log1p())}))}(t,n),-1)}))}function zm(t,e){return Us((()=>{const n=ko(t,cp(),1),a=ko(e,cp(),1);return ai(ei(t,Zo(zo(n,a))),-1)}))}function Pm(t,e){return Us((()=>{const n=Am(t,-1),a=Am(e,-1),r=ei(n,a);return ki(ai(r,-1))}))}Sm.constructors={};const Bm={meanSquaredError:Rm,meanAbsoluteError:Fm,meanAbsolutePercentageError:Dm,meanSquaredLogarithmicError:_m,squaredHinge:function(t,e){return Us((()=>{const n=ci(0,ni(1,ei(t,e)));return li(If(n),-1)}))},hinge:function(t,e){return Us((()=>{const n=ci(0,ni(1,ei(t,e)));return li(n,-1)}))},categoricalHinge:function(t,e){return Us((()=>{const n=ai(ei(t,e),-1),a=ti(ei(ni(1,t),e),-1);return ci(0,Js(1,ni(a,n)))}))},logcosh:function(t,e){return Us((()=>{const n=Math.log(2),a=ni(e,t),r=ni(Js(a,Ki(ei(-2,a))),n);return li(r,-1)}))},categoricalCrossentropy:Om,sparseCategoricalCrossentropy:Mm,binaryCrossentropy:Lm,kullbackLeiblerDivergence:zm,poisson:function(t,e){return Us((()=>{const n=Zo(Js(cp(),e));return li(ni(e,ei(t,n)),-1)}))},cosineProximity:Pm};function Wm(t){if("string"===typeof t){if(t in Bm)return Bm[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new hp(e)}return t}function Vm(t,e){return Us((()=>{const n=ei(.5,Ci(e)),a=df(Yo(e,n),t.dtype);return li(Uo(t,a),-1)}))}function Um(t,e){return Us((()=>df(Uo(to(t,-1),to(e,-1)),"float32")))}function Gm(t,e){return Us((()=>si(t.equal(1),e.equal(1)).sum().cast("float32")))}function Hm(t,e){return Lm(t,e)}function jm(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),Uo(t,e).asType("float32")}const Km=Om,qm=Mm,Xm={binaryAccuracy:Vm,categoricalAccuracy:Um,precision:function(t,e){return Us((()=>{const n=Gm(t,e),a=function(t,e){return Us((()=>si(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),r=n.add(a);return ac(Yo(r,0),n.div(r),0).cast("float32")}))},categoricalCrossentropy:Km,sparseCategoricalCrossentropy:qm,mse:Rm,MSE:Rm,mae:Fm,MAE:Fm,mape:Dm,MAPE:Dm,cosine:Pm};function Ym(t){if("string"===typeof t&&t in Xm)return Xm[t];if("string"!==typeof t&&null!=t)return t;throw new hp("Unknown metric ".concat(t))}function Qm(t){if(mp(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Bm))if(Bm[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Xm))if(Xm[n]===t){e=n;break}return void 0!==e?e:t.name}}const Jm=1048576;function Zm(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!$m(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Jm&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Jm,"."))}}function $m(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!$m(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!$m(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function tg(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(t){let e=!0;const n=[],a=[];for(const r in t.nodesByDepth)n.push(t.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){e=!1;break}a.push(...r)}if(e)for(const r of t.layers){let t=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let o;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){s.push("Receives inputs"),o=[];for(const e in t.nodesByDepth)o.push(...t.nodesByDepth[e])}a("_".repeat(e)),eg(s,n,a),a("=".repeat(e));const i=t.layers;for(let u=0;u<i.length;++u)r?ng(i[u],n,a):ag(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=function(t){let e;e=null!=t.collectedTrainableWeights?rm(t.collectedTrainableWeights):rm(t.trainableWeights);return e}(t),l=rm(t.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(e))}function eg(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<t.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=t[r],a=a.slice(0,e[r]),a+=" ".repeat(e[r]-a.length);n(a)}function ng(t,e,n){let a;try{a=JSON.stringify(t.outputShape)}catch(ZM){a="multiple"}const r=t.name,s=t.getClassName();eg(["".concat(r," (").concat(s,")"),a,t.countParams().toString()],e,n)}function ag(t,e,n,a){let r;try{r=JSON.stringify(t.outputShape)}catch(ZM){r="multiple"}const s=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],a=l.tensorIndices[t];s.push("".concat(e,"[").concat(n,"][").concat(a,"]"))}const o=t.name,i=t.getClassName(),c=0===s.length?"":s[0];eg(["".concat(o," (").concat(i,")"),r,t.countParams().toString(),c],e,a);for(let l=1;l<s.length;++l)eg(["","","",s[l]],e,a)}function rg(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function sg(t,e){if(null===t)return null;if("string"===typeof t)return vp(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let r=0;r<a;++r){const a=t[r];rg(e,r,a)?n.push(a):n.push(sg(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n];if("name"===n&&"string"===typeof a)e[n]=a;else{const t=vp(n);e[t]=sg(a,t)}}return e}}function og(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return xp(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],a=t.length;for(let r=0;r<a;++r){const a=t[r];rg(e,r,a)?n.push(a):n.push(og(a,e))}return n}{const e={};for(const n of Object.keys(t)){const a=t[n],r=xp(n);e[r]="name"!==n&&"className"!==n||"string"!==typeof a?og(a,n):a}return e}}const ig="3.5.0";class cg{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof cg)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new hp("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return os(e,t.dtype)}catch(ZM){throw new hp("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof um){if(null==this.id2Value[t.id])throw new hp("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new hp("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof um){if(null==this.id2Value[t.id])throw new hp("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new hp("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Gs(this.id2Mask)}}const lg={},ug={};function hg(t,e,n,a){const r=null!=n&&n.training,s=Array.isArray(t),o=s?t:[t],i=o.map((t=>t.name)),c=[],l=e.names();for(const f of i)-1!==l.indexOf(f)?c.push(e.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+e.names().join(",");let h,d;if(null==lg[u]){const t=function(t,e){R(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===t.length){const r=pg(t[0],e);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of t){const{sorted:t,recipientMap:o}=pg(s,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const e in o)null==a[e]&&(a[e]=new Set),o[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:dg(a)}}(o,e);h=t.sorted,d=t.recipientCounts,lg[u]=h,ug[u]=d}h=lg[u],d={},r||Object.assign(d,ug[u]);const p=new cg(e);for(let f=0;f<h.length;++f){if(null!=a){const t=Vs().numTensors;t>a.maxNumTensors&&(a.maxNumTensors=t),t<a.minNumTensors&&(a.minNumTensors=t)}const t=h[f],s=t.sourceLayer;if(s instanceof gm)continue;const o=[],l=[],u=[];let m=!1;for(const n of t.inputs){const t=p.getValue(n),a=p.getMask(n);o.push(t),l.push(a),null!=a&&(m=!0),r||(d[n.name]--,0!==d[n.name]||e.hasKey(n)||-1!==i.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||u.push(t))}m&&((n=n||{}).mask=l[0]);const g=bp(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=fg(t),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=i.indexOf(x[e].name);-1!==t&&(c[t]=g[e])}r||Gs(u)}return p.disposeMasks(),s?c:c[0]}function dg(t){const e={};for(const n in t)e[n]=t[n].size;return e}function pg(t,e){const n=new Set,a=[],r={};for(const i of e.names())n.add(i);const s=[],o=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=o[o.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),a.push(t),n.add(t.name),e&&o.pop();else{o.push(s.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:a,recipientMap:r}}function fg(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const a of t.sourceLayer.inboundNodes[e].outputTensors)if(a.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class mg extends fm{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=$f(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Sp(this.inputs).length!==this.inputs.length)throw new hp("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((t=>t.name))));Sp(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((t=>t.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const t=y.sourceLayer,e=y.nodeIndex,n=y.tensorIndex;mp(0===e,"input layer has >1 nodes"),mp(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const e=this.inputLayers[y];if(!(e instanceof gm))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},a={},r={},s={},o=[],i=(t,e,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=t.sourceLayer,r=t.nodeIndex,c=t.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new up("The tensor ".concat(t.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(mg.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const t=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(t,e,n,a,r,o)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in e||(e[y.id]=0);let t=e[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];t=Math.max(t,s),a[y.outboundLayer.id]=t,r[y.outboundLayer.id]=y.outboundLayer,e[y.id]=t;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(t+1,i),n[o.id]=o}}const h={};for(const y in e){const t=e[y];t in h||(h[t]=[]),h[t].push(n[y])}const d={};for(const y in a){const t=a[y];t in d||(d[t]=[]),d[t].push(r[y])}let p=Object.keys(d).map((t=>parseInt(t,10))).sort(Tp);this.layers=[];for(const y of p){const t=d[y];t.sort(((t,e)=>{const n=s[t.id],a=s[e.id];return n<a?-1:n>a?1:0}));for(const e of t)e instanceof mg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((t=>parseInt(t,10))).sort(Tp);const f=this.inputs.slice(),m=[];for(const y of p)for(const t of h[y]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new up("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((t=>t.name));for(const y of g){const t=g.filter((t=>t===y)).length;if(1!==t)throw new up('The name "'.concat(y,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new hp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new hp("Duplicate weight name: ".concat(t.originalName));n[t.originalName]=t,a++}const r=[];for(const s in t){let a=s;if(null==n[s]){const t=s.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[s]]);else if(e)throw new hp("Provided weight data has no target variable: ".concat(s));delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new hp("".concat(t.length," of ").concat(a," weights are not set: ")+"".concat(t))}cm(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat(ig),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=og(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Us((()=>{t=bp(t);const n=new cg;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return hg(this.outputs,n,e)}))}computeMask(t,e){return Us((()=>{let n;return t=bp(t),n=null==e?fp(null,t.length):bp(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=em(t);if(e.length!==this.inputLayers.length)throw new hp("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<e.length;o++){const t=this.inputLayers[o],a=e[o];n[t.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Tp);if(a.length>1)for(const o of a){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const a=[];for(let o=0;o<e.inboundLayers.length;o++){const t=e.inboundLayers[o],r=e.nodeIndices[o],s=e.tensorIndices[o],i=n["".concat(t.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=em(t.computeOutputShape(yp(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++){n["".concat(t.name,"_").concat(s,"_").concat(e)]=r[e]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const t=this.outputLayers[o],e=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(t.name,"_").concat(e,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const t=s[o];mp(t in n),r.push(n[t])}return yp(r)}runInternalGraph(t,e){null==e&&(e=fp(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=t[i],s=e[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(Tp);for(const i of a){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(const e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),i=bp(t.call(e,l)),c=bp(t.computeMask(e,n)),a=[e],o=[n]}else a=s.map((t=>t[0])),o=s.map((t=>t[1])),null==l.mask&&(l.mask=o),i=bp(t.call(a,l)),c=bp(t.computeMask(a,o));if(t.activityRegularizer)throw new dp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],a=i[t],s=c[t];n[e.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){mp(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];o.push(t.shape),r.push(t),s.push(e)}return[r,s,o]}buildNodeConversionMap(t){const e={};let n;for(const a of this.layers){n=a instanceof mg?1:0;for(let t=0;t<a.inboundNodes.length;t++){const r=mg.nodeKey(a,t);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new hp("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}if(null==t)throw new hp("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new hp("No such layer: ".concat(t))}calculateLosses(){return Us((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const a=mg.nodeKey(e,n);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const t=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const t=s.inboundNodes[n],a=mg.nodeKey(s,n);let o={};if(this.containerNodes.has(a)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(ZM){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),o={}}if(t.inboundLayers.length>0){const n=[];for(let a=0;a<t.inboundLayers.length;a++){const r=t.inboundLayers[a],s=t.nodeIndices[a],i=t.tensorIndices[a];let c=e[mg.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,i,o])}r.push(n)}}}const o={};o.name=s.name,o.className=t,o.config=a,o.inboundNodes=r,n.push(o)}t.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const t=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=mg.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];a.push([t.name,o,i])}t.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=mg.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let o=e[a];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];r.push([t.name,o,i])}return t.outputLayers=r,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(t,e){t.name in r?r[t.name].push(e):r[t.name]=[e]}function o(t,e){const n=[];let r;for(const o of e){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(t,e);const u=a[i];if(u.inboundNodes.length<=c)return void s(t,e);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&t.apply(yp(n),r)}function i(t){const r=t.name,o=Em(t,null!=e.customObjects?e.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new hp("Corrupted configuration, expected array for nodeData: ".concat(t));s(o,t)}))}const c=e.name,l=e.layers;for(const f of l)i(f);for(;!Cp(r);)for(const t of l){const e=a[t.name];if(e.name in r){const t=r[e.name];delete r[e.name];for(const n of t)o(e,n)}}const u=[],h=[],d=e.inputLayers;for(const f of d){const t=f[0],e=f[1],n=f[2];mp(t in a);const r=a[t].inboundNodes[e].outputTensors;u.push(r[n])}const p=e.outputLayers;for(const f of p){const t=f[0],e=f[1],n=f[2];mp(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}return new t({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new hp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Us((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function gg(t,e,n){const a=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===a)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function yg(t,e){return gg(t,e,"classWeight")}async function bg(t,e,n,a){if(null!=e||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Us((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await e.data());Gs(e);const r=[];return a.forEach((t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");r.push(n[t])})),Zi(r,"float32")}return null}function xg(t,e){return ei(t,e)}function vg(t,e){let n,a;const r=e;n=r.xs,a=r.ys,R(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e)));const s=wg("input",t.inputNames,n),o=wg("output",t.outputNames,a),i=s[0].shape[0];R(s.length===t.inputs.length,(()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")"))),R(o.length===t.outputs.length,(()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")")));for(let c=0;c<s.length;c++)R(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(t.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));for(let c=0;c<o.length;c++)R(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(t.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(t.inputNames[0],".")));return{xs:s,ys:o}}function wg(t,e,n){if(n instanceof Ua)return[n];if(Array.isArray(n))return R(n.length===e.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,"."))),n;{const a=[];for(const r of e){if(null==n[r])throw new hp("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(r,"'."));a.push(n[r])}return a}}async function kg(t,e,n){const a=null!=n.batchesPerEpoch;if(R(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),R(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),R(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),R(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),R(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Ig(n.validationData))R(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const t=function(t){if(3===t.length)throw new dp("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,o=t.ys}const i=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((t=>"val_"+t))):c.slice();const u=Tm(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Cm(u,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,r,l);d.setModel(t),t.history=p,await d.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await e.iterator());!a||u<n.batchesPerEpoch;){const e=await m.next();if(a&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:a,ys:r}=vg(t,e.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);const o=[];if(null!=n.classWeight){const e=yg(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await bg(r[t],null,e[t]))}const l=a.concat(r).concat(o),p=i(l);Gs(l);for(let t=0;t<c.length;++t){const e=c[t],n=p[t];s[e]=n,Hs(n)}await d.onBatchEnd(h,s),bm(s),h++,u++}if(a?u>=n.batchesPerEpoch:e.done){if(r){let e;e=Ig(n.validationData)?bp(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):bp(t.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,t.stopTraining_)break}return await d.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Ig(t){return"function"===typeof t.iterator}function Ng(t){R(t>0&&Number.isInteger(t),(()=>"batchSize is required to be a positive integer, but got ".concat(t)))}function Tg(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>ff(t,e,n-e))):ff(t,e,n-e)}function Sg(t,e){return Us((()=>null==t?null:Array.isArray(t)?t.map((t=>Sg(t,e))):kf(t,"int32"===e.dtype?e:e.toInt())))}function Cg(t,e){const n=[];let a=0,r=null;for(;a<t;)r=a+e,r>=t&&(r=t),n.push([a,r]),a=r;return n}async function Eg(t,e,n){let a,r,s,o,i,c,l,u=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const h=null==u.batchSize?32:u.batchSize;Ng(h);const d=!1,p=await t.standardizeUserData(e,n,u.sampleWeight,u.classWeight,d,h);a=p[0],r=p[1],l=p[2];let f,m=!1;if(null!=u.validationData&&u.validationData.length>0){if(m=!0,2!==u.validationData.length)throw 3===u.validationData.length?new dp("validationData including sample weights is not supported yet."):new hp("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(u.validationData," is invalid."));s=u.validationData[0],o=u.validationData[1];const e=!0,n=await t.standardizeUserData(s,o,null,null,e,h);i=n[0],c=n[1],f=i.concat(c)}else if(null!=u.validationSplit&&u.validationSplit>0&&u.validationSplit<1){m=!0;const t=Math.floor(a[0].shape[0]*(1-u.validationSplit)),e=a[0].shape[0];i=Tg(a,t,e),a=Tg(a,0,t),c=Tg(r,t,e),r=Tg(r,0,t),f=i.concat(c)}else null!=u.validationSteps&&(m=!0);const g=a.concat(r).concat(l);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let x,v;m?(t.makeTestFunction(),x=t.testFunction,v=b.slice().concat(b.map((t=>"val_"+t)))):(x=null,f=[],v=b.slice());const w=Tm(u.callbacks,u.yieldEvery),k=await async function(t,e,n,a,r,s,o,i,c,l,u,h,d,p,f){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==d&&(d=0);let m=!1;if(null!=c&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new hp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,r,p,"steps_per_epoch");let y;null!=g&&(y=hf(0,g)),null==o&&(o=1);const{callbackList:b,history:x}=Cm(i,o,s,d,g,p,r,m,h);b.setModel(t),t.history=x,await b.onTrainBegin(),t.stopTraining_=!1;for(let v=d;v<s;++v){await b.onEpochBegin(v);const s={};if(null!=p)throw new dp("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new dp("batch shuffling is not implemneted yet");u&&C(y);const o=Zi(y),i=Cg(g,r);for(let u=0;u<i.length;++u){const h={};if(await b.onBatchBegin(u,h),Us((()=>{const d=i[u][0],p=i[u][1],f=ff(o,d,p-d);h.batch=u,h.size=p-d;const g=Sg(n,f),y=e(g);for(let t=0;t<a.length;++t){const e=a[t],n=y[t];h[e]=n,Hs(n)}if(u===i.length-1&&m){const e=t.testLoop(c,l,r);for(let t=0;t<a.length;++t){const n=a[t],r=e[t];Hs(r),s["val_"+n]=r}}})),await b.onBatchEnd(u,h),bm(h),t.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(v,s),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,h,u.epochs,u.verbose,w,x,f,u.shuffle,v,u.initialEpoch,null,null);return k}finally{t.isTraining=!1,Rg(a,e),Rg(r,n),Rg(i,s),Rg(c,o),null!=l&&Gs(l)}}function Ag(t){const e=[];t instanceof Ua&&(t=[t]);for(let n=0;n<t.length;++n){const a=t[n];if(1===a.rank)e.push(pf(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(a)}}return e}function Rg(t,e){if(null==t)return;const n=[];if(e instanceof Ua)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const r in e){const t=e[r];n.push(t.id)}const a=[];if(t instanceof Ua)-1===n.indexOf(t.id)&&a.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&a.push(t)}));else if(null!=t)for(const r in t){const e=t[r];-1===n.indexOf(e.id)&&a.push(e)}a.forEach((t=>{t.isDisposed||t.dispose()}))}function Fg(t){return Array.isArray(t)}function Dg(t){return!function(t){return t instanceof Ua}(t)&&!Fg(t)}function _g(t,e,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(Fg(t)&&t.length>0)e=!0;else if(Dg(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new hp("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map((t=>null));if(Dg(t)){a=[];for(const n of e){if(null==t[n])throw new hp('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));a.push(t[n])}}else if(Fg(t)){if(t.length!==e.length)throw new hp("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));a=t}else{if(e.length>1)throw new hp("The model ".concat(s," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));a=[t]}if(a=Ag(a),null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new hp("Error when checking ".concat(s,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=t.shape[a],c=n[o][a];if(null!=c&&c>=0&&i!==c)throw new hp("Error when checking ".concat(s,": expected ").concat(e[o]," ")+"to have shape [".concat(n[o],"], but got array with shape ")+"[".concat(t.shape,"]."))}}return a}function Og(t,e,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new hp("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));a=t}else{if(e.length>1)throw new hp("The model expects ".concat(e.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));a=[t]}if(null!=n)for(let o=0;o<e.length;++o){if(null==n[o])continue;const t=a[o];if(t.shape.length!==n[o].length)throw new hp("Error when checking ".concat(s,": expected ").concat(e[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=t.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new hp("Error when checking ".concat(s,": expected ")+"".concat(e[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class Mg extends mg{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new hp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");tg(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>wl.adagrad(.01),Adadelta:()=>wl.adadelta(1,.95,cp()),Adam:()=>wl.adam(.001,.9,.999,cp()),Adamax:()=>wl.adamax(.002,.9,.999,cp(),0),RMSProp:()=>wl.rmsprop(.001,.9,0,cp()),SGD:()=>wl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new hp("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ys))throw new hp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new hp("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map((t=>Wm(t)))}else{const n=Wm(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new hp('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(Wm(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tf("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const a=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const a of e){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),r=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};tf("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,a,s;for(const o of e){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const e=this.internalOutputShapes[t];let r;1===e[e.length-1]||this.lossFunctions[t]===Lm?-1!==["accuracy","acc"].indexOf(o)?a=Vm:-1!==["crossentropy","ce"].indexOf(o)&&(a=Hm):this.lossFunctions[t]===Mm?-1!==["accuracy","acc"].indexOf(o)?a=jm:-1!==["crossentropy","ce"].indexOf(o)&&(a=qm):-1!==["accuracy","acc"].indexOf(o)?a=Um:-1!==["crossentropy","ce"].indexOf(o)&&(a=Km),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const t=Ym(o);s=t,n=""+Qm(o)}let e;tf(n,(()=>{e=s})),r(t,n,e)}})(a[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Ng(a);const r=this.standardizeUserDataXY(t,e,!0,a);try{const t=r[0].concat(r[1]);this.makeTestFunction();const e=this.testFunction;return yp(this.testLoop(e,t,a,n.verbose,n.steps))}finally{Rg(r[0],t),Rg(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const a=null!=(n=n||{}).batches,r=t.testFunction;let s=[];if(n.verbose>0)throw new dp("Verbose mode is not implemented yet.");R(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof e.next?e:await e.iterator();let i=0,c=0;for(;!a||c<n.batches;){const e=await o.next();if(s=Us((()=>{if(e.value){const{xs:n,ys:a}=vg(t,e.value),o=n.concat(a),l=Us((()=>r(o)));if(Gs(o),0===c)for(let t=0;t<l.length;++t)s.push(Xs(0));const u=o[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=s[t];s[t]=Us((()=>Js(s[t],ei(u,e)))),c>0&&Gs(n)}Gs(l),i+=u,++c}return s})),e.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const t=s[l];s[l]=zo(s[l],i),Gs(t)}return yp(s)}(this,t,e)}checkNumSamples(t,e,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=e)throw new hp("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new hp("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new hp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),a=n?e:[e],r=this.retrieveSymbolicTensors(a),s=new cg;if(t instanceof Ua&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new hp("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const i of this.inputs){const e=t[i.name];if(null==e)throw new hp("No value is provided for the model's input ".concat(i.name));s.add(i,e)}const o=hg(r,s);return n?o:o[0]}retrieveSymbolicTensors(t){const e=fp(null,t.length);let n=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((t=>t.name));for(let a=0;a<t.length;++a){const o=s.indexOf(t[a]);if(-1!==o&&(e[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,a)=>{null==e&&n.push(t[a])})),new hp("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Us((()=>{const a=this.checkNumSamples(t);if(n)throw new dp("Verbose predictLoop() is not implemented yet.");const r=Cg(a,e),s=this.outputs.map((t=>[]));for(let e=0;e<r.length;++e){Us((()=>{const n=r[e][0],a=r[e][1],s=Tg(t,n,a),o=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)o.push({key:this.inputs[t],value:s[t]});else o.push({key:this.inputs[0],value:s});const i=new cg(o);return hg(this.outputs,i)})).forEach(((t,e)=>s[e].push(t)))}return yp(s.map((t=>Io(t,0))))}))}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Ag(t);Og(n,this.inputNames,this.feedInputShapes,!1);try{const t=null==e.batchSize?32:e.batchSize;return Ng(t),this.predictLoop(n,t)}finally{Rg(n,t)}}predictOnBatch(t){Og(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new up("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const t=this.feedOutputShapes[r];this.feedLossFns[r]===Mm?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const a=Sp(t.map((t=>t.shape[0])));a.sort();const r=Sp(e.map((t=>t.shape[0])));if(r.sort(),a.length>1)throw new hp("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((t=>t.shape)))));if(r.length>1)throw new hp("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((t=>t.shape)))));if(a.length>0&&r.length>0&&!M(a,r))throw new hp("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(t=_g(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=_g(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const a=[Rm,Lm,Om];for(let r=0;r<t.length;++r){const s=t[r],o=e[r],i=n[r];if(null!=o){if(o===Om&&1===s.shape[s.shape.length-1])throw new hp("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const t=s.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const a=t[n],r=e[n];if(null!=r&&a!==r)throw new hp("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new hp("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(t,e,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const t=yg(a,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await bg(i[e],null,t[e]))}return[o,i,c]}testLoop(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return Us((()=>{const s=this.checkNumSamples(e,n,r,"steps"),o=[];if(a>0)throw new dp("Verbose mode is not implemented yet.");if(null!=r)throw new dp("steps mode in testLoop() is not implemented yet");{const a=Cg(s,n),r=Zi(hf(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=ff(r,s,i-s),l=Sg(e,c),u=t(l);if(0===n)for(let t=0;t<u.length;++t)o.push(Xs(0));for(let t=0;t<u.length;++t){const e=u[t];o[t]=Js(o[t],ei(i-s,e))}}for(let t=0;t<o.length;++t)o[t]=zo(o[t],s)}return o}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const a=t[n];let r=a;if(gp(t,a)>1){const e=gp(t.slice(0,n),a);r+="_".concat(e)}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new cg(t),i=hg(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(t=xg(t,r[n]));const s=li(t);e.push(s),c=0===n?t:Js(c,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],r=this.metricsTensors[n][1];t=li(e(a[r],i[r]))}Hs(t),s.push(t)}return c=li(c),this.calculateLosses().forEach((t=>{c=Js(c,t)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=t=>Us((()=>{const e=[];let n;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:a[t]});const o=new cg(s),i=hg(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const a=this.lossFunctions[t],s=li(a(r[t],i[t]));n=0===t?s:Js(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],a=this.metricsTensors[t][1],s=li(n(r[a],i[a]));e.push(s)}return e}))}async fit(t,e){return Eg(this,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(t,e){return kg(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const t=await i.data();o.push(t[0])}return Gs(s),yp(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||e.push({name:a[s].originalName,tensor:r[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Vs().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Vs().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=xp(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>xp(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const a of e){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");t[a]=xp(n[a])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[xp(Qm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>xp(Qm(t))));{const t={};for(const e in this.metrics)t[e]=xp(Qm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Em(sg(t.optimizer_config));let n,a;if("string"===typeof t.loss)n=vp(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>vp(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=vp(t.loss[e])}if(Array.isArray(t.metrics))a=t.metrics.map((t=>vp(t)));else if(null!=t.metrics){a={};for(const e in t.metrics)a[e]=vp(t.metrics[e])}this.compile({loss:n,metrics:a,optimizer:e})}async save(t,e){if("string"===typeof t){const e=Dr(t);if(0===e.length)throw new hp("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new hp("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new hp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ir(this.getNamedWeights(e)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(ig),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:r}=await Ir(await this.optimizer.getWeights(),t);n.specs.push(...r),n.data=Er([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Zm(this.userDefinedMetadata,this.name,t),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){Zm(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Mg.className="Model",Bs(Mg);class Lg extends Mg{}Lg.className="Functional",Bs(Lg);class zg extends Mg{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:$f("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new hp("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof zg||t instanceof Mg;let n;if(e){if(n=t,1!==n.outputs.length)throw new hp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new hp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new hp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new hp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new gm({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new hp("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new hp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=mm(this.outputs[0])}this.inboundNodes=[],new dm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:fp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(am(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Mg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new up("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new up("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new up("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new up("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new hp("Legacy serialization format not supported yet.");n=e}else R(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=e.layers,delete e.layers,r=e;const s=new t(r);if(!(s instanceof zg))throw new dp("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const t=Em(o,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(t){if(null==this.model)throw new hp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new hp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}zg.className="Sequential",Bs(zg);class Pg extends zs{getConfig(){return{}}}class Bg extends Pg{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new dp("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return Po(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Bg.className="elu",Bs(Bg);class Wg extends Pg{apply(t){return zi(t)}}Wg.className="selu",Bs(Wg);class Vg extends Pg{apply(t){return Mi(t)}}Vg.className="relu",Bs(Vg);class Ug extends Pg{apply(t){return Us((()=>hi(6,Mi(t))))}}Ug.className="relu6",Bs(Ug);class Gg extends Pg{apply(t){return t}}Gg.className="linear",Bs(Gg);class Hg extends Pg{apply(t){return Bi(t)}}Hg.className="sigmoid",Bs(Hg);class jg extends Pg{apply(t){return function(t){return Us((()=>{const e=Js(.5,ei(.2,t));return ko(e,0,1)}))}(t)}}jg.className="hardSigmoid",Bs(jg);class Kg extends Pg{apply(t){return Ki(t)}}Kg.className="softplus",Bs(Kg);class qg extends Pg{apply(t){return function(t){return Us((()=>zo(t,Qs(t).add(1))))}(t)}}qg.className="softsign",Bs(qg);class Xg extends Pg{apply(t){return Ji(t)}}Xg.className="tanh",Bs(Xg);class Yg extends Pg{apply(t){return ji(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Yg.className="softmax",Bs(Yg);class Qg extends Pg{apply(t){return ri(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Qg.className="logSoftmax",Bs(Qg);class Jg extends Pg{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Us((()=>Bi(t.mul(e)).mul(t)))}}Jg.className="swish",Bs(Jg);class Zg extends Pg{apply(t){return Us((()=>ei(t,Ji(Ki(t)))))}}function $g(t){return t.getClassName()}function ty(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Np(t,Ps.getMap().classNameMap,e,"activation")}function ey(t){if(null==t){const t={className:"linear",config:{}};return ty(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},ty(e)}return t instanceof Pg?t:ty(t)}function ny(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Zg.className="mish",Bs(Zg);class ay extends zs{}class ry extends ay{constructor(t){super(),ny(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Us((()=>{let e=Ti([1]);return this.hasL1&&(e=Js(e,ai(ei(this.l1,Qs(t))))),this.hasL2&&(e=Js(e,ai(ei(this.l2,If(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}ry.className="L1L2",Bs(ry);const sy={l1l2:"L1L2"};function oy(t){return kp(t)}function iy(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Np(t,Ps.getMap().classNameMap,e,"regularizer")}function cy(t){if(null==t)return null;if("string"===typeof t){return iy({className:t in sy?sy[t]:t,config:{}})}return t instanceof ay?t:iy(t)}class ly extends fm{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=nm(t);let n=Mi(t);return null!=this.maxValue&&(n=ko(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}ly.className="ReLU",Bs(ly);class uy extends fm{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=nm(t);return Jo(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}uy.className="LeakyReLU",Bs(uy);class hy extends fm{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Yf(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cy(t.alphaRegularizer),this.alphaConstraint=Up(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new hp("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=am(t)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<t.length;++a)n[a]=t[a];this.inputSpec=[new lm({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=nm(t),Ai(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Xf(this.alphaInitializer),alphaRegularizer:oy(this.alphaRegularizer),alphaConstraint:Wp(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}hy.className="PReLU",Bs(hy);class dy extends fm{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new dp("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=nm(t);return Po(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}dy.className="ELU",Bs(dy);class py extends fm{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=nm(t);return n.mul(df(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}py.className="ThresholdedReLU",Bs(py);class fy extends fm{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Yg).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=nm(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function my(t,e,n){if("number"===typeof t)return fp(t,e);if(t.length!==e)throw new hp("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let a=0;a<e;++a){const r=t[a];if(!sf(r))throw new hp("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(r))}return t}function gy(t,e,n,a){if(null==t)return t;let r;return r="same"===n?t:t-(e+(e-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function yy(t,e,n,a){if(null==t)return null;if("valid"===a)t=t*e+uf([n-e,0]);else{if("same"!==a)throw new hp("Unsupport padding mode: ".concat(a,"."));t*=e}return t}function by(t,e){return Us((()=>(Yp(e),"channelsFirst"===e?sc(t,[0,2,3,1]):t)))}function xy(t,e){return Us((()=>(Yp(e),"channelsFirst"===e?sc(t,[0,2,3,4,1]):t)))}function vy(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Us((()=>{if(null==s&&(s="channelsLast"),Yp(s),3!==t.shape.length)throw new hp("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new hp("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new hp("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===s&&(t=sc(t,[0,2,1])),"causal"===r)throw new dp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ao(t,e,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=Tf(i,n)),i}))}function wy(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Us((()=>{if(null==s&&(s="channelsLast"),Yp(s),3!==t.rank&&4!==t.rank)throw new hp("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new hp("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let c=by(t,s);if("causal"===r)throw new dp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=vc({x:c,filter:e,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=sc(c,[0,3,1,2])),c}))}function ky(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return Us((()=>{if(null==s&&(s="channelsLast"),Yp(s),4!==t.rank&&5!==t.rank)throw new hp("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new hp("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let i=xy(t,s);if("causal"===r)throw new dp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Do(i,e,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=Tf(i,n)),"channelsFirst"===s&&(i=sc(i,[0,4,1,2,3])),i}))}fy.className="Softmax",Bs(fy);class Iy extends fm{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Iy.verifyArgs(e),this.rank=t,Rp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new dp("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=my(e.kernelSize,t,"kernelSize"),this.strides=my(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Qp(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Yp(this.dataFormat),this.activation=ey(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Yf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Up(e.biasConstraint),this.biasRegularizer=cy(e.biasRegularizer),this.activityRegularizer=cy(e.activityRegularizer),this.dilationRate=my(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new hp("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new hp("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new hp("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(mp("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!Ap(t.kernelSize,"number",1,3))throw new hp("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$g(this.activation),useBias:this.useBias,biasInitializer:Xf(this.biasInitializer),biasRegularizer:oy(this.biasRegularizer),activityRegularizer:oy(this.activityRegularizer),biasConstraint:Wp(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Ny extends Iy{constructor(t,e){super(t,e),this.kernel=null,Ny.verifyArgs(e),this.filters=e.filters,Rp(this.filters,"filters"),this.kernelInitializer=Yf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Up(e.kernelConstraint),this.kernelRegularizer=cy(e.kernelRegularizer)}build(t){t=am(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hp("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Us((()=>{let e;t=nm(t);const n=null==this.bias?null:this.bias.read(),a=Dp(this.activation.getClassName());if(null!=a&&2===this.rank)e=wy(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)e=vy(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=wy(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new dp("convolutions greater than 3D are not implemented yet.");e=ky(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=am(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<n.length;++r){const t=gy(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);e.push(t)}let a=[t[0]];return"channelsLast"===this.dataFormat?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:Xf(this.kernelInitializer),kernelRegularizer:oy(this.kernelRegularizer),kernelConstraint:Wp(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new hp("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class Ty extends Ny{constructor(t){super(2,t),Ty.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!Ap(t.kernelSize,"number",1,2))throw new hp("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}Ty.className="Conv2D",Bs(Ty);class Sy extends Ny{constructor(t){super(3,t),Sy.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new hp("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}Sy.className="Conv3D",Bs(Sy);class Cy extends Ty{constructor(t){if(super(t),this.inputSpec=[new lm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new hp("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=am(t)).length)throw new hp("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lm({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Us((()=>{let e=nm(t);if(4!==e.shape.length)throw new hp("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,yy(o,u,c,this.padding),yy(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=sc(e,[0,2,3,1]));let p=Fo(e,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=sc(p,[0,3,1,2])),null!=this.bias&&(p=Tf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=am(t)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[a]=yy(e[a],i,s,this.padding),e[r]=yy(e[r],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Cy.className="Conv2DTranspose",Bs(Cy);class Ey extends Sy{constructor(t){if(super(t),this.inputSpec=[new lm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new hp("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(5!==(t=am(t)).length)throw new hp("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new hp("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lm({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Us((()=>{let e=nm(t);if(5!==e.shape.length)throw new hp("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,yy(i,p,u,this.padding),yy(c,f,h,this.padding),yy(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=sc(e,[0,2,3,4,1]));let y=Oo(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=sc(y,[0,4,1,2,3])),null!==this.bias&&(y=Tf(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=am(t)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return e[n]=this.filters,e[a]=yy(e[a],l,o,this.padding),e[r]=yy(e[r],u,i,this.padding),e[s]=yy(e[s],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ey.className="Conv3DTranspose",Bs(Ey);class Ay extends Ny{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new hp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new hp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new hp("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Yf(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cy(e.depthwiseRegularizer),this.depthwiseConstraint=Up(e.depthwiseConstraint),this.pointwiseInitializer=Yf(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cy(e.pointwiseRegularizer),this.pointwiseConstraint=Up(e.pointwiseConstraint)}build(t){if((t=am(t)).length<this.rank+2)throw new hp("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new hp("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new lm({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Us((()=>{let e;if(t=nm(t),1===this.rank)throw new dp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=sc(t,[0,2,3,1])),e=Pi(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Tf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=sc(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Xf(this.depthwiseInitializer),t.pointwiseInitializer=Xf(this.pointwiseInitializer),t.depthwiseRegularizer=oy(this.depthwiseRegularizer),t.pointwiseRegularizer=oy(this.pointwiseRegularizer),t.depthwiseConstraint=Wp(this.depthwiseConstraint),t.pointwiseConstraint=Wp(this.pointwiseConstraint),t}}Ay.className="SeparableConv";class Ry extends Ay{constructor(t){super(2,t)}}Ry.className="SeparableConv2D",Bs(Ry);class Fy extends Ny{constructor(t){super(1,t),Fy.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!Ap(t.kernelSize,"number",1,1))throw new hp("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}Fy.className="Conv1D",Bs(Fy);class Dy extends fm{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Us((()=>{if(t=nm(t),"channelsLast"===this.dataFormat){const e=gf(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return gf(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=gf(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return gf(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Dy.className="Cropping2D",Bs(Dy);class _y extends fm{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yp(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Ep(Hp,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Us((()=>{let e=nm(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=sc(e,[0,2,3,1]);const t=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?e.resizeNearestNeighbor([t,a]):e.resizeBilinear([t,a]);return sc(r,[0,3,1,2])}{const t=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,a]):e.resizeBilinear([t,a])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}_y.className="UpSampling2D",Bs(_y);class Oy extends Iy{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Yf(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Up(t.depthwiseConstraint),this.depthwiseRegularizer=cy(t.depthwiseRegularizer)}build(t){if((t=am(t)).length<4)throw new hp("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new hp("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Us((()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Us((()=>{null==r&&(r="channelsLast"),Yp(r);let o=by(t,r);if(4!==t.rank)throw new hp("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new hp("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return o=Mo(o,e,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=sc(o,[0,3,1,2])),o}))}(t=nm(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=Tf(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=am(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=gy(e,this.kernelSize[0],this.padding,this.strides[0]),s=gy(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],a,r,s]:[t[0],r,s,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Xf(this.depthwiseInitializer),t.depthwiseRegularizer=oy(this.depthwiseRegularizer),t.depthwiseConstraint=Wp(this.depthwiseRegularizer),t}}function My(t,e,n,a){if(Array.isArray(t)){if(null!=e||null!=n)throw new hp("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=t.slice(t.length-a,t.length),t=t.slice(0,t.length-a)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function Ly(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Us((()=>{const c=e.shape.length;if(c<3)throw new hp("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(hf(2,c));if(e=sc(e,l),null!=s)throw new dp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=r.asType("bool").asType("float32"),r.rank===c-1&&(r=Go(r,-1)),r=sc(r,l)),a&&(e=Li(e,0),null!=r&&(r=Li(r,0)));const u=[];let h,d=n;const p=e.shape[0],f=ec(e);let m,g;null!=r&&(m=ec(r));for(let e=0;e<p;++e){const n=f[e],a=Us((()=>t(n,d)));if(null==r)h=a[0],d=a[1];else{const t=Us((()=>{const t=m[e],n=Ci(t).sub(t);return{output:a[0].mul(t).add(d[0].mul(n)),newStates:d.map(((e,r)=>a[1][r].mul(t).add(e.mul(n))))}}));h=t.output,d=t.newStates}i&&u.push(h)}if(i){g=Qi(u,1)}return[h,g,d]}))}Oy.className="DepthwiseConv2D",Bs(Oy);class zy extends fm{constructor(t){let e;if(super(t),null==t.cell)throw new hp("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new jy({cells:t.cell}):t.cell,null==e.stateSize)throw new hp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new lm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return hf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){tm(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let a;if(a=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const a of e)n.push([t[0],a]);return[a].concat(n)}return a}computeMask(t,e){return Us((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new dp("Constants support is not implemented in RNN yet.");tm(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new lm({shape:[e,null,...n]});const a=[t[0]].concat(t.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!M(this.stateSpec.map((t=>t.shape[t.shape.length-1])),r))throw new hp("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((t=>new lm({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Us((()=>{if(!this.stateful)throw new lp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new hp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ti([n,t]))):this.states_=[Ti([n,this.cell.stateSize])];else if(null==t)Gs(this.states_),null!=this.keptStates&&(Gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Ti([n,t]))):this.states_[0]=Ti([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new hp("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):Gs(this.states_);for(let e=0;e<this.states_.length;++e){const a=t[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,r];if(!M(a.shape,s))throw new hp("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[e]=a}}this.states_=this.states_.map((t=>Hs(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=My(t,n,a,this.numConstants);t=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new lm({shape:t.shape}));o=o.concat(this.stateSpec)}null!=a&&(e.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof um){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return Us((()=>{const n=null==e?null:e.mask,a=null==e?null:e.training;let r=null==e?null:e.initialState;t=nm(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new hp("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Ly(((t,e)=>{const n=this.cell.call([t].concat(e),o);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(t){return Us((()=>{let e=Ti(t.shape);return e=ai(e,[1,2]),e=pf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?xf(e,[1,t]):e)):this.cell.stateSize>1?[xf(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===zy.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Em(e.cell,n);return new t(Object.assign(e,{cell:a}))}}zy.className="RNN",Bs(zy);class Py extends fm{}class By extends Py{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Rp(this.units,"units"),this.activation=ey(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Yf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cy(t.kernelRegularizer),this.recurrentRegularizer=cy(t.recurrentRegularizer),this.biasRegularizer=cy(t.biasRegularizer),this.kernelConstraint=Up(t.kernelConstraint),this.recurrentConstraint=Up(t.recurrentConstraint),this.biasConstraint=Up(t.biasConstraint),this.dropout=lf([1,uf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=lf([1,uf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=am(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Us((()=>{if(2!==t.length)throw new hp("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const a=null!=e.training&&e.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ky({ones:()=>Ci(t),rate:this.dropout,training:a})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ky({ones:()=>Ci(n),rate:this.recurrentDropout,training:a}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=wf(null!=s?ei(t,s):t,this.kernel.read()),null!=this.bias&&(r=Tf(r,this.bias.read())),null!=o&&(n=ei(n,o));let i=Js(r,wf(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$g(this.activation),useBias:this.useBias,kernelInitializer:Xf(this.kernelInitializer),recurrentInitializer:Xf(this.recurrentInitializer),biasInitializer:Xf(this.biasInitializer),kernelRegularizer:oy(this.kernelRegularizer),recurrentRegularizer:oy(this.recurrentRegularizer),biasRegularizer:oy(this.biasRegularizer),activityRegularizer:oy(this.activityRegularizer),kernelConstraint:Wp(this.kernelConstraint),recurrentConstraint:Wp(this.recurrentConstraint),biasConstraint:Wp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}By.className="SimpleRNNCell",Bs(By);class Wy extends zy{constructor(t){t.cell=new By(t),super(t)}call(t,e){return Us((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return new t(e)}}Wy.className="SimpleRNN",Bs(Wy);class Vy extends Py{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new hp("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Rp(this.units,"units"),this.activation=ey(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ey(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Yf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cy(t.kernelRegularizer),this.recurrentRegularizer=cy(t.recurrentRegularizer),this.biasRegularizer=cy(t.biasRegularizer),this.kernelConstraint=Up(t.kernelConstraint),this.recurrentConstraint=Up(t.recurrentConstraint),this.biasConstraint=Up(t.biasConstraint),this.dropout=lf([1,uf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=lf([1,uf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=am(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Us((()=>{if(2!==t.length)throw new hp("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ky({ones:()=>Ci(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ky({ones:()=>Ci(a),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(t=ei(t,r[0]));let l=wf(t,this.kernel.read());this.useBias&&(l=Tf(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=ei(a,s[0]));const u=this.recurrentKernel.read(),[h,d]=qi(u,[2*this.units,this.units],u.rank-1),p=wf(a,h),[f,m,g]=qi(l,3,l.rank-1),[y,b]=qi(p,2,p.rank-1);o=this.recurrentActivation.apply(Js(f,y)),i=this.recurrentActivation.apply(Js(m,b));const x=wf(ei(i,a),d);c=this.activation.apply(Js(g,x));const v=Js(ei(o,a),ei(Js(1,ki(o)),c));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$g(this.activation),recurrentActivation:$g(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xf(this.kernelInitializer),recurrentInitializer:Xf(this.recurrentInitializer),biasInitializer:Xf(this.biasInitializer),kernelRegularizer:oy(this.kernelRegularizer),recurrentRegularizer:oy(this.recurrentRegularizer),biasRegularizer:oy(this.biasRegularizer),activityRegularizer:oy(this.activityRegularizer),kernelConstraint:Wp(this.kernelConstraint),recurrentConstraint:Wp(this.recurrentConstraint),biasConstraint:Wp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Vy.className="GRUCell",Bs(Vy);class Uy extends zy{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Vy(t),super(t)}call(t,e){return Us((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Uy.className="GRU",Bs(Uy);class Gy extends Py{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Rp(this.units,"units"),this.activation=ey(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ey(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Yf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Yf(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Yf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=cy(t.kernelRegularizer),this.recurrentRegularizer=cy(t.recurrentRegularizer),this.biasRegularizer=cy(t.biasRegularizer),this.kernelConstraint=Up(t.kernelConstraint),this.recurrentConstraint=Up(t.recurrentConstraint),this.biasConstraint=Up(t.biasConstraint),this.dropout=lf([1,uf([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=lf([1,uf([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=am(t))[t.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;a=new((e=class extends Rf{apply(e,a){const r=t.apply([n]),s=(new Df).apply([n]),o=t.apply([2*n]);return bf(bf(r,s),o)}}).className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Us((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new hp("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ky({ones:()=>Ci(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ky({ones:()=>Ci(a),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(t=ei(t,s[0]));let h=wf(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=ei(a,o[0])),h=Js(h,wf(a,this.recurrentKernel.read())),this.useBias&&(h=Tf(h,this.bias.read()));const[d,p,f,m]=qi(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=Js(ei(c,r),ei(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=ei(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:$g(this.activation),recurrentActivation:$g(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xf(this.kernelInitializer),recurrentInitializer:Xf(this.recurrentInitializer),biasInitializer:Xf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:oy(this.kernelRegularizer),recurrentRegularizer:oy(this.recurrentRegularizer),biasRegularizer:oy(this.biasRegularizer),activityRegularizer:oy(this.activityRegularizer),kernelConstraint:Wp(this.kernelConstraint),recurrentConstraint:Wp(this.recurrentConstraint),biasConstraint:Wp(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Gy.className="LSTMCell",Bs(Gy);class Hy extends zy{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Gy(t),super(t)}call(t,e){return Us((()=>{null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Hy.className="LSTM",Bs(Hy);class jy extends Py{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Us((()=>{let n=t.slice(1);const a=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?a.push(n.splice(0,t.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[t[0]].concat(n):[s[0]].concat(n),s=i.call(s,e),r.push(s.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[s[0]].concat(n)}))}build(t){let e;tm(t)&&(t=t[0]),this.cells.forEach(((n,a)=>{tf("RNNCell_".concat(a),(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of e.cells)a.push(Em(r,n));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return im(t)}setWeights(t){const e=[];for(const n of this.cells){const a=n.weights.length,r=t.splice(a);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}cm(e)}}function Ky(t){const{ones:e,rate:n,training:a=!1,count:r=1}=t,s=()=>Sf(e(),n),o=()=>Cf(s,e,a);if(!r||r<=1)return Hs(o().clone());return Array(r).fill(void 0).map(o).map((t=>Hs(t.clone())))}jy.className="StackedRNNCells",Bs(jy);var qy=function(t,e){var n={};for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(t);r<a.length;r++)e.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(t,a[r])&&(n[a[r]]=t[a[r]])}return n};class Xy extends zy{constructor(t){if(t.unroll)throw new dp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new dp("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new lm({ndim:5})]}call(t,e){return Us((()=>{if(null!=this.cell.dropoutMask&&(Gs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new hp("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,a=null==e?null:e.training,r=null==e?null:e.initialState;return super.call(t,{mask:n,training:a,initialState:r})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Us((()=>{const{stateSize:e}=this.cell,n=t.shape,a=this.computeSingleOutputShape(n),r=Ti([a[0],...a.slice(2)]);return Array.isArray(e)?Array(e.length).fill(r):[r]}))}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Us((()=>{if(!this.stateful)throw new lp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new hp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ti(r))):this.states_=[Ti(r)];else if(null==t)Gs(this.states_),null!=this.keptStates&&(Gs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ti(r))):this.states_[0]=Ti(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new hp("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):Gs(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],a=r;if(!M(n.shape,a))throw new hp("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map((t=>Hs(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===e,c=t[i?3:2],l=t[i?4:3],u=gy(c,a[0],r,s[0],o[0]),h=gy(l,a[1],r,s[1],o[1]);return[...t.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Xy.className="ConvRNN2D";class Yy extends Gy{constructor(t){const{filters:e,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,Rp(this.filters,"filters"),this.kernelSize=my(n,2,"kernelSize"),this.kernelSize.forEach((t=>Rp(t,"kernelSize"))),this.strides=my(a||1,2,"strides"),this.strides.forEach((t=>Rp(t,"strides"))),this.padding=r||"valid",Qp(this.padding),this.dataFormat=s||"channelsLast",Yp(this.dataFormat),this.dilationRate=my(o||1,2,"dilationRate"),this.dilationRate.forEach((t=>Rp(t,"dilationRate")))}build(t){var e;t=am(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new hp("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const a=t[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;t=new((e=class extends Rf{apply(t,e){return yf([n.apply([a]),Si([a]),n.apply([2*a])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Us((()=>{if(3!==t.length)throw new hp("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,a=t[0],r=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ky({ones:()=>Ci(a),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,i=(t,e,n)=>e&&e[n]?ei(e[n],t):t;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),h=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ky({ones:()=>Ci(r),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,x,v]=qi(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?qi(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,I,this.padding),h=this.inputConv(h,v,N,this.padding);const[T,S,C,E]=qi(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,T),f=this.recurrentConv(f,S),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const A=this.recurrentActivation.apply(Js(c,p)),R=this.recurrentActivation.apply(Js(l,f)),F=Js(ei(R,s),ei(A,this.activation.apply(Js(u,m)))),D=ei(this.recurrentActivation.apply(Js(h,g)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=qy(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,a)}inputConv(t,e,n,a){const r=Eo(t,e,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Tf(r,n,this.dataFormat):r}recurrentConv(t,e){return Eo(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Yy.className="ConvLSTM2DCell",Bs(Yy);class Qy extends Xy{constructor(t){const e=new Yy(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Qy.className="ConvLSTM2D",Bs(Qy);class Jy extends fm{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?e[a]:this.noiseShape[a]);return n}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,a=this.getNoiseShape(n);return Cf((()=>Sf(n,this.rate,a,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Jy.className="Dropout",Bs(Jy);class Zy extends Jy{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Zy.className="SpatialDropout1D",Bs(Zy);class $y extends fm{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Rp(this.units,"units"),this.activation=ey(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Yf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Yf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Up(t.kernelConstraint),this.biasConstraint=Up(t.biasConstraint),this.kernelRegularizer=cy(t.kernelRegularizer),this.biasRegularizer=cy(t.biasRegularizer),this.activityRegularizer=cy(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=am(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=am(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t),a=Dp(this.activation.getClassName());let r;return null!=a?r=wf(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=wf(n,this.kernel.read()),null!=this.bias&&(r=Tf(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:$g(this.activation),useBias:this.useBias,kernelInitializer:Xf(this.kernelInitializer),biasInitializer:Xf(this.biasInitializer),kernelRegularizer:oy(this.kernelRegularizer),biasRegularizer:oy(this.biasRegularizer),activityRegularizer:oy(this.activityRegularizer),kernelConstraint:Wp(this.kernelConstraint),biasConstraint:Wp(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}$y.className="Dense",Bs($y);class tb extends fm{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=am(t);for(const e of t.slice(1))if(null==e)throw new hp('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],of(t,1)]}call(t,e){return Us((()=>{this.invokeCallHook(t,e);let n=nm(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new hp("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],of(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}tb.className="Flatten",Bs(tb);class eb extends fm{constructor(t){super(t),this.supportsMasking=!0,this.activation=ey(t.activation)}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t);return this.activation.apply(n)}))}getConfig(){const t={activation:$g(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}eb.className="Activation",Bs(eb);class nb extends fm{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Us((()=>function(t,e){return Us((()=>{if(2!==t.shape.length)throw new hp("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return xf(pf(t,1),[1,e,1])}))}(t=nm(t),this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}nb.className="RepeatVector",Bs(nb);class ab extends fm{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",a=e.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const t=a[i];if(this.isUnknown(t)){if(null!==s)throw new hp("Can only specifiy one unknown dimension.");s=i}else r*=t}const o=of(t);if(null!==s){if(0===r||o%r!==0)throw new hp(n);a[s]=o/r}else if(o!==r)throw new hp(n);return a}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}ab.className="Reshape",Bs(ab);class rb extends fm{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=hf(1,t.dims.length+1);if(!M(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new lm({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=am(t)).slice();return this.dims.forEach(((n,a)=>{e[a+1]=t[n]})),e}call(t,e){return sc(nm(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}rb.className="Permute",Bs(rb);class sb extends fm{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=nm(t);return $s(Ii(n,this.maskValue),-1)}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t),a=$s(Ii(n,this.maskValue),-1,!0);return n.mul(a.asType(n.dtype))}))}}sb.className="Masking",Bs(sb);class ob extends fm{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(bp(t.inputLength))}this.inputDim=t.inputDim,Rp(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Rp(this.outputDim,"outputDim"),this.embeddingsInitializer=Yf(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cy(t.embeddingsRegularizer),this.activityRegularizer=cy(t.activityRegularizer),this.embeddingsConstraint=Up(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Us((()=>this.maskZero?(t=nm(t),Ii(t,rc(t))):null))}computeOutputShape(t){if(t=am(t),null==this.inputLength)return[...t,this.outputDim];const e=bp(this.inputLength);if(e.length!==t.length-1)throw new hp('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let a=0;a<e.length;++a){const r=e[a],s=t[a+1];if(null!=r&&null!=s&&r!==s)throw new hp('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==r&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Us((()=>{this.invokeCallHook(t,e);let n=nm(t);"int32"!==n.dtype&&(n=df(n,"int32"));return kf(this.embeddings.read(),n.as1D()).reshape(am(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xf(this.embeddingsInitializer),embeddingsRegularizer:oy(this.embeddingsRegularizer),activityRegularizer:oy(this.activityRegularizer),embeddingsConstraint:Wp(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ob.className="Embedding",Bs(ob);class ib extends fm{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new dp}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],s=e[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new hp("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[am(t)]),t.length<2)throw new hp("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const r of t)null!=r&&null!==r[0]&&e.push(r[0]);if(e=Sp(e),e.length>1)throw new hp("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const e=null==t[r]?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const a=t.map((t=>t.length));-1===t.indexOf(null)&&1===Sp(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Us((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const a=uf(n);for(let n of t){const t=n.rank;for(let e=0;e<a-t;++e)n=pf(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,a=t[0],r=t.slice(1).concat([a]);let o=s.reshape([a].concat(of(t.slice(1))));o=sc(o,[1,0]),o=o.reshape(r),e.push(o),n=!0}else if(t>1){const a=hf(1,t).concat([0]);e.push(sc(s,a)),n=!0}else e.push(s)}let a=this.mergeFunction(e);const r=a.rank;if(n)if(null==r){const t=a.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));a=sc(a.reshape([-1,e]),[1,0]).reshape(n)}else if(r>1){const t=[r-1].concat(hf(0,r-1));a=sc(a,t)}return a}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const n=null==t[a]?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const a of t)null!=a&&null!==a[0]&&n.push(a[0]);return n=Sp(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Us((()=>{if(null==e)return null;if(!Array.isArray(e))throw new hp("`mask` should be an Array");if(!Array.isArray(t))throw new hp("`inputs` should be an Array");if(e.length!==t.length)throw new hp("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Go(t,0))))[0];for(let t=1;t<e.length-1;++t)n=si(n,e[t]);return n}))}}class cb extends ib{constructor(t){super(t)}mergeFunction(t){return Us((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Js(e,t[n]);return e}))}}cb.className="Add",Bs(cb);class lb extends ib{constructor(t){super(t)}mergeFunction(t){return Us((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=ei(e,t[n]);return e}))}}lb.className="Multiply",Bs(lb);class ub extends ib{constructor(t){super(t)}mergeFunction(t){return Us((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Js(e,t[n]);return ei(1/t.length,e)}))}}ub.className="Average",Bs(ub);class hb extends ib{constructor(t){super(t)}mergeFunction(t){return Us((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=ci(e,t[n]);return e}))}}hb.className="Maximum",Bs(hb);class db extends ib{constructor(t){super(t)}mergeFunction(t){return Us((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=hi(e,t[n]);return e}))}}db.className="Minimum",Bs(db);class pb extends ib{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new hp("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const a of t)if(null!=a){e=!1;break}if(e)return;const n=[];for(let a=0;a<t.length;++a){const e=t[a].slice();e.splice(this.axis,1);let r=!1;for(const t of n)if(M(t,e)){r=!0;break}r||n.push(e)}if(n.length>1)throw new hp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Us((()=>yf(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new hp("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of e.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new hp("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new hp("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new hp("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return Us((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const a=[];for(let s=0;s<t.length;++s)null==e[s]?a.push(Ci(t[s]).asType("bool")):e[s].rank<t[s].rank?a.push(Go(e[s],-1)):a.push(e[s]);const r=Io(a,this.axis);return Zs(r,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function fb(t,e){for(;t<0;)t+=e;return t}pb.className="Concatenate",Bs(pb);class mb extends ib{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){R(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new dp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);if(e[a[0]]!==n[a[1]])throw new hp("Dimension incompatibility: "+"".concat(e[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(t){if(2!==t.length)throw new hp("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],a=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>fb(e,t[n].shape.length))):[fb(this.axes,n.shape.length),fb(this.axes,a.shape.length)],this.normalize&&(n=Am(n,e[0]),a=Am(a,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new dp("batchDot is not implemented for tensors of 4D or higher rank yet");if(R(t.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length))),R(t.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new dp("batchDot is not implemented for complex64-type Tensors yet.");const a=t.shape.length,r=e.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return Us((()=>{let n,o;if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)o=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,a=s[1]===e.shape.length-1;o=t.matMul(e,n,a)}if(n>0){let t;t=a>r?a+r-3:a-1;const e=[];for(let a=t;a<t+n;++a)e.push(a);o=o.squeeze(e)}return 1===o.shape.length&&(o=o.expandDims(1)),o}))}(n,a,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[fb(this.axes,t.length),fb(this.axes,e.length)],n}computeOutputShape(t){R(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new dp("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,n);e.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=e.concat(n);return 1===r.length&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}mb.className="Dot",Bs(mb);class gb extends fm{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t);return Cf((()=>vf(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}gb.className="GaussianNoise",Bs(gb);class yb extends fm{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Us((()=>{this.invokeCallHook(t,e);const n=nm(t);if(this.rate>0&&this.rate<1){return Cf((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(vf(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}yb.className="GaussianDropout",Bs(yb);class bb extends fm{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||nm(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Us((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t),a=()=>{const e=nm(t),a=-1.7580993408473766;let r=Qo(Oi(n),this.rate);r=df(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate;return e.mul(r).add(r.add(-1).mul(a)).mul(s).add(o)};return Cf(a,(()=>nm(t)),e.training||!1)}return t}))}}function xb(t,e,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)s=xo(t,e,n,a,r,o);else if(3===t.rank)s=vo(t,e,n,a,r,o);else{if(4!==t.rank)throw new dp("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");s=wo(t,e,n,a,r,o)}return s}function vb(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return M(a.slice().sort(),hf(0,t.rank-1))?function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Us((()=>{const s=wi(t,a),o=s.mean,i=s.variance;return[xb(t,o,i,n,e,r),o,i]}))}(t,e,n,a,r):function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Us((()=>{const s=wi(t,a),o=s.mean,i=s.variance,c=[];for(const e of hf(0,t.rank))-1!==a.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=o.reshape(c),u=i.reshape(c),h=null==e?null:e.reshape(c),d=null==n?null:n.reshape(c);return[xb(t,l,u,d,h,r),o,i]}))}(t,e,n,a,r)}bb.className="AlphaDropout",Bs(bb);class wb extends fm{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Yf(t.betaInitializer||"zeros"),this.gammaInitializer=Yf(t.gammaInitializer||"ones"),this.movingMeanInitializer=Yf(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Yf(t.movingVarianceInitializer||"ones"),this.betaConstraint=Up(t.betaConstraint),this.gammaConstraint=Up(t.gammaConstraint),this.betaRegularizer=cy(t.betaRegularizer),this.gammaRegularizer=cy(t.gammaRegularizer)}build(t){t=am(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new hp("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new lm({ndim:t.length,axes:{[e]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Us((()=>{const n=null!=e.training&&e.training,a=nm(t),r=a.shape,s=r.length,o=hf(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=fp(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!M(l,hf(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const t=this.movingMean.read().reshape(c),e=this.movingVariance.read().reshape(c),n=this.center?this.beta.read().reshape(c):null,r=this.scale?this.gamma.read().reshape(c):null;return xb(a,t,e,n,r,this.epsilon)}return xb(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=vb(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(t,e,n)=>{Us((()=>{const a=1-n,r=t.read(),s=r.sub(e).mul(a);t.write(r.sub(s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xf(this.betaInitializer),gammaInitializer:Xf(this.gammaInitializer),movingMeanInitializer:Xf(this.movingMeanInitializer),movingVarianceInitializer:Xf(this.movingVarianceInitializer),betaRegularizer:oy(this.betaRegularizer),gammaRegularizer:oy(this.gammaRegularizer),betaConstraint:Wp(this.betaConstraint),gammaConstraint:Wp(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}wb.className="BatchNormalization",Bs(wb);class kb extends fm{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Yf(t.betaInitializer||"zeros"),this.gammaInitializer=Yf(t.gammaInitializer||"ones"),this.betaRegularizer=cy(t.betaRegularizer),this.gammaRegularizer=cy(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=am(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==Sp(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((e=>t[e])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const n=nm(t),a=n.shape,r=a.length;return Us((()=>{let{mean:t,variance:e}=wi(n,this.axis,!0);const s=fp(1,r);for(const n of this.axis)s[n]=a[n];const o=t=>null!=t&&t.shape.length!==r&&this.axis!==[r-1]?t.reshape(s):t;let i=o(this.gamma.read()),c=o(this.beta.read());const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return t=t.tile(l),e=e.tile(l),i=i.tile(u),c=c.tile(u),xb(n,t,e,c,i,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xf(this.betaInitializer),gammaInitializer:Xf(this.gammaInitializer),betaRegularizer:oy(this.betaRegularizer),gammaRegularizer:oy(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}kb.className="LayerNormalization",Bs(kb);class Ib extends fm{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new hp("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new hp("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new hp("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new lm({ndim:4})]}computeOutputShape(t){let e,n;return t=am(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Us((()=>function(t,e,n){return Us((()=>{if(4!==t.rank)throw new hp("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==e&&(e=[[1,1],[1,1]]),2!==e.length||2!==e[0].length||2!==e[1].length)throw new hp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new hp("Unknown data format: ".concat(n,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let a;return a="channelsFirst"===n?[[0,0],[0,0],e[0],e[1]]:[[0,0],e[0],e[1],[0,0]],Ei(t,a)}))}(nm(t),this.padding,this.dataFormat)))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Nb(t,e,n,a,r,s){return Us((()=>{let o;Yp(r),Jp(s),Qp(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),t=by(t,r);const i="same"===a?"same":"valid";return o="max"===s?oi(t,e,n,i):go(t,e,n,i),"channelsFirst"===r&&(o=sc(o,[0,3,1,2])),o}))}function Tb(t,e,n,a,r,s){return Us((()=>{let o;Yp(r),Jp(s),Qp(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),t=xy(t,r);const i="same"===a?"same":"valid";return o="max"===s?ii(t,e,n,i):yo(t,e,n,i),"channelsFirst"===r&&(o=sc(o,[0,4,1,2,3])),o}))}Ib.className="ZeroPadding2D",Bs(Ib);class Sb extends fm{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new hp("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(Rp(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new hp("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}Rp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Qp(this.padding),this.inputSpec=[new lm({ndim:3})]}computeOutputShape(t){const e=gy((t=am(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Us((()=>{this.invokeCallHook(t,e),t=pf(nm(t),2);const n=this.poolingFunction(nm(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yi(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Cb extends Sb{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Nb(t,e,n,a,r,"max")}}Cb.className="MaxPooling1D",Bs(Cb);class Eb extends Sb{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Nb(t,e,n,a,r,"avg")}}Eb.className="AveragePooling1D",Bs(Eb);class Ab extends fm{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new hp("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];Rp(this.poolSize,"poolSize"),Rp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yp(this.dataFormat),Qp(this.padding),this.inputSpec=[new lm({ndim:4})]}computeOutputShape(t){t=am(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=gy(e,this.poolSize[0],this.padding,this.strides[0]),n=gy(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Us((()=>(this.invokeCallHook(t,e),this.poolingFunction(nm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Rb extends Ab{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Nb(t,e,n,a,r,"max")}}Rb.className="MaxPooling2D",Bs(Rb);class Fb extends Ab{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Nb(t,e,n,a,r,"avg")}}Fb.className="AveragePooling2D",Bs(Fb);class Db extends fm{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new hp("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Rp(this.poolSize,"poolSize"),Rp(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yp(this.dataFormat),Qp(this.padding),this.inputSpec=[new lm({ndim:5})]}computeOutputShape(t){t=am(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],a="channelsFirst"===this.dataFormat?t[4]:t[3];return e=gy(e,this.poolSize[0],this.padding,this.strides[0]),n=gy(n,this.poolSize[1],this.padding,this.strides[1]),a=gy(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,a]:[t[0],e,n,a,t[4]]}call(t,e){return Us((()=>(this.invokeCallHook(t,e),this.poolingFunction(nm(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _b extends Db{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Tb(t,e,n,a,r,"max")}}_b.className="MaxPooling3D",Bs(_b);class Ob extends Db{constructor(t){super(t)}poolingFunction(t,e,n,a,r){return Yp(r),Qp(a),Tb(t,e,n,a,r,"avg")}}Ob.className="AveragePooling3D",Bs(Ob);class Mb extends fm{constructor(t){super(t),this.inputSpec=[new lm({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new dp}}class Lb extends Mb{constructor(t){super(t||{})}call(t,e){return Us((()=>{const e=nm(t);return li(e,1)}))}}Lb.className="GlobalAveragePooling1D",Bs(Lb);class zb extends Mb{constructor(t){super(t||{})}call(t,e){return Us((()=>{const e=nm(t);return ti(e,1)}))}}zb.className="GlobalMaxPooling1D",Bs(zb);class Pb extends fm{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Yp(this.dataFormat),this.inputSpec=[new lm({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new dp}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Bb extends Pb{call(t,e){return Us((()=>{const e=nm(t);return"channelsLast"===this.dataFormat?li(e,[1,2]):li(e,[2,3])}))}}Bb.className="GlobalAveragePooling2D",Bs(Bb);class Wb extends Pb{call(t,e){return Us((()=>{const e=nm(t);return"channelsLast"===this.dataFormat?ti(e,[1,2]):ti(e,[2,3])}))}}Wb.className="GlobalMaxPooling2D",Bs(Wb);class Vb extends fm{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Em(e.layer,n);delete e.layer;const r={layer:a};return Object.assign(r,e),new t(r)}}class Ub extends Vb{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=am(t)).length<3)throw new hp("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=am(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),a=t[1];return[n[0],a].concat(n.slice(1))}call(t,e){return Us((()=>Ly(((t,n)=>[nm(this.layer.call(t,e)),[]]),t=nm(t),[],!1,null,null,!1,!0)[1]))}}Ub.className="TimeDistributed",Bs(Ub);class Gb extends Vb{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=Em(n),e.goBackwards=!0!==e.goBackwards;const a={};var r;if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=Em(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,Ep(qp,"BidirectionalMergeMode",r),t.weights)throw new dp("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,a,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),e=r[0]):e=r[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[e].concat(a).concat(a.slice()):yp(n)}apply(t,e){let n=null==e?null:e.initialState,a=null==e?null:e.constants;null==e&&(e={});const r=My(t,n,a,this.numConstants);if(t=r.inputs,n=r.initialState,a=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==a)return super.apply(t,e);const s=[],o=[];if(null!=n){const t=n.length;if(t%2>0)throw new hp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const a=n.map((t=>new lm({shape:t.shape})));this.forwardLayer.stateSpec=a.slice(0,t/2),this.backwardLayer.stateSpec=a.slice(t/2),o.push(...a)}if(null!=a)throw new dp("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof um;for(const c of s)if(c instanceof um!==i)throw new hp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,e);return this.inputSpec=r,i}return super.apply(t,e)}call(t,e){return Us((()=>{const n=e.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Li(r,1)),"concat"===this.mergeMode?o=yf([a,r]):"sum"===this.mergeMode?o=Js(a,r):"ave"===this.mergeMode?o=ei(.5,Js(a,r)):"mul"===this.mergeMode?o=ei(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){tf(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),tf(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=Em(e.layer);if(delete e.layer,null!=e.numConstants)throw new dp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=n,new t(a)}}Gb.className="Bidirectional",Bs(Gb);var Hb,jb;!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Hb||(Hb={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(jb||(jb={}));function Kb(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if(a.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Qb(t)){const r=Array.isArray(t)?[]:{};a.add(t);for(const s in t){const o=Kb(t[s],e,n,a);r[s]=o}return a.delete(t),r}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,r.value),r.value}function qb(t){return Xb(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:Yb)}function Xb(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=t[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Qb(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=t.map((t=>t[s])),o=Xb(a,e,n);r[s]=o}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function Yb(t){return null===t?null:Qb(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Qb(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof Ua))}function Jb(t){return function(t,e){return Kb(t,e)}(t,Zb)}function Zb(t){return t instanceof Ua?{value:t.clone(),recurse:!1}:Qb(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class $b{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class tx extends $b{constructor(){super(tx.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let a=0;a<n;a++)e[a]=this.get(this.wrap(this.begin+a));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function ex(t){return new sx(t)}function nx(t,e){return new gx(t,e)}tx.INITIAL_CAPACITY=32;class ax{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new dx(this,t)}filter(t){return new ux(this,t)}map(t){return new hx(this,t)}mapAsync(t){return new px(this,t)}serialMapAsync(t){return new px(this,t).serial()}flatmap(t){return new mx(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t){return new lx(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Yb;return this.rowMajorBatch(t,e).map((t=>qb(t,n)))}concatenate(t,e){return new gx(new rx([this,t]),e)}take(t){return t<0||null==t?this:new cx(this,t)}skip(t){return t<0||null==t?this:new ix(this,t)}prefetch(t){return new bx(this,t)}shuffle(t,e){return new xx(this,t,e)}serial(){return new ox(this)}}class rx extends ax{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Jb(t),done:!1}}}class sx extends ax{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class ox extends ax{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ix extends ax{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Gs(t.value)}return this.upstream.next()}}class cx extends ax{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class lx extends ax{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class ux extends ax{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Gs(t.value)}}}class hx extends ax{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=er(t.value),n=this.transform(t.value),a=er(n);for(const r of e)tr(r,a)||r.dispose();return{value:n,done:!1}}}class dx extends ax{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class px extends ax{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=er(t.value),n=await this.transform(t.value),a=er(n);for(const r of e)tr(r,a)||r.dispose();return{value:n,done:!1}}}class fx extends ax{constructor(){super(),this.outputQueue=new tx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class mx extends fx{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=er(t.value),n=this.transform(t.value),a=er(n);this.outputQueue.pushAll(n);for(const r of e)tr(r,a)||r.dispose();return!0}}class gx extends ax{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var yx;!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(yx||(yx={}));class bx extends ax{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new $b(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class xx extends bx{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Ri.alea(n||Ia().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class vx{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return R(t>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(t))),a=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),wx((async()=>(await n.iterator()).columnMajorBatch(t,e,kx)),a)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,wx((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,wx((async()=>(await e.iterator()).filter((e=>Us((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return wx((async()=>(await e.iterator()).map((e=>Us((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return wx((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return wx((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,wx((async()=>nx(ex((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,wx((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Ri.alea(e||Ia().toString());return wx((async()=>{let e=r.int32();return n&&(e+=r.int32()),(await a.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,wx((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function wx(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends vx{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function kx(t){if(null===t)return null;if(function(t){return null==t||null===(e=t)||"object"!==typeof e&&"function"!==typeof e||Array.isArray(t)||"object"===typeof t&&t instanceof Ua||K(t);var e}(t[0])){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Ua?Qi(t):vr(t)}(t),recurse:!1}}return{value:null,recurse:!0}}vx.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Ix(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&R("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors in the CPU backend.")))}))}const Nx=bu;class Tx extends T{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new N(this,Ws())}nextDataId(){return Tx.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,dt().get("IS_NODE")&&Kl("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:n,refCount:1}),a}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&X(n[0])){const r=n.map((t=>Ta(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){return Xl(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Sa(t)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return ss(t.shape,t.dtype,n)}makeOutput(t,e,n){const a=this.write(t,e,n);return Ws().makeTensorFromDataId(a,e,n,this)}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Ia();t();return{kernelMs:Ia()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ix([t],"where");const e=this.readSync(t.dataId);return Nx(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Tx.nextDataId=0;function Sx(t,e,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;if(Ix(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,l=c.data.get(i.dataId).values,u=O(i.shape),h=n||i.dtype,d=H(h,u);for(let t=0;t<u;++t)d[t]=e(l[t],s);return c.makeTensorInfo(i.shape,h,d)}}function Cx(t,e,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;if(Ix(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=o,l=c.data.get(i.dataId).values,u=n||i.dtype,h=e(l,u,s);return c.makeTensorInfo(i.shape,u,h)}}Ks("cpu",(()=>new Tx),1);const Ex=Sx(he,(t=>t>=0?t:Math.exp(t)-1)),Ax={kernelName:he,backendName:"cpu",kernelFunc:Ex};function Rx(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Fx={kernelName:Ee,backendName:"cpu",kernelFunc:Rx};function Dx(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:s}=a;Ix([r],"leakyRelu");const o=O(r.shape),i=n.data.get(r.dataId).values,c=G("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const _x={kernelName:Oe,backendName:"cpu",kernelFunc:Dx};function Ox(t){return(e,n,a,r,s)=>{const o=Vo(e,n),i=o.length,c=$(o),l=G(s,O(o)),u=e.length,h=n.length,d=$(e),p=$(n),f=Bo(e,o),m=Bo(n,o);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=t(a[g%a.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const e=it(g,i,c),n=e.slice(-u);f.forEach((t=>n[t]=0));const s=ot(n,u,d),o=e.slice(-h);m.forEach((t=>o[t]=0));const y=ot(o,h,p);l[g]=t(a[s],r[y])}return[l,o]}}const Mx=Ox(((t,e)=>t<0?e*t:t));function Lx(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e;Ix([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=Mx(a.shape,r.shape,s,o,a.dtype);return n.makeTensorInfo(c,a.dtype,i)}const zx={kernelName:gn,backendName:"cpu",kernelFunc:Lx},Px=Sx(wn,(t=>Math.max(0,t))),Bx={kernelName:wn,backendName:"cpu",kernelFunc:Px},Wx=Sx(Cn,(t=>Math.min(Math.max(0,t),6))),Vx={kernelName:Cn,backendName:"cpu",kernelFunc:Wx},Ux=Sx(Pn,(t=>1/(1+Math.exp(-t)))),Gx={kernelName:Pn,backendName:"cpu",kernelFunc:Ux};function Hx(t,e,n,a,r){if("linear"===n)return Rx({inputs:{x:e},backend:t});if("relu"===n)return Px({inputs:{x:e},backend:t});if("elu"===n)return Ex({inputs:{x:e},backend:t});if("relu6"===n)return Wx({inputs:{x:e},backend:t});if("prelu"===n)return Lx({inputs:{x:e,alpha:a},backend:t});if("leakyrelu"===n)return Dx({inputs:{x:e},backend:t,attrs:{alpha:r}});if("sigmoid"===n)return Ux({inputs:{x:e},backend:t});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function jx(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const Kx={kernelName:Vt,backendName:"cpu",kernelFunc:jx};function qx(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return jx({inputs:{real:qx(t,e,"float32"),imag:qx(t,e,"float32")},backend:t})}const a=at(O(e),n);return t.makeTensorInfo(e,n,a)}function Xx(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Yx={kernelName:xn,backendName:"cpu",kernelFunc:Xx};function Qx(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Rx({inputs:{x:r},backend:n});const t=qx(n,r.shape,r.dtype),e=Qx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=jx({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),a}if("complex64"===r.dtype){const t=Xx({inputs:{input:r},backend:n}),e=Qx({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!j(r.dtype,s)){const t=Rx({inputs:{x:r},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(r.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(r.shape,"int32",e)}if("bool"===s){const t=n.data.get(r.dataId).values,e=ka([0],r.dtype),[a,s]=Ox(((t,e)=>t!==e?1:0))(r.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",a)}throw new Error("Error in Cast: failed to cast ".concat(r.dtype," to ").concat(s))}const Jx={kernelName:Pt,backendName:"cpu",kernelFunc:Qx};function Zx(t,e,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;Ix([o,i],t);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,h=a||o.dtype,[d,p]=e(o.shape,i.shape,l,u,h);return c.makeTensorInfo(p,h,d)}:t=>{let{inputs:r,backend:s}=t;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const t=Qx({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),e=c.data.get(t.dataId),a=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=Qx({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=jx({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(t),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const t=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=e(o.shape,i.shape,t,n,r);return c.makeTensorInfo(l,r,s)}}}function $x(t){return(e,n,a,r,s,o)=>{const i=Vo(e,n),c=O(i),l=i.length,u=$(i),h=G("float32",c),d=G("float32",c),p=Bo(e,i),f=Bo(n,i),m=Xl(a,r),g=Xl(s,o),y=e.length,b=$(e),x=n.length,v=$(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const e=w%m.length,n=w%g.length,a=t(m[2*e],m[2*e+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const e=it(w,l,u),n=e.slice(-y);p.forEach((t=>n[t]=0));const a=ot(n,y,b),r=e.slice(-x);f.forEach((t=>r[t]=0));const s=ot(r,x,v),o=t(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[w]=o.real,d[w]=o.imag}return[h,d,i]}}const tv=Ox(((t,e)=>t+e)),ev=$x(((t,e,n,a)=>({real:t+n,imag:e+a}))),nv=Zx(vt,tv,ev),av={kernelName:vt,backendName:"cpu",kernelFunc:nv};function rv(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:s}=a,o=O(r.shape),i=W(s,o),c=O(i);R(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=i,e.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const sv={kernelName:kn,backendName:"cpu",kernelFunc:rv};function ov(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s}=e,{transposeA:o,transposeB:i}=a;Ix([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],h=i?s.shape[l-1]:s.shape[l-2],d=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=O(f),y=O(m);R(c>=2&&l>=2&&(g===y||1===g||1===y),(()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(f,") and (").concat(m,").")));const b=(g>y?r.shape.slice(0,-2):s.shape.slice(0,-2)).concat([d,p]);R(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const x=i?[y,p,h]:[y,h,p],v=rv({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,d]:[g,d,u]}}),w=rv({inputs:{x:s},backend:n,attrs:{shape:x}}),k=o?v.shape[1]:v.shape[2],I=o?v.shape[2]:v.shape[1],N=i?w.shape[1]:w.shape[2],T=Math.max(g,y),S=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=$(v.shape),A=$(w.shape),[F,D,_]=o?[E[0],1,E[1]]:[E[0],E[1],1],[M,L,z]=i?[1,A[1],A[0]]:[A[1],1,A[0]],P=I*N,B=ss([T,I,N],v.dtype),W=B.values,V=n.blockSize;for(let R=0;R<T;R++)for(let t=0;t<I;t+=V)for(let e=0;e<N;e+=V)for(let n=0;n<k;n+=V){const a=Math.min(t+V,I),r=Math.min(e+V,N),s=Math.min(n+V,k);for(let o=t;o<a;o++)for(let t=e;t<r;t++){let e=0;for(let a=n;a<s;a++){const n=Math.min(R,g-1)*F,r=Math.min(R,y-1)*z;e+=S[n+o*D+a*_]*C[a*M+t*L+r]}W[R*P+(o*N+t)]+=e}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,B.dtype,B.values)}const iv={kernelName:Mt,backendName:"cpu",kernelFunc:ov};const cv={kernelName:ua,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=ov({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=nv({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),u&&(f=Hx(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function lv(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const uv={kernelName:yt,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ix(e,"abs");let a=new Float32Array(O(e.shape));return a=lv(n.data.get(e.dataId).values),n.makeOutput(a,e.shape,"float32")}},hv=Sx(bt,(t=>Math.acos(t))),dv={kernelName:bt,backendName:"cpu",kernelFunc:hv},pv=Sx(xt,(t=>Math.acosh(t))),fv={kernelName:xt,backendName:"cpu",kernelFunc:pv};const mv={kernelName:wt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,a=e;Ix(e,"addN");const r=a.map((t=>n.data.get(t.dataId).values)),s=ss(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const t=r[i];for(let e=0;e<o.length;e++)o[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function gv(t,e,n,a,r){const s=e.length,o=O(e),i=$(e),c=$(r),l=G(n,O(r));for(let u=0;u<o;++u){const e=it(u,s,i),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[a[t]];l[ot(n,s,c)]=t[u]}return l}function yv(t){const{inputs:e,attrs:n,backend:a}=t,{x:r}=e,{perm:s}=n;Ix(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=gv(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const bv={kernelName:na,backendName:"cpu",kernelFunc:yv};const xv={kernelName:kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ix(r,"all");const i=V(s,r.shape);let c=i;const l=yi(c,r.shape.length);let u=r;null!=l&&(u=yv({inputs:{x:r},backend:n,attrs:{perm:l}}),c=xi(c.length,r.shape.length)),gi("all",c,u.shape.length);const[h,d]=fi(u.shape,c),p=O(d),f=at(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];e=e&&a}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=rv({inputs:{x:g},backend:n,attrs:{shape:mi(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const vv={kernelName:It,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ix(r,"any");const i=V(s,r.shape);let c=i;const l=yi(c,r.shape.length);let u=r;null!=l&&(u=yv({inputs:{x:r},backend:n,attrs:{perm:l}}),c=xi(c.length,r.shape.length)),gi("any",c,u.shape.length);const[h,d]=fi(u.shape,c),p=O(d),f=at(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];e=e||a}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=rv({inputs:{x:g},backend:n,attrs:{shape:mi(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const wv={kernelName:Nt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;Ix(r,"argMax");let o=V(s,r.shape);const i=yi(o,r.shape.length);let c=r;const l=[];null!=i&&(c=yv({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=xi(o.length,c.shape.length)),o=[o[0]],gi("argMax",o,c.shape.length);const[u,h]=fi(c.shape,o),d=at(O(u),"int32"),p=O(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let a=0;a<p;++a){const r=f[t+a];r>e&&(e=r,n=a)}d[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}};const kv={kernelName:Tt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;Ix(r,"argMin");let o=V(s,r.shape);const i=yi(o,r.shape.length);let c=r;const l=[];null!=i&&(c=yv({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=xi(o.length,c.shape.length)),o=[o[0]],gi("argMin",o,c.shape.length);const[u,h]=fi(c.shape,o),d=at(O(u),"int32"),p=O(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const t=m*p;let e=f[t],n=0;for(let a=0;a<p;++a){const r=f[t+a];r<e&&(e=r,n=a)}d[m]=n}return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(u,"int32",d)}},Iv=Sx(St,(t=>Math.asin(t))),Nv={kernelName:St,backendName:"cpu",kernelFunc:Iv},Tv=Sx(Ct,(t=>Math.asinh(t))),Sv={kernelName:Ct,backendName:"cpu",kernelFunc:Tv},Cv=Sx(Et,(t=>Math.atan(t))),Ev={kernelName:Et,backendName:"cpu",kernelFunc:Cv},Av=Ox(((t,e)=>Math.atan2(t,e))),Rv=Zx(Rt,Av),Fv={kernelName:Rt,backendName:"cpu",kernelFunc:Rv},Dv=Sx(At,(t=>Math.atanh(t))),_v={kernelName:At,backendName:"cpu",kernelFunc:Dv};function Ov(t,e,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ss(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const e=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*o-d,w=Math.max(0,v),k=Math.min(r.inHeight,u+v),I=e+y*b;for(let e=0;e<r.outWidth;++e){const o=e*i-p,u=Math.max(0,o),d=Math.min(r.inWidth,h+o);let y=f,b=0,v=0;for(let e=w;e<k;e+=c){const r=n+e*a[1];for(let e=u;e<d;e+=l){const n=t[r+e*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,v++)}if(isNaN(y))break}g[I+e*x+m]="avg"===s?b/v:y}}}return m}function Mv(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=ss(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=ss(e,n,t);for(let g=0;g<a.batchSize;++g)for(let t=0;t<a.inChannels;++t)for(let e=0;e<a.outHeight;++e){const n=e*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const x=Math.min(a.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let e=y;e<b;e+=l){const o=e-n;for(let n=p;n<x;n+=u){const i=n-h,c=m.get(g,e,n,t);c>v&&(v=c,w=r?s?((g*a.inHeight+e)*a.inWidth+n)*a.inChannels+t:(e*a.inWidth+n)*a.inChannels+t:o*d+i)}}o.set(w,g,e,i,t)}}return o}function Lv(t,e,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=ss(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let T=0;T<r.batchSize;++T){const e=T*w,n=T*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const T=w*o-m;let S=T;for(;S<0;)S+=l;const C=Math.min(r.inDepth,d+T),E=e+w*k;for(let e=0;e<r.outHeight;++e){const o=e*i-g;let d=o;for(;d<0;)d+=u;const m=Math.min(r.inHeight,p+o),w=E+e*I;for(let e=0;e<r.outWidth;++e){const o=e*c-y;let i=o;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+o),g=w+e*N;let k=b,I=0,T=0;for(let e=S;e<C;e+=l){const r=n+e*a[1];for(let e=d;e<m;e+=u){const n=r+e*a[2];for(let e=i;e<p;e+=h){const r=t[n+e*a[3]+x];if("max"===s&&r>k?k=r:"avg"===s&&(I+=r,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===s?I/T:k}}}}return x}const zv={kernelName:Ft,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Ix(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;R(po(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=no(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))u=Rx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=$(r.shape),a=Ov(t,r.shape,r.dtype,e,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const Pv={kernelName:_t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Ix(r,"avgPool3d");const u=ao(r.shape,s,o,1,i,c,l),h=Lv(n.data.get(r.dataId).values,r.shape,r.dtype,$(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Bv={kernelName:Ot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Ix([r,s],"avgPool3DGrad");const u=ao(s.shape,o,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,I=v-1-u.padInfo.front,N=k-1-u.padInfo.left,T=w-1-u.padInfo.top,S=ss(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let A=0;A<u.batchSize;++A)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=e-I,s=n-T,o=a-N;let i=0;for(let e=0;e<v;e+=y){const n=(r+e)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let e=0;e<w;e+=b){const a=(s+e)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let e=0;e<k;e+=x){const r=(o+e)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=E.get(A,n,a,r,t)}}}S.set(i*C,A,e,n,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const Wv={kernelName:Dt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s;Ix([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=no(o.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=ss(o.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,N=ss(r.shape,"float32",I);for(let T=0;T<u.batchSize;++T)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inHeight;++e)for(let n=0;n<u.inWidth;++n){const a=e-v,r=n-x;let s=0;for(let e=0;e<y;e+=m){const n=(a+e)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let e=0;e<b;e+=g){const a=(r+e)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=N.get(T,n,a,t)}}w.set(s*k,T,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Vv={kernelName:Ie,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,scale:s,offset:o,mean:i,variance:c}=e;R(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),R(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),R(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Ix([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let N=0;N<u.length;++N)m[N]=f[v++]+(u[N]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function Uv(t,e,n,a,r){const s=_s(a,e,n),o=O(n),i=$(a);if(s){const n=Os(e,i);return"string"===r?t.slice(n,n+o):t.subarray(n,n+o)}const c=ss(a,r,"string"===r?gu(t):t),l=ss(n,r);for(let u=0;u<l.size;++u){const t=l.indexToLoc(u),n=t.map(((t,n)=>t+e[n]));l.set(c.get(...n),...t)}return"string"===r?yu(l.values):l.values}function Gv(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,size:o}=a;Ix(r,"slice");const[i,c]=Ms(r,s,o);ws(r,i,c);const l=Uv(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const Hv={kernelName:On,backendName:"cpu",kernelFunc:Gv};const jv={kernelName:Lt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,crops:o}=a;Ix([r],"batchToSpaceND");const i=s.reduce(((t,e)=>t*e)),c=Al(r.shape,s,i),l=Rl(c.length,s.length),u=Fl(r.shape,s,i),h=Dl(o,s.length),d=_l(u,o,s.length),p=rv({inputs:{x:r},backend:n,attrs:{shape:c}}),f=yv({inputs:{x:p},backend:n,attrs:{perm:l}}),m=rv({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Gv({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Kv(t,e,n,a,r){const s=O(a),o=at(r,n);for(let i=0;i<t.length;i++){const n=t[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?e[i]:1)}return o}function qv(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t.shape[0],s=t.shape[1],o=ss([r,n],e.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=t.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):e.size>0?o.set(o.get(i,s)+e.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const Xv={kernelName:zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=Kv(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}};function Yv(t){return(e,n,a)=>{const r=G(n,e.length);for(let s=0;s<e.length;++s)r[s]=t(e[s],a);return r}}const Qv=Yv((t=>Math.ceil(t))),Jv=Cx(Bt,Qv),Zv={kernelName:Bt,backendName:"cpu",kernelFunc:Jv},$v=Sx(Wt,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),tw={kernelName:Wt,backendName:"cpu",kernelFunc:$v},ew={kernelName:Ut,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,a=new Float32Array(O(e.shape)),r=n.data.get(e.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const t=i[l],e=c[l];a[l]=Math.hypot(t,e)}return n.makeOutput(a,e.shape,"float32")}};function nw(t,e,n,a){const r=H(n,O(e));if(a&&"string"!==n){let e=0;t.forEach((t=>{const n=O(t.shape);r.set(t.vals,e),e+=n}))}else{let a=0;t.forEach((t=>{const s="string"===n?gu(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const i=n*e[1]+a;for(let e=0;e<t.shape[1];++e)r[i+e]=s[o++]}a+=t.shape[1]}))}return r}function aw(t){const{inputs:e,backend:n}=t,{input:a}=e,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const rw={kernelName:Re,backendName:"cpu",kernelFunc:aw};function sw(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,s=V(r,e[0].shape)[0];let o=Tl(e.map((t=>t.shape)),s);if(0===O(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>O(t.shape)>0));if(1===i.length)return Rx({inputs:{x:i[0]},backend:n});if(Nl(i.map((t=>t.shape)),s),"complex64"===i[0].dtype){const t=i.map((t=>Xx({inputs:{input:t},backend:n}))),e=i.map((t=>aw({inputs:{input:t},backend:n}))),a=sw({inputs:t,backend:n,attrs:{axis:s}}),r=sw({inputs:e,backend:n,attrs:{axis:s}}),o=jx({inputs:{real:a,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const c=i.map((t=>{const e=O(t.shape.slice(s));return rv({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),l=c.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));o=Tl(c.map((t=>t.shape)),1);const u=1===c[0].shape[0],h=nw(l,o,e[0].dtype,u),d=Tl(i.map((t=>t.shape)),s),p=n.makeTensorInfo(d,e[0].dtype,h);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const ow={kernelName:Gt,backendName:"cpu",kernelFunc:sw};function iw(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;Ix([r,s],"conv2d");const h=fo(c),d=ro(r.shape,s.shape,o,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Pa(d.outShape,r.dtype),w=$(r.shape),k=$(s.shape),I=w[0],N=x?w[1]:w[2],T=x?w[2]:1,S=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],A=x?v.strides[2]:1,R=x?1:v.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,_=v.values;for(let O=0;O<d.batchSize;++O){const t=O*I,e=O*C;for(let n=0;n<d.outHeight;++n){const a=e+n*E,r=n*d.strideHeight-b;for(let e=0;e<p;++e){const n=r+e*m;if(n<0||n>=d.inHeight)continue;const s=e*k[0],o=t+n*N;for(let t=0;t<d.outWidth;++t){const e=a+t*A,n=t*d.strideWidth-y;for(let t=0;t<f;++t){const a=n+t*g;if(a<0||a>=d.inWidth)continue;const r=o+a*T;let i=s+t*k[1];for(let t=0;t<d.inChannels;++t){const n=F[r+t*S];for(let t=0;t<d.outChannels;++t)_[e+t*R]+=n*D[i+t];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,_)}const cw={kernelName:Ht,backendName:"cpu",kernelFunc:iw};const lw={kernelName:jt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;Ix([r,s],"conv2dBackpropFilter");const h=fo(c),d=ro(r.shape,u,o,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Pa(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=new Pa(r.shape,r.dtype,w),N=new Pa(s.shape,s.dtype,k);for(let T=0;T<m;++T){const t=Math.max(0,Math.ceil((v-T)/p)),e=Math.min(d.outHeight,(d.inHeight+v-T)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=t;l<e;++l){const t=T+l*p-v;for(let e=a;e<r;++e){const a=n+e*f-x;i+=y?I.get(c,t,a,s)*N.get(c,l,e,o):I.get(c,s,t,a)*N.get(c,o,l,e)}}b.set(i,T,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const uw={kernelName:Kt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;Ix([r,s],"conv2dBackpropInput");const h=$(s.shape),d=$(r.shape);let p=fo(l);const f=ro(o,s.shape,i,1,c,u,!1,p),m=new Pa(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:T,inHeight:S,inWidth:C,outChannels:E,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,O=N-1-f.padInfo.left,M="channelsLast"===p,L=m.strides[0],z=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],V=M?d[1]:d[2],U=M?d[2]:1,G=M?1:d[1];for(let H=0;H<k;++H)for(let t=0;t<T;++t)for(let e=0;e<S;++e){const n=e-_,a=Math.max(0,Math.ceil(n/F)),r=Math.min(A,(I+n)/F);for(let s=0;s<C;++s){const o=s-O,i=Math.max(0,Math.ceil(o/D)),c=Math.min(R,(N+o)/D);let l=0;for(let e=a;e<r;++e){const a=e*F-n;for(let n=i;n<c;++n){const r=W*H+V*e+U*n,s=x*(I-1-a)+v*(N-1-(n*D-o))+w*t;for(let t=0;t<E;++t){l+=y[r+G*t]*b[s+t]}}}g[L*H+z*e+P*s+B*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const hw={kernelName:qt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a;Ix([r,s],"conv3d");const l=so(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Pa(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=v.values,N=$(r.shape),T=$(s.shape);for(let S=0;S<l.batchSize;++S){const t=S*N[0],e=S*v.strides[0];for(let n=0;n<l.outDepth;++n){const a=e+n*v.strides[1],r=n*l.strideDepth-y;for(let e=0;e<u;++e){const n=r+e*p;if(n<0||n>=l.inDepth)continue;const s=e*T[0],o=t+n*N[1];for(let t=0;t<l.outHeight;++t){const e=a+t*v.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const a=n+t*f;if(a<0||a>=l.inHeight)continue;const r=s+t*T[1],i=o+a*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,a=t*l.strideWidth-b;for(let t=0;t<d;++t){const e=a+t*m;if(e<0||e>=l.inWidth)continue;const s=r+t*T[2],o=i+e*l.inChannels;let c=s;for(let t=0;t<l.inChannels;++t){const e=w[o+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*k[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const dw={kernelName:Xt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,filterShape:c}=a;Ix([r,s],"conv3dBackpropFilterV2");const l=$(r.shape),u=$(s.shape),h=so(r.shape,c,o,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Pa(h.filterShape,"float32"),x=b.values,[v,w,k,I]=b.strides,N=n.data.get(s.dataId).values,[T,S,C,E]=u,A=n.data.get(r.dataId).values,[R,F,D,_]=l,O=h.padInfo.front,M=h.padInfo.left,L=h.padInfo.top;for(let z=0;z<m;++z){const t=Math.max(0,Math.ceil((O-z)/d)),e=Math.min(h.outDepth,(h.inDepth+O-z)/d),n=z*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((L-a)/p)),s=Math.min(h.outHeight,(h.inHeight+L-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<h.inChannels;++o){const u=o*I+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let u=0;u<h.batchSize;++u){const h=u*R,g=u*T;for(let u=t;u<e;++u){const t=(z+u*d-O)*F+h,e=u*S+g;for(let u=r;u<s;++u){const r=(a+u*p-L)*D+t,s=u*C+e;for(let t=i;t<c;++t){const e=t*E+s;m+=A[(n+t*f-M)*_+r+o]*N[e+l]}}}}x[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const pw={kernelName:Yt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{pad:o,strides:i,inputShape:c}=a;Ix([r],"conv3dBackpropInputV2");const l=$(r.shape),u=$(s.shape),h=so(c,s.shape,i,1,o),d=new Pa(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=l,I=n.data.get(s.dataId).values,[N,T,S,C]=u,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:_,inHeight:O,inWidth:M,outChannels:L,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=A-1-h.padInfo.front,H=R-1-h.padInfo.top,j=F-1-h.padInfo.left;for(let K=0;K<E;++K)for(let t=0;t<D;++t)for(let e=0;e<_;++e){const n=e-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(z,(A+n)/W);for(let s=0;s<O;++s){const o=s-H,i=Math.max(0,Math.ceil(o/V)),c=Math.min(P,(R+o)/V);for(let l=0;l<M;++l){const u=l-j,h=Math.max(0,Math.ceil(u/U)),d=Math.min(B,(F+u)/U);let E=0;for(let e=a;e<r;++e){const a=e*W-n;for(let n=i;n<c;++n){const r=n*V-o;for(let s=h;s<d;++s){const o=x*K+v*e+w*n+k*s,i=N*(A-1-a)+T*(R-1-r)+S*(F-1-(s*U-u))+C*t;for(let t=0;t<L;++t){E+=b[o+t]*I[i+t]}}}}p[f*K+m*e+g*s+y*l+t]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},fw=Sx(Qt,(t=>Math.cos(t))),mw={kernelName:Qt,backendName:"cpu",kernelFunc:fw},gw=Sx(Jt,(t=>Math.cosh(t))),yw={kernelName:Jt,backendName:"cpu",kernelFunc:gw};const bw={kernelName:$t,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:s,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,f=s.shape[0],[m,g]=i,y=ss([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,v=n.data.get(r.dataId).values,w=$(r.shape),k=$(y.shape);for(let I=0;I<f;I++){const t=4*I,e=b[t],n=b[t+1],a=b[t+2],r=b[t+3],s=x[I];if(s>=u)continue;const o=m>1?(a-e)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let u=0;u<m;u++){const t=m>1?e*(h-1)+u*o:.5*(e+a)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===c){const e=Math.floor(t),a=Math.ceil(t),o=t-e;for(let t=0;t<g;t++){const c=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+I*k[0];y.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let n=0;n<p;n++){let r=n+h*w[2]+e*w[1]+s*w[0];const i=v[r];r=n+f*w[2]+e*w[1]+s*w[0];const c=v[r];r=n+h*w[2]+a*w[1]+s*w[0];const l=v[r];r=n+f*w[2]+a*w[1]+s*w[0];const d=i+(c-i)*m,p=l+(v[r]-l)*m;r=n+t*k[2]+u*k[1]+I*k[0],y.values[r]=d+(p-d)*o}}}else for(let e=0;e<g;++e){const a=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+I*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(t);for(let t=0;t<p;t++){const n=t+o*w[2]+c*w[1]+s*w[0],a=t+e*k[2]+u*k[1]+I*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const xw={kernelName:Zt,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a;Ix(r,"cumsum");const c=yi([s],r.shape.length);let l=r;null!=c&&(l=yv({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=xi(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Ja(l.dtype,"int32"),d=at(O(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(t,e)=>t+f-e-1:(t,e)=>t+e;for(let y=0;y<p.length;y+=f)for(let t=0;t<f;t++){const e=m(y,t);if(0===t)d[e]=o?0:p[e];else{const n=m(y,t-1);d[e]=o?p[n]+d[n]:p[e]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const t=yv({inputs:{x:g},backend:n,attrs:{perm:bi(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const vw={kernelName:te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=Kv(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,t)}if(2===r.shape.length){const t=qv(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const ww={kernelName:ee,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockSize:s,dataFormat:o}=a;R("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o))),R(s>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*s,d=l*s,p=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let t=0;t<h;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<d;++t){const a=Math.floor(t/s),r=(n*s+t%s)*p;for(let t=0;t<p;++t){const n=t+r+u*(a+l*(e+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function kw(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;Ix([r,s],"depthwiseConv2DNative");const u=$(r.shape),h=$(s.shape);let d=c;null==d&&(d=[1,1]),R(po(o,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(d,"'")));const p=ro(r.shape,s.shape,o,d,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Pa(p.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(s.dataId).values,T=k.values;for(let S=0;S<p.batchSize;++S){const t=S*u[0],e=S*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=e+n*k.strides[1],r=n*p.strideHeight-v;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=p.inHeight)continue;const s=e*h[0],o=t+n*u[1];for(let t=0;t<p.outWidth;++t){const e=a+t*k.strides[2],n=t*p.strideWidth-x;for(let t=0;t<m;++t){const a=n+t*y;if(a<0||a>=p.inWidth)continue;const r=s+t*h[1],i=o+a*p.inChannels;let c=e,l=r;for(let t=0;t<p.inChannels;++t){const e=I[i+t];for(let t=0;t<w;++t)T[c+t]+=e*N[l+t];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Iw={kernelName:ne,backendName:"cpu",kernelFunc:kw};const Nw={kernelName:ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;Ix([r,s],"depthwiseConv2dNativeBackpropFilter");const h=ro(r.shape,u,o,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Pa(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Pa(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,I=new Pa(s.shape,s.dtype,k);for(let N=0;N<f;++N){const t=Math.max(0,Math.ceil((b-N)/d)),e=Math.min(h.outHeight,(h.inHeight+b-N)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/x),i=s%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=t;i<e;++i){const t=N+i*d-b;for(let e=a;e<r;++e){const a=n+e*p-y;c+=w.get(l,t,a,o)*I.get(l,i,e,s)}}g.set(c,N,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Tw={kernelName:re,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;Ix([r,s],"depthwiseConv2DNativeBackpropInput");const h=$(r.shape),d=$(s.shape),p=ro(u,s.shape,o,i,c,l,!0),f=new Pa(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(s.dataId).values,[N,T,S]=d,{batchSize:C,filterHeight:E,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:_,outHeight:O,outWidth:M,strideHeight:L,strideWidth:z}=p,P=E-1-p.padInfo.top,B=A-1-p.padInfo.left,W=_/R;for(let V=0;V<C;++V)for(let t=0;t<R;++t)for(let e=0;e<F;++e){const n=e-P,a=Math.max(0,Math.ceil(n/L)),r=Math.min(O,(E+n)/L);for(let s=0;s<D;++s){const o=s-B,i=Math.max(0,Math.ceil(o/z)),c=Math.min(M,(A+o)/z);let l=0;for(let e=a;e<r;++e){const a=e*L-n;for(let n=i;n<c;++n){const r=v*V+w*e+k*n,s=N*(E-1-a)+T*(A-1-(n*z-o))+S*t;for(let e=0;e<W;++e){l+=x[r+(t*W+e)]*I[s+e]}}}m[g*V+y*e+b*s+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Sw={kernelName:se,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=O(a.shape),s=n.data.get(a.dataId).values,o=ss([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Cw={kernelName:oe,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:T,dilationWidth:S,outShape:C}=eo(r.shape,s.shape,o,i,"NHWC",c),E=O(C),A=C.length,R=H(r.dtype,E);for(let F=0;F<f;++F)for(let t=0;t<b;++t){const e=t*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const n=e+t*T;if(n>=0&&n<m)for(let e=0;e<N;++e){const c=a+e*S;if(c>=0&&c<g){const a=ot([F,n,c,o],h,$(r.shape)),l=ot([t,e,o],p,$(s.shape)),f=u[a]+d[l];f>i&&(i=f)}}}R[ot([F,t,n,o],A,$(C))]=i}}}return{dataId:l.write(ka(R,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Ew={kernelName:ce,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s,dy:o}=e,{strides:i,pad:c,dilations:l}=a,u=n,h=et(r.shape,u.data.get(r.dataId).values),d=et(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:S}=eo(r.shape,s.shape,i,c,"NHWC",l);R(o.rank===S.length,(()=>"Error in ".concat(ce,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const C=et(S,u.data.get(o.dataId).values),E=rt(s.shape,s.dtype);for(let A=0;A<p;++A)for(let t=0;t<y;++t){const e=t*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<f)for(let e=0;e<I;++e){const c=a+e*T;if(c>=0&&c<m){const a=h[A][n][c][r]+d[t][e][r];a>s&&(s=a,o=t,i=e)}}}E[o][i][r]+=C[A][t][n][r]}}}return{dataId:u.write(ka(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Aw={kernelName:ie,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,filter:s,dy:o}=e,{strides:i,pad:c,dilations:l}=a,u=n,h=et(r.shape,u.data.get(r.dataId).values),d=et(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:S}=eo(r.shape,s.shape,i,c,"NHWC",l);R(o.rank===S.length,(()=>"Error in ".concat(ie,", dy ")+"must have the same rank as output ".concat(S.length,", but got ")+"".concat(o.rank)));const C=et(S,u.data.get(o.dataId).values),E=rt(r.shape,r.dtype);for(let A=0;A<p;++A)for(let t=0;t<y;++t){const e=t*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=e<0?0:e,i=a<0?0:a;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<f)for(let e=0;e<I;++e){const c=a+e*T;if(c>=0&&c<m){const a=h[A][n][c][r]+d[t][e][r];a>s&&(s=a,o=n,i=c)}}}E[A][o][i][r]+=C[A][t][n][r]}}}return{dataId:u.write(ka(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Rw=Ox(((t,e)=>t*e)),Fw=$x(((t,e,n,a)=>({real:t*n-e*a,imag:t*a+e*n}))),Dw=Zx(rn,Rw,Fw),_w={kernelName:rn,backendName:"cpu",kernelFunc:Dw};function Ow(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;let i;Ix(r,"sum"),i="bool"===r.dtype?Qx({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Rx({inputs:{x:r},backend:n});const c=i.shape.length,l=V(s,i.shape),u=yi(l,c);let h=l,d=i;null!=u&&(d=yv({inputs:{x:i},backend:n,attrs:{perm:u}}),h=xi(h.length,c)),gi("sum",h,d.shape.length);const[p,f]=fi(d.shape,h);let m=qx(n,p,Ja(d.dtype,"int32"));const g=O(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const t=x*g;let e=0;for(let n=0;n<g;++n)e+=b[t+n];y[x]=e}if(o){const t=m;m=rv({inputs:{x:m},backend:n,attrs:{shape:mi(m.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),m}const Mw={kernelName:Vn,backendName:"cpu",kernelFunc:Ow};const Lw={kernelName:ue,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,s=e,{allDims:o,summedDims:i,idDims:c}=ou(r,s.length);cu(o.length,c,s);const{path:l,steps:u}=lu(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const t of u[m]){const{permutationIndices:e,expandDims:a}=iu(p,c[t]);let r;uu(e)?r=s[t]:(r=yv({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const o=r.shape.slice();for(let t=0;t<a.length;++t)o.splice(a[t],0,1);M(r.shape,o)||(r=rv({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=Dw({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=Ow({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const zw={kernelName:de,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:a,y:r}=e;Ix([a,r],"eluGrad");const s=new Float32Array(O(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const t=o[c];s[c]=t>=1?i[c]:i[c]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}},Pw=Ox(((t,e)=>t===e?1:0)),Bw=Zx(fe,Pw,null,"bool"),Ww={kernelName:fe,backendName:"cpu",kernelFunc:Bw},Vw=Wl,Uw=Vl,Gw=Ul,Hw=Gl,jw=Hl,Kw=jl,qw=Sx(pe,(t=>{const e=Math.sign(t),n=Math.abs(t),a=1/(1+Vw*n);return e*(1-((((Kw*a+jw)*a+Hw)*a+Gw)*a+Uw)*a*Math.exp(-n*n))})),Xw={kernelName:pe,backendName:"cpu",kernelFunc:qw},Yw=Yv((t=>Math.exp(t))),Qw=Cx(me,Yw),Jw={kernelName:me,backendName:"cpu",kernelFunc:Qw};function Zw(t){const{inputs:e,backend:n,attrs:a}=t,{input:r}=e,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(R(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),rv({inputs:{x:r},backend:n,attrs:{shape:i}})}const $w={kernelName:ge,backendName:"cpu",kernelFunc:Zw},tk=Yv((t=>Math.expm1(t))),ek=Cx(ye,tk),nk={kernelName:ye,backendName:"cpu",kernelFunc:ek},ak=Ox(((t,e)=>t/e)),rk=Zx(le,ak),sk={kernelName:le,backendName:"cpu",kernelFunc:rk},ok=Ox(((t,e)=>t-e)),ik=$x(((t,e,n,a)=>({real:t-n,imag:e-a}))),ck=Zx(Qn,ok,ik),lk={kernelName:Qn,backendName:"cpu",kernelFunc:ck};function uk(t,e,n){const a=t.shape,r=a[0],s=a[1],o=n.data.get(t.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=O(l),h=G("float32",u),d=G("float32",u);for(let g=0;g<r;g++){const t=Gv({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=Gv({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=jx({inputs:{real:t,imag:a},backend:n}),{real:o,imag:l}=hk(r,e,n),u=Xl(o,l);for(let e=0;e<s;e++){const t=Zl(u,e);h[g*s+e]=t.real,d[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=jx({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function hk(t,e,n){const a=O(t.shape),r=n.data.get(t.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=dk(s,o,a,e,n),i=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(i,"float32",r.real),e=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",wa(a,"float32")),o=Rx({inputs:{x:s},backend:n}),c=sk.kernelFunc({inputs:{a:t,b:s},backend:n}),l=sk.kernelFunc({inputs:{a:e,b:o},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const t=function(t,e,n){const a=new Float32Array(2*e);for(let r=0;r<e;r++){let s=0,o=0;for(let a=0;a<e;a++){const i=eu(r*a,e,n),c=Zl(t,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=e,o/=e),$l(a,s,o,r)}return a}(Xl(s,o),a,e);return Yl(t)}var i}function dk(t,e,n,a,r){if(1===n)return{real:t,imag:e};const s=Xl(t,e),o=n/2,i=Ql(s),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=jx({inputs:{real:h,imag:d},backend:r}),f=Jl(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=jx({inputs:{real:b,imag:x},backend:r}),w=dk(c,l,o,a,r),k=w.real,I=w.imag,N=[k.length],T=r.makeTensorInfo(N,"float32",k),S=r.makeTensorInfo(N,"float32",I),C=jx({inputs:{real:T,imag:S},backend:r}),E=dk(m,g,o,a,r),A=E.real,R=E.imag,F=[A.length],D=r.makeTensorInfo(F,"float32",A),_=r.makeTensorInfo(F,"float32",R),O=jx({inputs:{real:D,imag:_},backend:r}),M=tu(n,a),L=[M.real.length],z=r.makeTensorInfo(L,"float32",M.real),P=r.makeTensorInfo(L,"float32",M.imag),B=jx({inputs:{real:z,imag:P},backend:r}),W=Dw({inputs:{a:B,b:O},backend:r}),V=nv({inputs:{a:C,b:W},backend:r}),U=ck({inputs:{a:C,b:W},backend:r}),G=Xx({inputs:{input:V},backend:r}),H=Xx({inputs:{input:U},backend:r}),j=aw({inputs:{input:V},backend:r}),K=aw({inputs:{input:U},backend:r}),q=sw({inputs:[G,H],backend:r,attrs:{axis:0}}),X=sw({inputs:[j,K],backend:r,attrs:{axis:0}}),Y=r.data.get(q.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const pk={kernelName:be,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=O(a.shape),s=a.shape[a.shape.length-1],o=rv({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=uk(o,!1,n),c=rv({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function fk(t){const{backend:e,attrs:n}=t,{shape:a,value:r,dtype:s}=n,o=s||Q(r),i=H(o,O(a));return function(t,e,n){t.fill(e)}(i,r),e.makeTensorInfo(a,o,i)}const mk={kernelName:xe,backendName:"cpu",kernelFunc:fk};const gk={kernelName:ve,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,s=a,o=G(r.dtype,O(r.shape)),[i,c,l,u]=r.shape,h=s.data.get(r.dataId).values;for(let d=0;d<i;d++){const t=d*l*c*u;for(let e=0;e<c;e++){const n=e*(l*u);for(let a=0;a<l;a++){const r=a*u;for(let s=0;s<u;s++){const c=[i,e,a,s][2],d=Math.round(l-c),p=t+n+r+s;let f=h[p];if(d>=0&&d<l){f=h[t+n+d*u+s]}o[p]=f}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},yk=Yv((t=>Math.floor(t))),bk=Cx(we,yk),xk={kernelName:we,backendName:"cpu",kernelFunc:bk},vk=Ox(((t,e)=>Math.floor(t/e))),wk=Zx(ke,vk,null,"int32"),kk={kernelName:ke,backendName:"cpu",kernelFunc:wk};const Ik={kernelName:ha,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=iw({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=nv({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Hx(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Nk={kernelName:da,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=kw({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const t=m;m=nv({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Hx(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Tk={kernelName:Te,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,s=O(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,h]=Ol(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=ss([l,u],a.dtype),p=n.data.get(r.dataId).values,f=n.data.get(a.dataId).values;for(let m=0;m<l;m++){const t=[];let e=0;for(let n=0;n<i;n++){const a=p[m*i+n];e+=a*h[n],t.push(a)}if(e<0||e>=s/u)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(a.shape));for(let n=0;n<u;n++)d.values[m*u+n]=f[e*u+n]}return n.makeTensorInfo(c,d.dtype,d.values)}};function Sk(t,e,n){const a=ss(n,t.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=e.locToIndex([s,o]);n[2]=e.values[i];const c=t.locToIndex(n);a.values[r]=t.values[c]}return a}const Ck={kernelName:Ne,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:s}=e,{axis:o,batchDims:i}=a;Ix([r,s],"gatherV2");let c=i;null==i&&(c=0);const l=O(s.shape),u=mu(r,s,V(o,r.shape)[0],c),h=rv({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=rv({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}}),p=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize],f=n.bufferSync(d),m=Sk(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(u.outputShape,m.dtype,m.values)}},Ek=Ox(((t,e)=>t>e?1:0)),Ak=Zx(Se,Ek,null,"bool"),Rk={kernelName:Se,backendName:"cpu",kernelFunc:Ak},Fk=Ox(((t,e)=>t>=e?1:0)),Dk=Zx(Ce,Fk,null,"bool"),_k={kernelName:Ce,backendName:"cpu",kernelFunc:Dk};const Ok={kernelName:Ae,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e,r=O(a.shape),s=a.shape[a.shape.length-1],o=rv({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=uk(o,!0,n),c=rv({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},Mk=Sx(Fe,(t=>Number.isFinite(t)?1:0),"bool"),Lk={kernelName:Fe,backendName:"cpu",kernelFunc:Mk},zk=Sx(De,(t=>Math.abs(t)===1/0?1:0),"bool"),Pk={kernelName:De,backendName:"cpu",kernelFunc:zk},Bk=Sx(_e,(t=>Number.isNaN(t)?1:0),"bool"),Wk={kernelName:_e,backendName:"cpu",kernelFunc:Bk},Vk=Ox(((t,e)=>t<e?1:0)),Uk=Zx(Me,Vk,null,"bool"),Gk={kernelName:Me,backendName:"cpu",kernelFunc:Uk},Hk=Ox(((t,e)=>t<=e?1:0)),jk=Zx(Le,Hk,null,"bool"),Kk={kernelName:Le,backendName:"cpu",kernelFunc:jk};function qk(t,e,n){const a=(e-t)/(n-1),r=at(n,"float32");r[0]=t;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const Xk={kernelName:ze,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=qk(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},Yk=Yv((t=>Math.log(t))),Qk=Cx(Pe,Yk),Jk={kernelName:Pe,backendName:"cpu",kernelFunc:Qk},Zk=Sx(Be,(t=>Math.log1p(t))),$k={kernelName:Be,backendName:"cpu",kernelFunc:Zk},tI=Ox(((t,e)=>t&&e)),eI=Zx(We,tI,null,"bool"),nI={kernelName:We,backendName:"cpu",kernelFunc:eI},aI=Sx(Ve,(t=>t?0:1),"bool"),rI={kernelName:Ve,backendName:"cpu",kernelFunc:aI},sI=Ox(((t,e)=>t||e)),oI=Zx(Ue,sI,null,"bool"),iI={kernelName:Ue,backendName:"cpu",kernelFunc:oI};const cI={kernelName:Ge,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:s,bias:o,alpha:i,beta:c}=a;Ix(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=O(r.shape),p=new Float32Array(d);function f(t){const e=t%l;let n=t-e+Math.max(0,e-s);const a=t-e+Math.min(e+s,u);let r=0;for(;n<=a;n++){const t=h[n];r+=t*t}return r}for(let m=0;m<d;m++){const t=f(m),e=h[m]*Math.pow(o+i*t,-c);p[m]=e}return n.makeTensorInfo(r.shape,r.dtype,p)}};const lI={kernelName:He,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,y:s,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a;Ix(o,"LRNGrad");const h=O(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const t=b%d,e=b-t+Math.max(0,t-i),n=b-t+Math.min(d,t+i+1);let a=0;for(let r=e;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=e;r<n;r++){let t=-2*l*u*f[r]*m[b]/a;b===r&&(t+=Math.pow(a,-u)),t*=p[b],g[r]+=t}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function uI(t,e,n,a){const r=G(a,O(n));for(let s=0;s<r.length;++s){const n=s*e;let a=t[n];for(let r=0;r<e;++r){const e=t[n+r];e>a&&(a=e)}r[s]=a}return r}function hI(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=V(s,c);let h=u;const d=yi(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[d[e]];p=gv(p,c,r.dtype,d,t),h=xi(h.length,l),c=t}Ix(r,"max"),gi("max",h,l);const[f,m]=fi(c,h),g=uI(p,O(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=mi(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const dI={kernelName:je,backendName:"cpu",kernelFunc:hI},pI=Ox(((t,e)=>Math.max(t,e))),fI=Zx(Ke,pI),mI={kernelName:Ke,backendName:"cpu",kernelFunc:fI};const gI={kernelName:qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;Ix(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;R(po(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=no(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))u=Rx({inputs:{x:r},backend:n});else{const t=n.data.get(r.dataId).values,e=$(r.shape),a=Ov(t,r.shape,r.dtype,e,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const yI={kernelName:Ye,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Ix(r,"maxPool3d");const u=ao(r.shape,s,o,1,i,c,l),h=Lv(n.data.get(r.dataId).values,r.shape,r.dtype,$(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const bI={kernelName:Qe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Ix([r,s],"maxPool3DGrad");const u=ao(s.shape,o,i,1,c,l),h=function(t,e){const n=ss(e.outShape,"int32"),a=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let y=0;y<e.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=o;const v=Math.min(e.inDepth,l+b);for(let a=0;a<e.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const w=Math.min(e.inHeight,u+l);for(let r=0;r<e.outWidth;++r){const p=r*s-f;let k=p;for(;k<0;)k+=c;const I=Math.min(e.inWidth,h+p);let N=Number.NEGATIVE_INFINITY,T=-1;for(let e=x;e<v;e+=o){const n=e-b;for(let a=d;a<w;a+=i){const r=a-l;for(let s=k;s<I;s+=c){const o=s-p,i=t.get(m,e,a,s,g);i>=N&&(N=i,T=n*u*h+r*u+o)}}}n.set(T,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=v-1-u.padInfo.left,I=x-1-u.padInfo.top,N=ss(s.shape,"float32"),T=n.bufferSync(r);for(let S=0;S<u.batchSize;++S)for(let t=0;t<u.inChannels;++t)for(let e=0;e<u.inDepth;++e)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=e-w,s=n-I,o=a-k;let i=0;for(let e=0;e<b;e+=m){const n=(r+e)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*x*v-1-h.get(S,n,r,c,t)===e*x*v+a*v+s?1:0;if(0===l)continue;i+=T.get(S,n,r,c,t)*l}}}N.set(i,S,e,n,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const xI={kernelName:Xe,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s,output:o}=e,i=s;Ix([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=no(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=ss(d.outShape,i.dtype,Mv(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=ss(i.shape,"float32"),N=n.data.get(r.dataId).values,T=ss(r.shape,"float32",N);for(let S=0;S<d.batchSize;++S)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const a=e-k,r=n-w;let s=0;for(let e=0;e<x;e+=y){const n=(a+e)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const o=(r+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const i=x*v-1-f.get(S,n,o,t)===e*v+a?1:0;if(0===i)continue;s+=T.get(S,n,o,t)*i}}I.set(s,S,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const vI={kernelName:Je,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;Ix(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=no(r.shape,s,o,[1,1],i),[d,p]=function(t,e,n,a,r){const s=Ov(t,0,n,$(e),r,"max"),o=Mv(t,e,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const wI={kernelName:Ze,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=V(s,r.shape),c=O(fi(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=Qx({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=rk({inputs:{a:h,b:u},backend:n});l.push(d);const p=Ow({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:o}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}};const kI={kernelName:$e,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ix(r,"min");const i=V(s,r.shape);let c=i;const l=yi(c,r.shape.length);let u=r;null!=l&&(u=yv({inputs:{x:r},backend:n,attrs:{perm:l}}),c=xi(c.length,r.shape.length)),gi("min",c,u.shape.length);const[h,d]=fi(u.shape,c),p=O(d),f=at(O(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const t=y*p;let e=m[t];for(let n=0;n<p;++n){const a=m[t+n];a<e&&(e=a)}f[y]=e}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(o){const t=rv({inputs:{x:g},backend:n,attrs:{shape:mi(h,i)}});return n.disposeIntermediateTensorInfo(g),t}return g}},II=Ox(((t,e)=>Math.min(t,e))),NI=Zx(tn,II),TI={kernelName:tn,backendName:"cpu",kernelFunc:NI};const SI={kernelName:en,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,mode:o}=a;Ix(r,"mirrorPad");const i=s.map(((t,e)=>t[0]+r.shape[e]+t[1])),c=s.map((t=>t[0])),l=s.map(((t,e)=>t[0]+r.shape[e])),u="reflect"===o?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=$(r.shape),f=O(i),m=i.length,g=$(i),y=G(r.dtype,f);for(let b=0;b<f;b++){let t=it(b,m,g);for(let n=0;n<m;n++)t[n]<c[n]?t[n]=2*c[n]-t[n]-u:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+u);t=t.map(((t,e)=>t-c[e]));const e=ot(t,d,p);y[b]=h[e]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},CI=Ox(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),EI=Zx(nn,CI),AI={kernelName:nn,backendName:"cpu",kernelFunc:EI};function RI(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=V([i],r.shape),l=hI({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=mi(l.shape,c),h=rv({inputs:{x:l},backend:n,attrs:{shape:u}}),d=ck({inputs:{a:r,b:h},backend:n}),p=Qw({inputs:{x:d},backend:n}),f=Ow({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=rv({inputs:{x:f},backend:n,attrs:{shape:u}}),g=rk({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const FI={kernelName:Hn,backendName:"cpu",kernelFunc:RI};const DI={kernelName:an,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:s,seed:o,normalized:i}=a;Ix(r,"multinomial");const c=i?r:RI({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,s],p=at(O(d),"int32");for(let f=0;f<l;++f){const t=f*u,e=new Float32Array(u-1);e[0]=h[t];for(let r=1;r<e.length;++r)e[r]=e[r-1]+h[t+r];const n=Ri.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const t=n();p[a+r]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function _I(t,e,n){const a=wa(-1,n);return Rw([],e,a,t,n)}const OI={kernelName:sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;Ix(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=_I(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},MI=Lc;const LI={kernelName:cn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;Ix(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:h}=MI(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},zI=zc;const PI={kernelName:ln,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;Ix(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:p}=zI(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},BI=Pc;const WI={kernelName:un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;Ix(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=BI(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},VI=Ox(((t,e)=>t!==e?1:0)),UI=Zx(on,VI,null,"bool"),GI={kernelName:on,backendName:"cpu",kernelFunc:UI};const HI={kernelName:dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{depth:s,onValue:o,offValue:i}=a;Ix(r,"oneHot");const c=O(r.shape),l=new Float32Array(c*s);l.fill(i);const u=n.data.get(r.dataId).values;for(let h=0;h<c;++h)u[h]>=0&&u[h]<s&&(l[h*s+u[h]]=o);return n.makeTensorInfo([...r.shape,s],"int32",l)}};function jI(t){const{inputs:e,backend:n}=t,{x:a}=e;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const t=Xx({inputs:{input:a},backend:n}),e=jI({inputs:{x:t},backend:n}),r=aw({inputs:{input:a},backend:n}),s=jI({inputs:{x:r},backend:n}),o=jx({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return fk({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const KI={kernelName:oa,backendName:"cpu",kernelFunc:jI};const qI={kernelName:hn,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=Xx({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=aw({inputs:{input:r},backend:a}),o=jI({inputs:{x:s},backend:a}),i=jx({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return fk({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function XI(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return Zw({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const s=e[0].shape,o=e[0].dtype;e.forEach((t=>{F(s,t.shape,"All tensors passed to stack must have matching shapes"),R(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=sw({inputs:e.map((t=>{const e=Zw({inputs:{input:t},backend:n,attrs:{dim:r}});return i.push(e),e})),backend:n,attrs:{axis:r}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}const YI={kernelName:pn,backendName:"cpu",kernelFunc:XI};const QI={kernelName:fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,constantValue:o}=a;Ix(r,"pad");const i=s.map(((t,e)=>t[0]+r.shape[e]+t[1])),c=s.map((t=>t[0])),l=n.data.get(r.dataId).values,u=O(r.shape),h=r.shape.length,d=$(r.shape),p=O(i),f=i.length,m=$(i),g=G(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<u;y++){g[ot(it(y,h,d).map(((t,e)=>t+c[e])),f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},JI=Ox(((t,e)=>Math.pow(t,e))),ZI=Zx(mn,JI),$I={kernelName:mn,backendName:"cpu",kernelFunc:ZI};function tN(t,e,n,a){const[r,s]=fi(t,a),o=Ja(e,"int32"),i=at(O(r),o),c=O(s);for(let l=0;l<i.length;++l){const t=l*c;let e=1;for(let a=0;a<c;++a)e*=n[t+a];i[l]=e}return{outVals:i,outShape:r,outDtype:o}}const eN={kernelName:yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;Ix(r,"prod");const i=r.shape.length,c=V(s,r.shape),l=yi(c,i);let u=c,h=r;const d=[];null!=l&&(h=yv({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=xi(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=tN(h.shape,h.dtype,p,u);let y=m;return o&&(y=mi(m,c)),d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,f)}};function nN(t,e,n,a){if(t===e||t<e&&n<0||e<t&&n>1)return at(0,a);const r=at(Math.abs(Math.ceil((e-t)/n)),a);e<t&&1===n&&(n=-1),r[0]=t;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}const aN={kernelName:bn,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,dtype:s,step:o}=n,i=nN(a,r,o,s);return e.makeTensorInfo([i.length],s,i)}},rN=Sx(vn,(t=>1/t)),sN={kernelName:vn,backendName:"cpu",kernelFunc:rN};const oN={kernelName:Tn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a;Ix(r,"resizeBilinear");const c=$(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(O([h,l,u,f])),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let t=0;t<l;t++){let e;e=o?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),a=e-n,r=Math.min(d-1,Math.ceil(e)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let t=0;t<u;t++){let e;e=o?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,l=Math.min(p-1,Math.ceil(e)),u=s+n*c[2],h=i+n*c[2],d=s+l*c[2],y=i+l*c[2];for(let t=0;t<f;t++){const e=m[u+t],n=m[h+t],s=e+(m[d+t]-e)*r,o=s+(n+(m[y+t]-n)*r-s)*a;g[x++]=o}}}return n.makeTensorInfo([h,l,u,f],"float32",g)}};const iN={kernelName:Sn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a;Ix([s,r],"resizeBilinearGrad");const i=$(r.shape),[c,l,u,h]=r.shape,[,d,p]=s.shape,f=new Float32Array(c*l*u*h),m=[o&&d>1?l-1:l,o&&p>1?u-1:u],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let w=0;w<c;w++){const t=w*i[0];for(let e=0;e<d;e++){const n=e*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=t+a*i[1],o=t+r*i[1],c=n-a,d=1-c;for(let t=0;t<p;t++){const e=t*b,n=Math.floor(e),a=Math.min(Math.ceil(e),u-1),r=e-n,l=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=d*l,k=d*r,I=c*l,N=c*r;for(let t=0;t<h;t++){const e=x[v++];f[p+t]+=e*w,f[m+t]+=e*k,f[g+t]+=e*I,f[y+t]+=e*N}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};const cN={kernelName:In,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a;Ix(r,"resizeNearestNeighbor");const c=$(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*u*f),y=[s&&l>1?d-1:d,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const t=k*c[0];for(let e=0;e<l;e++){const n=o?x*(e+.5):x*e;let a=Math.min(d-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=t+a*c[1];for(let t=0;t<u;t++){const e=o?v*(t+.5):v*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let t=0;t<f;t++){const e=m[a+t];g[w++]=e}}}}return n.makeTensorInfo([h,l,u,f],r.dtype,g)}};const lN={kernelName:Nn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a;Ix([s,r],"resizeNearestNeighborGrad");const i=$(r.shape),c=$(s.shape),[l,u,h,d]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*h*d),g=n.data.get(s.dataId).values,y=[o&&p>1?u-1:u,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let T=0;T<l;T++){const t=T*i[0];for(let e=0;e<u;e++){const n=t+e*i[1],a=Math.floor(e*w),r=Math.floor(a-I/2);for(let s=0;s<h;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-N/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<I;a++){const l=a+r;if(l<0||l>=p)continue;const d=t+l*c[1],m=l*x;if(e===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let t=0;t<N;t++){const e=t+y;if(e<0||e>=f)continue;const a=d+e*c[2],r=e*v;s===Math.min(h-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const uN={kernelName:En,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:s}=a;Ix(r,"reverse");const o=r.shape.length,i=V(s,r.shape);if(0===o)return Rx({inputs:{x:r},backend:n});const c=new Pa(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const t=c.indexToLoc(u),e=t.slice();i.forEach((t=>e[t]=r.shape[t]-1-e[t])),c.set(l.get(...e),...t)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},hN={kernelName:la,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:s,fillValue:o,center:i}=n,c=a,l=G(r.dtype,O(r.shape)),[u,h,d,p]=r.shape,[f,m]=El(i,h,d),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let x=0;x<u;x++){const t=x*d*h*p;for(let e=0;e<h;e++){const n=e*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,e,a,s],c=i[2],x=i[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),v>=0&&v<d&&w>=0&&w<h){k=b[t+w*(d*p)+v*p+s]}l[t+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dN=Sx(An,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1})),pN={kernelName:An,backendName:"cpu",kernelFunc:dN},fN=Yv((t=>1/Math.sqrt(t))),mN=Cx(Rn,fN),gN={kernelName:Rn,backendName:"cpu",kernelFunc:mN};function yN(t,e,n,a,r,s,o,i,c,l){const u=[a/r,r],h=t.values,d=e.values;if(0===a)return ss(n,e.dtype);const p=ss(u,e.dtype);p.values.fill(c);for(let f=0;f<s;f++){const t=[];let s=0;for(let e=0;e<o;e++){const n=h[f*o+e];t.push(n),s+=n*i[e]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=d[f*r+n]:p.values[s*r+n]=0===e.rank?d[0]:d[f*r+n]}return p}const bN={kernelName:Fn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:s}=e,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=zl(0,r,o),d=yN(n.bufferSync(r),n.bufferSync(s),o,h,l,c,i,u,0,!0);return n.makeTensorInfo(o,d.dtype,d.values)}};const xN={kernelName:Dn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:s}=e;Ix([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=Ja(r.dtype,s.dtype),h=at(O(r.shape),u);let d=0;const p=0===o||o>1||1===r.shape.length?1:O(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let t=0;t<p;t++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,u,h)}},vN=Pl,wN=Bl,kN=Sx(_n,(t=>t>=0?wN*t:vN*(Math.exp(t)-1))),IN={kernelName:_n,backendName:"cpu",kernelFunc:kN},NN=Sx(zn,(t=>t<0?-1:t>0?1:0)),TN={kernelName:zn,backendName:"cpu",kernelFunc:NN},SN=Sx(Mn,(t=>Math.sin(t))),CN={kernelName:Mn,backendName:"cpu",kernelFunc:SN},EN=Sx(Ln,(t=>Math.sinh(t))),AN={kernelName:Ln,backendName:"cpu",kernelFunc:EN},RN=Math.log(1.1920928955078125e-7)+2,FN=Sx(Bn,(t=>{const e=t>-RN,n=t<RN,a=Math.exp(t);let r;return r=n?a:e?t:Math.log(1+a),r})),DN={kernelName:Bn,backendName:"cpu",kernelFunc:FN};const _N={kernelName:Un,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,paddings:o}=a;Ix([r],"spaceToBatchND");const i=O(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=QI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=Al(l.shape,s,i,!1),h=Rl(u.length,s.length,!1),d=Fl(l.shape,s,i,!1),p=rv({inputs:{x:l},backend:n,attrs:{shape:u}}),f=yv({inputs:{x:p},backend:n,attrs:{perm:h}}),m=rv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function ON(t,e,n,a,r){const s=O(a),o=e[0],i=r.length,c=[];let l=1,u=-1;for(let g=0;g<i;++g){const t=r[g];if(-1===t){if(-1!==u)throw new Error("only one output dimension may be -1, not both ".concat(u," and ").concat(g));u=g,c.push(1)}else{if(t<0)throw new Error("size ".concat(g," must be non-negative, not ").concat(t));l*=t,c.push(t)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/l);if(l*t!==s)throw new Error("Input to reshape is a SparseTensor with ".concat(s,"\n          dense values, but the requested shape requires a multiple of ").concat(l,". inputShape=").concat(a," outputShape= ").concat(c));c[u]=t}const h=O(c);if(h!==s)throw new Error("Input to reshape is a tensor with ".concat(s," dense values, but the requested shape has ").concat(h,". inputShape=").concat(a," outputShape=").concat(c));const d=a.length,p=[];if(d>0){p[d-1]=1;for(let t=d-2;t>=0;--t)p[t]=p[t+1]*a[t+1]}const f=[];if(i>0){f[i-1]=1;for(let t=i-2;t>=0;--t)f[t]=f[t+1]*c[t+1]}const m=H(n,o*i);for(let g=0;g<o;++g){let e=0;for(let n=0;n<d;++n)e+=t[g*d+n]*p[n];for(let t=0;t<i;++t)m[g*i+t]=Math.trunc(e/f[t]),e%=f[t]}return[m,[o,i],c]}const MN={kernelName:jn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:r,newShape:s}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,h]=ON(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const LN={kernelName:Kn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:s,defaultValue:o}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=zl(0,r,i),p=yN(n.bufferSync(r),n.bufferSync(s),i,d,u,l,c,h,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(i,p.dtype,p.values)}};const zN={kernelName:Gn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:s,axis:o}=a,i=V(o,r.shape)[0],c=du(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((t=>{const e=[...u];e[i]=t;const a=Gv({inputs:{x:r},backend:n,attrs:{begin:l,size:e}});return l[i]+=t,a}))}},PN=Sx(Wn,(t=>Math.sqrt(t))),BN={kernelName:Wn,backendName:"cpu",kernelFunc:PN},WN={kernelName:Xn,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:a}=e,r=n;Ix(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const t=s[i];o[i]=t*t}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},VN=Ox(((t,e)=>{const n=t-e;return n*n})),UN=Zx(qn,VN),GN={kernelName:qn,backendName:"cpu",kernelFunc:UN},HN=Sx(ia,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),jN={kernelName:ia,backendName:"cpu",kernelFunc:HN};function KN(t,e,n,a){const r=ss(t,e.dtype);for(let s=0;s<r.size;s++){const t=r.indexToLoc(s),o=new Array(t.length);for(let e=0;e<o.length;e++)o[e]=t[e]*n[e]+a[e];r.set(e.get(...o),...t)}return r}const qN={kernelName:Yn,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;Ix(r,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ls(r.shape,s,o,i,c,l,u,h,d),x=rv({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(p){const t=Gv({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});v=rv({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else{const t=KN(b,n.bufferSync(x),m,f);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=rv({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},XN=Sx(Jn,(t=>Math.tan(t))),YN={kernelName:Jn,backendName:"cpu",kernelFunc:XN},QN=Sx(Zn,(t=>Math.tanh(t)));function JN(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const a=ss(n,t.dtype);for(let r=0;r<a.values.length;++r){const e=a.indexToLoc(r),n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=e[a]%t.shape[a];const s=t.locToIndex(n);a.values[r]=t.values[s]}return a}const ZN={kernelName:$n,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:s}=a;Ix(r,"tile");const o=JN(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function $N(t,e,n,a,r){const s=e[e.length-1],[o,i]=[t.length/s,s],c=G(n,o*a),l=G("int32",o*a);for(let h=0;h<o;h++){const e=h*i,n=t.subarray(e,e+i),r=[];for(let t=0;t<n.length;t++)r.push({value:n[t],index:t});r.sort(((t,e)=>e.value-t.value));const s=h*a,o=c.subarray(s,s+a),u=l.subarray(s,s+a);for(let t=0;t<a;t++)o[t]=r[t].value,u[t]=r[t].index}const u=e.slice();return u[u.length-1]=a,[ss(u,n,c),ss(u,"int32",l)]}const tT={kernelName:ta,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a;Ix(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=$N(i,r.shape,r.dtype,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const eT={kernelName:ea,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{image:r,transforms:s}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[u,f,m,p],y=$(r.shape),b=y[0],x=y[1],v=y[2],w=G(r.dtype,O(g));w.fill(c);const k=a.data.get(r.dataId).values,I=a.data.get(s.dataId).values;for(let N=0;N<u;++N){const t=1===s.shape[0]?I:I.subarray(8*N,8*N+8);for(let e=0;e<f;++e)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=t[6]*n+t[7]*e+1;if(0===s)continue;const l=(t[0]*n+t[1]*e+t[2])/s,u=(t[3]*n+t[4]*e+t[5])/s,p=nT(l,d,i),f=nT(u,h,i);switch(o){case"nearest":r=rT(k,h,d,b,x,v,N,f,p,a,c);break;case"bilinear":r=sT(k,h,d,b,x,v,N,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}w[N*b+e*x+n*v+a]=r}return a.makeTensorInfo(g,r.dtype,w)}return{dataId:a.write(w,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function nT(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return E(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return E(0,n,e-1)}(t,e);case"nearest":return function(t,e){return E(0,t,e-1)}(t,e);default:return function(t,e){return t}(t)}}function aT(t,e,n,a,r,s,o,i,c,l,u){return 0<=i&&i<e&&0<=c&&c<n?t[o*a+i*r+c*s+l]:u}function rT(t,e,n,a,r,s,o,i,c,l,u){return aT(t,e,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function sT(t,e,n,a,r,s,o,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*aT(t,e,n,a,r,s,o,h,d,l,u)+(c-d)*aT(t,e,n,a,r,s,o,h,f,l,u))+(i-h)*((f-c)*aT(t,e,n,a,r,s,o,p,d,l,u)+(c-d)*aT(t,e,n,a,r,s,o,p,f,l,u))}function oT(t,e,n,a){const r=V(e,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o={},i=new Int32Array(n[r]),c=new Pa(s,a,t),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let e;if(u)e=t[f].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(c.get(e,f,n));e=t.join(",")}if(void 0!==o[e])i[f]=o[e];else{const t=Object.keys(o).length;o[e]=t,i[f]=t,l.push(f)}}const h=s.slice();h[1]=Object.keys(o).length;const d=new Pa(h,a);l.forEach(((t,e)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(c.get(n,t,a),n,e,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const iT={kernelName:aa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;Ix(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=oT(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const cT={kernelName:ra,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),h=r.shape.slice();h[s]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[s]=p;const t=Gv({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=rv({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return d}};const lT={kernelName:sa,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:s}=e,{numSegments:o}=a;Ix(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let d=0;d<l;++d){const t=Zw({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=t,c.push(t)}for(let d=0;d<o;++d){const t=wa(d,"int32"),e=n.makeTensorInfo([],"int32",t),a=Bw({inputs:{a:e,b:u},backend:n}),s=Qx({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=Dw({inputs:{a:s,b:r},backend:n}),l=Ow({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(e),c.push(a),c.push(s),c.push(o),c.push(l)}const h=XI({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},uT=[cv,uv,dv,fv,av,mv,xv,vv,wv,kv,Nv,Sv,Ev,Fv,_v,zv,Pv,Bv,Wv,iv,Vv,jv,Xv,Jx,Zv,tw,Kx,ew,ow,lw,uw,cw,dw,pw,hw,mw,yw,bw,xw,vw,ww,Iw,Nw,Tw,Sw,Cw,Aw,Ew,sk,Lw,Ax,zw,Ww,Xw,Jw,$w,nk,pk,mk,gk,xk,kk,Ik,Nk,Tk,Ck,Rk,_k,Fx,Ok,rw,Lk,Pk,Wk,_x,Gk,Kk,Xk,Jk,$k,nI,rI,iI,cI,lI,mI,gI,yI,bI,xI,vI,dI,wI,kI,TI,SI,AI,DI,_w,OI,LI,PI,WI,GI,HI,qI,YI,QI,$I,zx,eN,aN,Yx,sN,Bx,Vx,sv,oN,iN,cN,lN,uN,hN,pN,gN,bN,xN,IN,Gx,TN,CN,AN,Hv,FI,DN,_N,MN,LN,zN,BN,WN,GN,jN,qN,lk,Mw,YN,{kernelName:Zn,backendName:"cpu",kernelFunc:QN},ZN,tT,bv,eT,iT,cT,lT,KI];for(const n of uT)ba(n);const hT={},dT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function pT(t){if(!(t in hT)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete hT[t]}),!1),1===t)return e.getContext("webgl",dT)||e.getContext("experimental-webgl",dT);return e.getContext("webgl2",dT)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;hT[t]=e}const e=hT[t];return e.isContextLost()?(delete hT[t],pT(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),hT[t])}var fT,mT,gT;function yT(t,e){return[e,t]}function bT(t){const e=O(t);return z(Math.ceil(e/4))}function xT(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function vT(t,e){const n=t;let a,r,s,o,i,c,l,u,h,d;return 2===dt().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT):(a=t.RGBA,r=t.RGBA,s=t.RGBA,o=n.RGBA,i=t.RGBA,l=4,u=4,h=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),c=t.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function wT(t,e){const n=e();return dt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(fT||(fT={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(mT||(mT={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(gT||(gT={}));function kT(t){return!!(dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function IT(t,e){return DT(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function NT(t,e){const n=DT(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(wT(t,(()=>t.shaderSource(n,e))),wT(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=TT.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const a=+n[1],r=t.split("\n"),s=r.length.toString().length+2,o=r.map(((t,e)=>P((e+1).toString(),s)+t));let i=0;for(let h=0;h<o.length;h++)i=Math.max(o[h].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(P(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const TT=/ERROR: [0-9]+:([0-9]+):/g;function ST(t,e){if(wT(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function CT(t,e,n,a,r,s,o){const i=t.getAttribLocation(e,n);return-1!==i&&(wT(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,a))),wT(t,(()=>t.vertexAttribPointer(i,r,t.FLOAT,!1,s,o))),wT(t,(()=>t.enableVertexAttribArray(i))),!0)}function ET(t,e,n,a){wT(t,(()=>function(t,e,n){_T(t,n),wT(t,(()=>t.activeTexture(t.TEXTURE0+n))),wT(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,a))),wT(t,(()=>t.uniform1i(n,a)))}function AT(t,e,n){wT(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),wT(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function RT(t,e){wT(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),wT(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function FT(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function DT(t,e,n){const a=wT(t,(()=>e()));if(null==a)throw new Error(n);return a}function _T(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=e+t.TEXTURE0;if(a<t.TEXTURE0||a>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function OT(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return O(t.slice(0,t.length-e))}function MT(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function LT(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[OT(t),...MT(t)]),e}function zT(t){return t%2===0}function PT(t,e){if(M(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],a=e.slice(-1)[0];if(n===a)return!0;if(zT(n)&&zT(a)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&zT(t[0])&&zT(e[0])}let BT,WT;function VT(t,e){return null!=t.getExtension(e)}function UT(t){try{if(null!=pT(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function GT(t){if(0===t)return!1;const e=pT(t);if(1!==t){if(VT(e,"EXT_color_buffer_float"))return HT(e);const t="EXT_color_buffer_half_float";if(VT(e,t)){const n=e.getExtension(t);return function(t,e){const n=vT(t,e),a=t.createTexture();t.bindTexture(t.TEXTURE_2D,a);const r=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,a,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(a),t.deleteFramebuffer(o),i}(e,n)}return!1}if(!VT(e,"OES_texture_float"))return!1;if(!VT(e,"WEBGL_color_buffer_float"))return!1;return HT(e)}function HT(t){const e=vT(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(a),r}function jT(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&R("complex64"!==t.dtype,(()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend."))}))}const KT=dt();function qT(){let t,e,n,a,r,s,o,i,c,l;return 2===dt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function XT(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=$(e);return a.map(((e,r)=>{const s="int ".concat(t[r]," = ").concat(n," / ").concat(e),o=r===a.length-1?"int ".concat(t[r+1]," = ").concat(n," - ").concat(t[r]," * ").concat(e):"index -= ".concat(t[r]," * ").concat(e);return"".concat(s,"; ").concat(o,";")})).join("")}function YT(t){const e=$(t).map((t=>t.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}KT.registerFlag("HAS_WEBGL",(()=>KT.getNumber("WEBGL_VERSION")>0)),KT.registerFlag("WEBGL_VERSION",(()=>UT(2)?2:UT(1)?1:0)),KT.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),KT.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===KT.get("WEBGL_VERSION"))),KT.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),KT.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),KT.registerFlag("WEBGL_PACK",(()=>KT.getBool("HAS_WEBGL"))),KT.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_CLIP",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_PACK_REDUCE",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_LAZILY_UNPACK",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_CONV_IM2COL",(()=>KT.getBool("WEBGL_PACK"))),KT.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==BT){const e=pT(t);BT=e.getParameter(e.MAX_TEXTURE_SIZE)}return BT}(KT.getNumber("WEBGL_VERSION")))),KT.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==WT){const e=pT(t);WT=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,WT)}(KT.getNumber("WEBGL_VERSION")))),KT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=KT.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=pT(t);return e=VT(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:VT(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),KT.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>KT.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!lr())),KT.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=pT(t);if(1===t){if(!VT(e,"OES_texture_float"))return!1}else if(!VT(e,"EXT_color_buffer_float"))return!1;return HT(e)}(KT.getNumber("WEBGL_VERSION")))),KT.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!KT.getBool("WEBGL_FORCE_F16_TEXTURES")&&KT.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),KT.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>GT(KT.getNumber("WEBGL_VERSION")))),KT.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=KT.getNumber("WEBGL_VERSION"))&&null!=pT(t).fenceSync;var t})),KT.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>KT.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),KT.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))})),KT.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>lr()&&KT.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(t,"."))}));const QT="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class JT{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=fT.DENSE;const e=bT(t),n=qT();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(XT(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class ZT{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=fT.DENSE;const e=bT(t),n=qT();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(XT(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class $T{constructor(t){this.variableNames=["A"],this.outTexUsage=mT.DOWNLOAD;const e=qT();this.outputShape=t,this.userCode="\n      ".concat(QT,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class tS{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mT.DOWNLOAD;const e=qT();this.outputShape=t,this.userCode="\n      ".concat(QT,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class eS{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"];const a=qT(),[r,s]=e;this.outputShape=t;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode="\n      ".concat(YT(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(s,";\n        int c = imod(flatIndex, ").concat(s,");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(s,".0, ").concat(r,".0);\n        vec4 values = ").concat(a.texture2D,"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(a.output," = vec4(").concat(o,", 0., 0., 0.);\n      }\n    ")}}class nS{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const a=qT(),[r,s]=e;this.outputShape=t;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let e=0;e<=1;e++){const n=2*c+e;o+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(t[2],") {\n            localCoords[2] += ").concat(e,";\n            if(localCoords[1] + ").concat(c," < ").concat(t[1],") {\n              localCoords[1] += ").concat(c,";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(s,";\n              c = imod(flatIndex, ").concat(s,");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(s,".0, ").concat(r,".0);\n              values = ").concat(a.texture2D,"(A, uv);\n\n              if(offset == 0) {\n                result[").concat(n,"] = values[0];\n              } else if(offset == 1) {\n                result[").concat(n,"] = values[1];\n              } else if(offset == 2) {\n                result[").concat(n,"] = values[2];\n              } else {\n                result[").concat(n,"] = values[3];\n              }\n            }\n          }\n        ")}this.userCode="\n      ".concat(YT(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(o,"\n\n        ").concat(a.output," = ").concat(i,";\n      }\n    ")}}function aS(t){const e=qT();return function(t,e){const n=DT(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(wT(t,(()=>t.shaderSource(n,e))),wT(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function rS(t){return function(t,e){const n=DT(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return wT(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),wT(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function sS(t){return function(t,e){const n=DT(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return wT(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),wT(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function oS(t,e,n,a,r,s){!function(t,e){const n=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const a="[".concat(t,"x").concat(e,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(e,n);const o=function(t){return DT(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),i=t.TEXTURE_2D;return wT(t,(()=>t.bindTexture(i,o))),wT(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),wT(t,(()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),wT(t,(()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST))),wT(t,(()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST))),wT(t,(()=>t.texImage2D(i,0,a,e,n,0,r,s,null))),wT(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),o}function iS(t){return t.internalFormatFloat}function cS(t){return t.internalFormatHalfFloat}function lS(t){return t.downloadTextureFormat}function uS(t){return t.internalFormatPackedFloat}function hS(t){return t.internalFormatPackedHalfFloat}function dS(t,e,n,a,r,s,o,i){const c=t,l=new Float32Array(function(t,e){const[n,a]=xT(t,e);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class pS{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=dt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){hT[t]=e}(e,t)):this.gl=pT(e);let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(1===dt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=IT(this.gl,t),VT(this.gl,e))this.textureHalfFloatExtension=IT(this.gl,e);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),VT(this.gl,a))this.colorBufferHalfFloatExtension=IT(this.gl,a);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",VT(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!VT(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=rS(this.gl),this.indexBuffer=sS(this.gl),this.framebuffer=function(t){return DT(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=vT(this.gl,this.textureHalfFloatExtension)}get debug(){return dt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;wT(t,(()=>t.finish())),wT(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),wT(t,(()=>t.deleteFramebuffer(this.framebuffer))),wT(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),wT(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),wT(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=yT(e,n);return oS(t,r,s,iS(a),a.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=yT(e,n);return oS(t,r,s,cS(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=yT(e,n);return oS(t,r,s,lS(a),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){wT(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?wT(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):wT(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),wT(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,a){this.throwIfDisposed(),function(t,e,n,a,r,s){let o,i,c;wT(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(o=new Float32Array(n*a*4),i=t.FLOAT,c=s.internalFormatPackedFloat),o.set(r),wT(t,(()=>t.texImage2D(t.TEXTURE_2D,0,c,n,a,0,t.RGBA,i,o))),wT(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=xT(e,n);return oS(t,r,s,hS(a),t.RGBA,a.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,a){const[r,s]=xT(e,n);return oS(t,r,s,uS(a),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(RT(this.gl,this.framebuffer),this.outputTexture=null),wT(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,a){const[r,s]=yT(e,n),o=new Uint8Array(e*n*4);return wT(t,(()=>t.readPixels(0,0,r,s,a.downloadTextureFormat,t.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,a,r,s){return dS(this.gl,t,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const a=t,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const a=function(t,e,n,a){const r=t.createBuffer();wT(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const s=16*e*n;return wT(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),wT(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),wT(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(dt().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=a.clientWaitSync(r,0,0);return t===a.ALREADY_SIGNALED||t===a.CONDITION_SATISFIED},e=r}else dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const a=new Float32Array(e*n*4);return wT(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,a))),a}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=NT(e,t),a=aS(e),r=function(t){return DT(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return wT(e,(()=>e.attachShader(r,a))),wT(e,(()=>e.attachShader(r,n))),function(t,e){if(wT(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&ST(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(t,e,n){return wT(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),CT(t,e,"clipSpacePos",n,3,20,0)&&CT(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&wT(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&ST(this.gl,this.program),wT(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return DT(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),wT(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),ET(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[a,r]=xT(e,n);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,n,a){this.setOutputMatrixWriteRegionDriver(n,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&ST(this.gl,this.program),FT(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),wT(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),wT(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=IT(this.gl,2===dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await B((()=>this.disposed||this.isQueryAvailable(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||B((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),AT(this.gl,t,this.framebuffer),this.debug&&FT(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AT(this.gl,this.outputTexture,this.framebuffer),this.debug&&FT(this.gl)):RT(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const a=this.gl;AT(a,t,this.framebuffer),this.debug&&FT(a),this.outputTexture=t,wT(a,(()=>a.viewport(0,0,e,n))),wT(a,(()=>a.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,a){this.throwIfDisposed(),wT(this.gl,(()=>this.gl.scissor(t,e,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:fS}=a;function mS(t,e,n,a){const r=[];t.forEach((t=>{const e=O(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?r.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(r.push("uniform sampler2D ".concat(t.name,";")),r.push("uniform int offset".concat(t.name,";")))}));const s=r.join("\n"),o=t.map((t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a="";a+=n?yS(t):gS(t);const r=t.shapeInfo.logicalShape,s=e.logicalShape;r.length<=s.length&&(a+=n?function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,i=fS(t.shapeInfo.logicalShape,e.logicalShape),c=NS(o),l=o-s;let u;const h=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((t=>"coords.".concat(h[t+l]," = 0;"))).join("\n");let d="";d=o<2&&s>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(h[e+l]))).join(", ");let p="return outputValue;";const f=1===O(t.shapeInfo.logicalShape),m=O(e.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const t=s-2,e=s-1;i.indexOf(t)>-1&&i.indexOf(e)>-1?p="return vec4(outputValue.x);":i.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(t,e):function(t,e){const n=t.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.texShape,o=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===c&&null==t.shapeInfo.flatOffset&&M(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=NS(c),u=fS(t.shapeInfo.logicalShape,e.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((t=>"coords.".concat(p[t+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>"coords.".concat(p[e+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(t,e));return a}(t,e,a))).join("\n"),i=e.texShape,c=qT(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,h,d=function(t){const e="".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(bS,"\n    ").concat(xS,"\n    ").concat(vS,"\n  ");return e}(c);e.isPacked?(u=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(n[1],".0);\n      }\n    ");if(1===n[1])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(n[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      return 2 * (resTexRC.x * ").concat(n[1]," + resTexRC.y);\n    }\n  ")}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(M(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(n[0],", ").concat(n[1],"));\n      }\n    ");const a=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[2]/2),r=a*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],a=Math.ceil(t[t.length-1]/2),r=a*Math.ceil(t[t.length-2]/2);let s=r,o="",i="b, r, c";for(let c=2;c<t.length-1;c++)s*=t[t.length-c-1],o="\n      int b".concat(c," = index / ").concat(s,";\n      index -= b").concat(c," * ").concat(s,";\n    ")+o,i="b".concat(c,", ")+i;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      ").concat(o,"\n\n      int b = index / ").concat(r,";\n      index -= b * ").concat(r,";\n\n      int r = 2 * (index / ").concat(a,");\n      int c = imod(index, ").concat(a,") * 2;\n\n      return ivec").concat(t.length,"(").concat(i,");\n    }\n  ")}(t,e)}}(e.logicalShape,i),h=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(c)):(u=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){if(1===e[0])return"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e);case 2:return function(t,e){if(M(t,e))return"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=XT(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e);case 4:return function(t,e){const n=XT(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e);case 5:return function(t,e){const n=XT(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=XT(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,i),h=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),a&&(d+=wS);return[d,l,h,s,u,o,n].join("\n")}function gS(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(n,"() {return ").concat(e,";}");const[a,r]=t.shapeInfo.texShape;if(1===a&&1===r)return"\n      float ".concat(n,"() {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const[s,o]=t.shapeInfo.texShape,i=kS(e);return"\n    float ".concat(n,"() {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", ").concat(i,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int index) {\n        ").concat(IS(t),"\n      }\n    ");const a=t.shapeInfo.texShape,r=a[0],s=a[1];if(1===s&&1===r)return"\n      float ".concat(n,"(int index) {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const o=kS(e);if(1===s)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(o,") + 0.5) / ").concat(r,".0);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");if(1===r)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(o,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");return"\n    float ".concat(n,"(int index) {\n      vec2 uv = uvFromFlat(").concat(r,", ").concat(s,", index + ").concat(o,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape;if(null!=r&&M(e,r)){const t=r[0],e=r[1];return"\n    float ".concat(a,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(e,".0, ").concat(t,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}const{newShape:s,keptDims:o}=U(e),i=s;if(i.length<e.length){const e=TS(t,i),n=["row","col"];return"\n      ".concat(gS(e),"\n      float ").concat(a,"(int row, int col) {\n        return ").concat(a,"(").concat(SS(n,o),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(e[1],", 1)));\n        ").concat(IS(t),"\n      }\n    ");const c=r[0],l=r[1],u=kS(n);if(1===l)return"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(u,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(c,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");if(1===c)return"\n    float ".concat(a,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(u,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n  float ".concat(a,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(e[1]," + col + ").concat(u,";\n    vec2 uv = uvFromFlat(").concat(c,", ").concat(l,", index);\n    return sampleTexture(").concat(n,", uv);\n  }\n")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[1]*e[2],s=e[2],{newShape:o,keptDims:i}=U(e),c=o;if(c.length<e.length){const e=TS(t,c),n=["row","col","depth"];return"\n        ".concat(gS(e),"\n        float ").concat(a,"(int row, int col, int depth) {\n          return ").concat(a,"(").concat(SS(n,i),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(r,", ").concat(s,", 1)));\n        ").concat(IS(t),"\n      }\n    ");const l=t.shapeInfo.texShape,u=l[0],h=l[1],d=t.shapeInfo.flatOffset;if(h===r&&null==d)return"\n        float ".concat(a,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(s,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(h,".0, ").concat(u,".0);\n          return sampleTexture(").concat(n,", uv);\n        }\n      ");if(h===s&&null==d)return"\n    float ".concat(a,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(e[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(h,".0, ").concat(u,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const p=kS(n);return"\n      float ".concat(a,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(r," + col * ").concat(s," + depth + ").concat(p,";\n        vec2 uv = uvFromFlat(").concat(u,", ").concat(h,", index);\n        return sampleTexture(").concat(n,", uv);\n      }\n  ")}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[3],s=e[2]*r,o=e[1]*s,{newShape:i,keptDims:c}=U(e);if(i.length<e.length){const e=TS(t,i),n=["row","col","depth","depth2"];return"\n      ".concat(gS(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2) {\n        return ").concat(a,"(").concat(SS(n,c),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(o,", ").concat(s,", ").concat(r,", 1)));\n        ").concat(IS(t),"\n      }\n    ");const l=t.shapeInfo.flatOffset,u=t.shapeInfo.texShape,h=u[0],d=u[1];if(d===o&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(d,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(d===r&&null==l)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(e[1]*e[2],", ").concat(e[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(d,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const p=kS(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(o," + col * ").concat(s," +\n          depth * ").concat(r," + depth2;\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index + ").concat(p,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e[4],s=e[3]*r,o=e[2]*s,i=e[1]*o,{newShape:c,keptDims:l}=U(e);if(c.length<e.length){const e=TS(t,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(gS(e),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(SS(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(IS(t),"\n      }\n    ");const u=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=kS(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=U(e);if(r.length<e.length){const e=TS(t,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(gS(e),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(SS(n,s),");\n      }\n    ")}const o=e[5],i=e[4]*o,c=e[3]*i,l=e[2]*c,u=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(IS(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=kS(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(e.length,"-D input sampling")+" is not yet supported")}}function yS(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=qT();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t.shapeInfo.texShape,r=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=qT();return"\n    vec4 ".concat(n,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(r[0],", ").concat(r[1],", index);\n      return ").concat(s.texture2D,"(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,s=r[0],o=r[1],i=qT();if(null!=r&&M(e,r))return"\n      vec4 ".concat(a,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(o,".0, ").concat(s,".0);\n\n        return ").concat(i.texture2D,"(").concat(n,", uv);\n      }\n    ");const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(e[1]/2);return"\n    vec4 ".concat(a,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(c[0],", ").concat(c[1],", row, col);\n      return ").concat(i.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=TS(t,e.slice(1)),s=["b","row","col"];return"\n        ".concat(yS(r),"\n        vec4 ").concat(a,"(int b, int row, int col) {\n          return ").concat(a,"(").concat(SS(s,n),");\n        }\n      ")}const o=s[0],i=s[1],c=Math.ceil(e[2]/2),l=c*Math.ceil(e[1]/2),u=qT();return"\n    vec4 ".concat(a,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(o,", ").concat(i,", ").concat(l,", ").concat(c,", b, row, col);\n      return ").concat(u.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,a=t.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=o[0],c=o[1],l=Math.ceil(e[n-1]/2);let u=l*Math.ceil(e[n-2]/2),h="int b, int row, int col",d="b * ".concat(u," + (row / 2) * ").concat(l," + (col / 2)");for(let f=2;f<n-1;f++)h="int b".concat(f,", ")+h,u*=e[n-f-1],d="b".concat(f," * ").concat(u," + ")+d;const p=qT();return"\n    vec4 ".concat(r,"(").concat(h,") {\n      int index = ").concat(d,";\n      int texR = index / ").concat(c,";\n      int texC = index - texR * ").concat(c,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(c,", ").concat(i,");\n      return ").concat(p.texture2D,"(").concat(a,", uv);\n    }\n  ")}(t)}}const bS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xS="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vS="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function kS(t){return"offset".concat(t)}function IS(t){const e=t.name,n=O(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function NS(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function TS(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function SS(t,e){return e.map((e=>t[e])).join(", ")}function CS(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach(((t,n)=>{const a=t.logicalShape,r=e[n],s=r.shape;if(!M(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(t.isUniform&&r.isUniform)return;const o=t.texShape,i=r.isUniform?null:r.texData.texShape;if(!M(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}const{addImpl:ES,bincountImpl:AS,bincountReduceImpl:RS,ceilImpl:FS,concatImpl:DS,expImpl:_S,expm1Impl:OS,floorImpl:MS,gatherV2Impl:LS,greaterImpl:zS,lessImpl:PS,linSpaceImpl:BS,logImpl:WS,maxImpl:VS,maximumImpl:US,minimumImpl:GS,multiplyImpl:HS,negImpl:jS,prodImpl:KS,rangeImpl:qS,rsqrtImpl:XS,simpleAbsImpl:YS,sliceImpl:QS,sparseReshapeImpl:JS,stridedSliceImpl:ZS,subImpl:$S,tileImpl:tC,topKImpl:eC,transposeImpl:nC,uniqueImpl:aC}=r;function rC(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>"".concat(t,".").concat(e)))}function sC(t,e){return 1===e?[t]:rC(t,e)}class oC{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=sC("rc",e),a=NS(e),r=function(t,e,n){if(1===t)return"rc > ".concat(e[0]);let a="";for(let r=t-2;r<t;r++)a+="".concat(n[r]," >= ").concat(e[r]),r<t-1&&(a+="||");return a}(e,t,n),s=function(t,e,n,a){if(1===t)return"";const r=a.slice(-2);return"\n    int r = ".concat(r[0],";\n    int c = ").concat(r[1],";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(e,";\n    bool rEdge = rp1 >= ").concat(n,";\n  ")}(e,t[t.length-1],t[t.length-2],n),o=function(t,e){const n=t.length,a=function(t,e){const n=[];for(let a=0;a<=1;a++)for(let r=0;r<=1;r++){let s="".concat(0===a?"r":"rp1",", ").concat(0===r?"c":"cp1");for(let n=2;n<t;n++)s="".concat(e[e.length-1-n],",")+s;n.push(s)}return n}(n,e);if(1===n)return"getA(rc),\n            rc + 1 >= ".concat(t[0]," ? 0. : getA(rc + 1),\n            0, 0");return"getA(".concat(a[0],"),\n          cEdge ? 0. : getA(").concat(a[1],"),\n          rEdge ? 0. : getA(").concat(a[2],"),\n          rEdge || cEdge ? 0. : getA(").concat(a[3],")")}(t,n);this.userCode="\n        void main() {\n          ".concat(a," rc = getOutputCoords();\n\n          if(").concat(r,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(s,"\n\n            setOutput(vec4(").concat(o,"));\n          }\n        }\n      ")}}}class iC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t){const e=XT(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(e,"\n      return ivec3(r, c, d);\n    }\n  ")}(e),"\n      ").concat(YT(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(t[1],";\n        int cols = ").concat(t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class cC{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const a=uC(e,n),r=hC(t,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=lC(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let o;return a===gT.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===gT.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===gT.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===gT.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===gT.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(t,e,n,a){if(null==this.freeTextures)return;const r=uC(n,a),s=hC(e,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=lC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=dt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=o):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function lC(t,e,n,a,r){const s=function(t,e){switch(t){case gT.PACKED_2X2_FLOAT32:return uS(e);case gT.PACKED_2X2_FLOAT16:return hS(e);case gT.UNPACKED_FLOAT32:return iS(e);case gT.UNPACKED_FLOAT16:return cS(e);case gT.PACKED_4X1_UNSIGNED_BYTE:return lS(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,a);let o;if(r){const[e,n]=xT(t[0],t[1]);o=e*n}else{const[e,n]=yT(t[0],t[1]);o=e*n}const i=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format ".concat(e))}(n,s);return o*i}function uC(t,e){if(t===mT.UPLOAD)return gT.PACKED_2X2_FLOAT32;if(t===mT.RENDER||null==t)return function(t){return dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?gT.PACKED_2X2_FLOAT32:gT.UNPACKED_FLOAT32:t?gT.PACKED_2X2_FLOAT16:gT.UNPACKED_FLOAT16}(e);if(t===mT.DOWNLOAD||t===mT.PIXELS)return gT.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function hC(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class dC{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const pC="if (isnan(x)) return x;",fC="return x;",mC="return abs(x);";const gC="return (x >= 0.0) ? x : (exp(x) - 1.0);",yC=pC+"\n  return (x < 0.0) ? 0.0 : x;\n",bC=pC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",xC="return x;",vC="return 1.0 / (1.0 + exp(-1.0 * x));",wC="return x;",kC="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",IC="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",NC="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",TC="return 1.0 / (1.0 + exp(-1.0 * x));";class SC{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class CC{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=sC("rc",e),a=NS(e),r=function(t,e){if(1===t)return"rc";let n="";for(let a=0;a<t;a++)n+=e[a],a<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),o=e<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const EC=bu,AC={};class RC extends T{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!dt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=pT(dt().getNumber("WEBGL_VERSION"));this.binaryCache=((e=dt().getNumber("WEBGL_VERSION"))in AC||(AC[e]={}),AC[e]),this.gpgpu=new pS(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new cC(this.gpgpu),this.numMBBeforeWarning=null==dt().global.screen?1024:dt().global.screen.height*dt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new N(this,Ws())}nextDataId(){return RC.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((dt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||dt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:n,values:t,usage:mT.UPLOAD,refCount:1}),a}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,a,r){if(dt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:a,values:e,usage:mT.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=e;if(null!=s){let e;e=i?new SC(o,xC):new dC(o,xC);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=Ia()),"complex64"===a){u=Xl(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Ia()-l),this.convertAndCacheOnCPU(t,u)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=e;if(null!=r){let e;e=i?new SC(a,xC):new dC(a,xC);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===dt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&dt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(e.texture,...bT(a))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Xl(t[0],t[1])}else if(null==u)l=this.getValuesFromTexture(t);else{const t=O(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const h=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach((t=>t(h))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ws().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Sa(t)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return ss(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!kT(n)){if(dt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:a}=this.texData.get(t),r=O(e);if(dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture,...bT(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=dt().getBool("WEBGL_PACK")&&!0===a,o=s?LT(e):e,i=s?new tS(o):new $T(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,t();const r=_(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),s=_(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(r);o.kernelMs=function(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}(t),o.getExtraProfileInfo=()=>t.map(((t,e)=>({name:s[e],ms:t}))).map((t=>"".concat(t.name,": ").concat(t.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ia(),endMs:null}}endTimer(t){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Ia(),t)}async getQueryTime(t){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(t),i=o&&o.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(e,a,r,s)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:128;return dt().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&O(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){Kl("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return EC(t.shape,e)}packedUnaryOp(t,e,n){const a=new SC(t.shape,e),r=this.compileAndRun(a,[t],n);return Ws().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=YS(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(dt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,mC,t.dtype);const e=new dC(t.shape,mC),n=this.compileAndRun(e,[t]);return Ws().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let a;if("string"===e&&null!=n&&n.length>0&&X(n[0])){const r=n.map((t=>Ta(t)));a=this.write(r,t,e)}else a=this.write(n,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:a}=this.makeTensorInfo(t,e,n);return Ws().makeTensorFromDataId(a,t,e,this)}unpackTensor(t){const e=new CC(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new oC(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[OT(t.shape),...MT(t.shape)],a={dtype:t.dtype,shape:n,dataId:t.dataId},r=[OT(e),...MT(e)],s=new iC(r,n),o=this.runWebGLProgram(s,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:a,dtype:r}=e,s=LT(a);let o;o=n?new ZT(s):new JT(s);return{dtype:r,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(s.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===fT.DENSE){const e=bT(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===O(s.shape))return o.values=G(s.dtype,0),s;const i=[],c=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&O(e.shape)<=dt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),i.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!PT(n.shape,e.shape)){const t=e,a=e.shape;e.shape=n.shape,e=this.packedReshape(e,a),i.push(e),n=this.texData.get(e.dataId),t.shape=a}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:o,isUniform:!1},u=function(t,e,n){let a="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(n,"_").concat(e)}));const r=t.userCode;let s=t.constructor.name;return s+="_"+a+"_"+r,s}(t,c,l),h=this.getAndSaveBinary(u,(()=>function(t,e,n,a){const r=e.userCode,s=n.map(((t,n)=>{const a={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(a.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:a}})),o=s.map((t=>t.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=mS(s,i,r,e.packedInputs),l=t.createProgram(c);let u=null;const h=t.getUniformLocation(l,"NAN",!1);1===dt().getNumber("WEBGL_VERSION")&&(u=t.getUniformLocation(l,"INFINITY",!1));const d={};for(let p=0;p<e.variableNames.length;p++){const n=e.variableNames[p],a=!1;d[n]=t.getUniformLocation(l,n,a),d["offset".concat(n)]=t.getUniformLocation(l,"offset".concat(n),a)}return{program:e,source:c,webGLProgram:l,uniformLocations:d,inShapeInfos:o,outShapeInfo:i,infLoc:u,nanLoc:h}}(this.gpgpu,t,c,l))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(t,e,n,a,r){CS(e.inShapeInfos,n),CS([e.outShapeInfo],[a]);const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?t.setOutputPackedMatrixTexture(s,o[0],o[1]):t.setOutputMatrixTexture(s,o[0],o[1]),t.setProgram(e.webGLProgram),1===dt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,a)=>{const r=e.program.variableNames[a],s=e.uniformLocations[r],o=e.uniformLocations["offset".concat(r)];if(null!=s)if(n.isUniform)if(O(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,a)})),null!=r&&r(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,c,l,a),i.forEach((t=>this.disposeIntermediateTensorInfo(t))),d&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const f=dt().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=Ia();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!dt().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!dt().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Us((()=>{if(!dt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=dt().getBool("DEBUG");dt().set("DEBUG",!1);const e=this.abs(Xs(1e-8)).dataSync()[0];if(dt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=e;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=Ia());let u=e.texShape;if(null==u&&(u=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?A(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=U(t);t=e.newShape}let a=O(t);if(t.length<=1&&a<=n)return[1,a];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=OT(t);let n=2,r=2;return t.length&&([n,r]=MT(t)),a=e*(n/2)*(r/2),z(a).map((t=>2*t))}return z(a)}(n,i),e.texShape=u),null!=r){const t=LT(n);let s,o=u[1],h=u[0];const d=r instanceof Uint8Array;i?([o,h]=xT(u[0],u[1]),s=new nS(t,[h,o],d)):s=new eS(t,[h,o],d);const p=this.makeTensorInfo([h,o],a);this.texData.get(p.dataId).usage=d?mT.PIXELS:mT.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),o,h,r);const f=!0,m=this.runWebGLProgram(s,[p],a,null,f),g=this.texData.get(m.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),e.values=null,c&&(this.uploadWaitMs+=Ia()-l)}else{const t=this.acquireTexture(u,o,a,i);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:a}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,a)),n.values}acquireTexture(t,e,n,a){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*q(e)}}RC.nextDataId=0;ur()&&Ks("webgl",(()=>new RC),2);const FC="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class DC{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=Vo(e,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const _C="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class OC{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Vo(e,n);const r=this.outputShape.length;let s="";if(a)if(0===r||1===O(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=NS(r);if(s="\n          ".concat(t," coords = getOutputCoords();\n        "),1===r)s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=sC("coords",r);s+="\n            bool nextRowOutOfBounds =\n              (".concat(t[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function MC(t){const{inputs:e,backend:n}=t,{x:a}=e;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const LC={kernelName:Ee,backendName:"webgl",kernelFunc:MC};function zC(t){const{inputs:e,backend:n}=t,{real:a,imag:r}=e,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=MC({inputs:{x:a},backend:n}),c=MC({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const PC={kernelName:Vt,backendName:"webgl",kernelFunc:zC},BC="return (a < 0.) ? b * a : a;",WC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const VC={kernelName:Oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{alpha:s}=a,o=n.makeTensorInfo([],"float32",wa(s,"float32")),i=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OC(WC,r.shape,o.shape):new DC(BC,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],r.dtype);return n.disposeIntermediateTensorInfo(o),c}},UC="return (a < 0.) ? b * a : a;",GC="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const HC={kernelName:gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a,alpha:r}=e,s=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OC(GC,a.shape,r.shape):new DC(UC,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},jC="if (isnan(x)) return x;";function KC(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=t;return t=>{let{inputs:s,backend:o}=t;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const t=c.texData.get(i.dataId),e=a(t.values,l);return c.makeTensorInfo(i.shape,l,e)}let u;return u=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new SC(i.shape,n):new dC(i.shape,e),c.runWebGLProgram(u,[i],l)}}function qC(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=t;return t=>{let{inputs:i,backend:c}=t;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new DC(e,l.shape,u.shape);return h.runWebGLProgram(o,[r,s],Ja(n.dtype,a.dtype))})),s=zC({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),s}const d=o||Ja(l.dtype,u.dtype);if(h.shouldExecuteOnCPU([l,u])&&null!=s){const t=h.texData.get(l.dataId),e=h.texData.get(u.dataId),[n,a]=s(l.shape,u.shape,t.values,e.values,d),r=h.makeTensorInfo(a,d);return h.texData.get(r.dataId).values=n,r}let p;return p=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new OC(n,l.shape,u.shape,a):new DC(e,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function XC(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return e?wC:fC;if("relu"===t)return e?IC:yC;if("elu"===t)return e?kC:gC;if("relu6"===t)return e?NC:bC;if("prelu"===t)return e?GC:UC;if("leakyrelu"===t)return e?WC:BC;if("sigmoid"===t)return e?TC:vC;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class YC{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=a?t[1]:t[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";t[0]<e[0]?b="int(min(float(rc.x), ".concat(t[0]-1,".))"):e[0]<t[0]&&(x="int(min(float(rc.x), ".concat(e[0]-1,".))")),this.userCode="\n      ".concat(m,"\n\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(u,"; i++) {\n          int batchA = ").concat(b,";\n          int batchB = ").concat(x,";\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const QC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class JC{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Vo(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const ZC="return a * b;";function $C(t){const{inputs:e,backend:n}=t,{a:a,b:r}=e,s=Ja(a.dtype,r.dtype);if("complex64"===a.dtype){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),s=new JC(QC.REAL,a.shape,r.shape),o=new JC(QC.IMAG,a.shape,r.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=zC({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const t=n.texData.get(a.dataId),e=n.texData.get(r.dataId),[o,i]=HS(a.shape,r.shape,t.values,e.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OC(ZC,a.shape,r.shape):new DC(ZC,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const tE={kernelName:rn,backendName:"webgl",kernelFunc:$C};function eE(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{shape:s}=a,o=n,i=O(r.shape),c=W(s,i),l=O(c);R(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||PT(r.shape,c)||null!==u.texture&&PT(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(t,e,n){const a=[OT(t.shape),...MT(t.shape)],r={dtype:t.dtype,shape:a,dataId:t.dataId},s=[OT(e),...MT(e)],o=new iC(s,a),i=n.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(r,c,o)}const nE={kernelName:kn,backendName:"webgl",kernelFunc:eE};class aE{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=t;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c="sumValue += dot(values * ".concat(L(t)?t.toPrecision(2):t,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class rE{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=t;this.outputShape=[a,s];let o="0.0",i="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",i="min"):"max"===e&&(o="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n      }\n    "),d="vec4";"all"===e?(o="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function sE(t,e,n,a){const r=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],a=Cl(n);e.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return e}(t.shape);let s=t;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,h;u="mean"===n?0===o?new aE({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},i):new aE({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l}):new rE({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:l},n),h=s,s=a.runWebGLProgram(u,[s],e),h.dataId!==t.dataId&&a.disposeIntermediateTensorInfo(h)}return s}class oE{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const a=NS(this.rank),r=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(e);for(let r=0;r<t.length;r++)a[t[r]]=n[r];return a.join()}(e);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class iE{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=NS(this.rank),r=rC("rc",this.rank),s=new Array(this.rank);for(let l=0;l<e.length;l++)s[e[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function cE(t,e,n){const a=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iE(t.shape,e):new oE(t.shape,e);return n.runWebGLProgram(a,[t],t.dtype)}function lE(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a;return function(t,e,n,a){const r=e,s=t.shape.length,o=V(r,t.shape);let i=o;const c=yi(i,s),l=null!=c;let u=t;l&&(u=cE(t,c,a),i=xi(i.length,s)),gi("sum",i,s);const[h,d]=fi(u.shape,i);let p=h;n&&(p=mi(h,o));const f=O(d),m=eE({inputs:{x:u},attrs:{shape:[O(t.shape)/f,f]},backend:a}),g=sE(m,Za(t.dtype),"sum",a),y=eE({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const uE={kernelName:Vn,backendName:"webgl",kernelFunc:lE};function hE(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const t=o.texData.get(r.dataId).values,e=nC(t,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=e}else l=cE(r,s,o);return l}const dE={kernelName:na,backendName:"webgl",kernelFunc:hE},pE=1e3;function fE(t){let{a:e,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=t;const u=e.shape.length,h=n.shape.length,d=a?e.shape[u-2]:e.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?e.shape[u-1]:e.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=e.shape.slice(0,-2),y=n.shape.slice(0,-2),b=O(g),x=O(y);R(u>=2&&h>=2&&(b===x||1===b||1===x),(()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(g,") and (").concat(y,").")));const v=(b>x?e.shape.slice(0,-2):n.shape.slice(0,-2)).concat([f,m]);R(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],I=eE({inputs:{x:e},backend:s,attrs:{shape:w}}),N=eE({inputs:{x:n},backend:s,attrs:{shape:k}}),T=[I,N],S=Math.max(b,x),C=a?I.shape[1]:I.shape[2],E=null!=o,A=null!=i,F="leakyrelu"===l,D=null!=l?XC(l,!0):null;let _;if((1===f||1===m)&&C>pE&&!1===(E||A||F||null!=D)){let t=I,e=N;a&&(t=hE({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),T.push(t)),r&&(e=hE({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),T.push(e));const n=1===m;let o=t;1!==m&&(o=eE({inputs:{x:t},backend:s,attrs:{shape:[S,C,1]}}),T.push(o));const i=1===m?2:1;let c=e;n&&(c=eE({inputs:{x:e},backend:s,attrs:{shape:[S,1,C]}}),T.push(c));const l=$C({inputs:{a:o,b:c},backend:s});_=lE({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),T.push(l)}else{const t=Ja(e.dtype,n.dtype),l=new YC(w,k,[S,f,m],a,r,E,D,A,F),u=[I,N];if(null!=o&&u.push(o),A&&u.push(i),F){const t=s.makeTensorInfo([],"float32",wa(c,"float32"));u.push(t),T.push(t)}_=s.runWebGLProgram(l,u,t)}const M=eE({inputs:{x:_},backend:s,attrs:{shape:v}});T.push(_);for(const R of T)s.disposeIntermediateTensorInfo(R);return M}const mE={kernelName:ua,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s,bias:o,preluActivationWeights:i}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return fE({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},gE="return abs(x);";const yE={kernelName:yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const t=n.texData.get(a.dataId),e=YS(t.values);return n.makeTensorInfo(a.shape,a.dtype,e)}let r;return r=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new SC(a.shape,gE):new dC(a.shape,gE),n.runWebGLProgram(r,[a],a.dtype)}},bE=KC({opSnippet:pC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),xE={kernelName:bt,backendName:"webgl",kernelFunc:bE},vE=KC({opSnippet:pC+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),wE={kernelName:xt,backendName:"webgl",kernelFunc:vE},kE="return a + b;",IE=qC({opSnippet:kE,packedOpSnippet:kE,supportsComplex:!0,cpuKernelImpl:ES}),NE={kernelName:vt,backendName:"webgl",kernelFunc:IE};class TE{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class SE{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>"T".concat(e)));const n=[];this.variableNames.forEach((t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))}));const a=this.variableNames.map((t=>"v".concat(t))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const CE={kernelName:wt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,r=n;if(1===r.length)return MC({inputs:{x:r[0]},backend:a});if(r.length>dt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),n=t({inputs:r.slice(0,e),backend:a}),s=t({inputs:r.slice(e),backend:a});return t({inputs:[n,s],backend:a})}const s=r.map((t=>t.dtype)).reduce(((t,e)=>Ja(t,e))),o=r.map((t=>t.shape)),i=dt().getBool("WEBGL_PACK")?new SE(r[0].shape,o):new TE(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const EE={kernelName:kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=V(s,r.shape);let l=c;const u=yi(l,i);let h=r;null!=u&&(h=hE({inputs:{x:r},backend:n,attrs:{perm:u}}),l=xi(l.length,i)),gi("all",l,i);const[d,p]=fi(h.shape,l),f=eE({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=sE(f,f.dtype,"all",n);let g;if(o){g=eE({inputs:{x:m},backend:n,attrs:{shape:mi(d,c)}})}else g=eE({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};const AE={kernelName:It,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=V(s,r.shape);let l=c;const u=yi(l,i);let h=r;null!=u&&(h=hE({inputs:{x:r},backend:n,attrs:{perm:u}}),l=xi(l.length,i)),gi("any",l,i);const[d,p]=fi(h.shape,l),f=eE({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=sE(f,f.dtype,"any",n);let g;if(o){g=eE({inputs:{x:m},backend:n,attrs:{shape:mi(d,c)}})}else g=eE({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class RE{constructor(t,e,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class FE{constructor(t,e,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,R(t.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=t[t.length-1],s=Math.ceil(r/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=NS(i),l=sC("coords",i);let u,h;if(1===s){h=i+1;const t=NS(h);u="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((t=>"int "+t)),m=sC("sourceLocR",h-1).concat("inIdx.r"),g=sC("sourceLocG",h-1).concat("inIdx.g"),y=sC("sourceLocB",h-1).concat("inIdx.b"),b=sC("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function DE(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=e.shape[0],s=e.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=Cl(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new RE(i,n,null==a),l=[e];null!=a&&l.push(a);const u=t.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=DE(t,e,n,u);return t.disposeIntermediateTensorInfo(u),h}function _E(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:e.shape,s=Cl(r[r.length-1]),o=new FE(r,s,n,null==a),i=null==a?[e]:[e,a],c=t.runWebGLProgram(o,i,"int32");if(c.shape.length===e.shape.length){const a=_E(t,e,n,c);return t.disposeIntermediateTensorInfo(c),a}return c}function OE(t,e,n,a){const r=[n];if(gi("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,e.shape.length),!dt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[s,o]=fi(e.shape,r),i=O(o),c=eE({inputs:{x:e},backend:t,attrs:{shape:[-1,i]}});n.push(c);const l=DE(t,c,a);n.push(l);const u=eE({inputs:{x:l},backend:t,attrs:{shape:s}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),u}return _E(t,e,a)}const ME={kernelName:Nt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;let o=V(s,r.shape);const i=yi(o,r.shape.length);let c=r;const l=[];null!=i&&(c=hE({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=xi(o.length,c.shape.length)),gi("argMax",[o[0]],c.shape.length);const u=OE(n,c,o[0],"max");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};const LE={kernelName:Tt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s}=a;let o=V(s,r.shape);const i=yi(o,r.shape.length);let c=r;const l=[];null!=i&&(c=hE({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=xi(o.length,c.shape.length)),gi("argMin",[o[0]],c.shape.length);const u=OE(n,c,o[0],"min");return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}},zE=KC({opSnippet:pC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),PE={kernelName:St,backendName:"webgl",kernelFunc:zE},BE=KC({opSnippet:pC+"return log(x + sqrt(x * x + 1.0));"}),WE={kernelName:Ct,backendName:"webgl",kernelFunc:BE},VE=KC({opSnippet:pC+"\n  return atan(x);\n"}),UE={kernelName:Et,backendName:"webgl",kernelFunc:VE},GE=qC({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),HE={kernelName:Rt,backendName:"webgl",kernelFunc:GE},jE=KC({opSnippet:pC+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),KE={kernelName:At,backendName:"webgl",kernelFunc:jE};class qE{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),g="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class XE{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,o=t.strideDepth,i=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const b="avg"===e;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(I,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(I,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(I,"\n            }\n          }\n          setOutput(").concat(v,");\n        }\n      }\n    ")}}const YE={kernelName:Ft,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;jT(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;R(po(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=no(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))return MC({inputs:{x:r},backend:n});const u=new qE(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const QE={kernelName:_t,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=ao(r.shape,s,o,[1,1,1],i,c,l),h=new XE(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class JE{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=i-1-t.padInfo.top,u=c-1-t.padInfo.left,h=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ZE{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=u-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const $E={kernelName:Ot,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=ao(o.shape,i,c,[1,1,1],l,u),d=new ZE(h);return n.runWebGLProgram(d,[r],o.dtype)}};const tA={kernelName:Dt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s;jT([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=no(o.shape,i,c,1,l),h=new JE(u);return n.runWebGLProgram(h,[r],o.dtype)}};const eA={kernelName:Mt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{a:r,b:s}=e,{transposeA:o,transposeB:i}=a;return fE({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class nA{constructor(t,e,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Vo(t,e),Vo(t,n);let o="0.0";null!=a&&(Vo(t,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(Vo(t,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class aA{constructor(t,e,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Vo(t,e),Vo(t,n);let o="vec4(0.0)";null!=a&&(Vo(t,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(Vo(t,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const rA={kernelName:Ie,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r,mean:s,variance:o,offset:i,scale:c}=e;R(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),R(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),R(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=dt().getBool("WEBGL_PACK_NORMALIZATION")?new aA(r.shape,s.shape,o.shape,h,d,l):new nA(r.shape,s.shape,o.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class sA{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=NS(this.rank),n="uniform int start[".concat(this.rank,"];"),a=function(t){if(1===t)return"sourceLoc";if(t<=6)return oA.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let r;const s=t.map(((t,e)=>"sourceLoc.".concat(oA[e]," = start[").concat(e,"] + coords.").concat(oA[e],";")));r="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(s.join("\n"),"\n      "),this.userCode="\n      ".concat(n,"\n      void main() {\n        ").concat(r,"\n        setOutput(getSource(").concat(a,"));\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const oA=["x","y","z","w","u","v"];class iA{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=NS(this.rank),n=sC("coords",this.rank),a=sC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map(((t,e)=>"start[".concat(e,"]"))).join(),");"):t.map(((t,e)=>"".concat(a[e]," = ").concat(n[e]," + start[").concat(e,"];"))).join("\n");this.userCode="\n      uniform int start[".concat(this.rank,"];\n      void main() {\n        ").concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function cA(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,size:o}=a,[i,c]=Ms(r,s,o);if(ws(r,i,c),0===O(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const t=n.texData.get(r.dataId),e=QS(t.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,e)}const{isPacked:l}=n.texData.get(r.dataId),u=_s(r.shape,i,c);if(l||!u){const t=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iA(c):new sA(c),e=t.getCustomSetupFunc(i);return n.runWebGLProgram(t,[r],r.dtype,e)}return n.uploadToGPU(r.dataId),function(t,e,n,a){const r=a.texData.get(t.dataId),s=a.makeTensorInfo(n,t.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=t.dtype;let i=Os(e,$(t.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const lA={kernelName:On,backendName:"webgl",kernelFunc:cA},uA={kernelName:Lt,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,crops:o}=a;R(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((t,e)=>t*e)),c=Al(r.shape,s,i),l=Rl(c.length,s.length),u=Fl(r.shape,s,i),h=Dl(o,s.length),d=_l(u,o,s.length),p=[],f=eE({inputs:{x:r},backend:n,attrs:{shape:c}}),m=hE({inputs:{x:f},backend:n,attrs:{perm:l}}),g=eE({inputs:{x:m},backend:n,attrs:{shape:u}}),y=cA({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}};const hA={kernelName:zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=AS(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}},dA=qC({opSnippet:"return float(a != b);",dtype:"bool"}),pA={kernelName:on,backendName:"webgl",kernelFunc:dA};function fA(t){const{inputs:e,backend:n}=t,{input:a}=e;return MC({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const mA={kernelName:xn,backendName:"webgl",kernelFunc:fA},gA="return float(int(x));";const yA={kernelName:Pt,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return MC({inputs:{x:s},backend:a});const e=Ti(s.shape),n=t({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=zC({inputs:{real:n,imag:e},backend:a});return e.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const e=fA({inputs:{input:s},backend:a}),n=t({inputs:{x:e},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(e),n}if(!j(s.dtype,o)){const t=MC({inputs:{x:s},backend:a});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o)return function(t,e){const n=new dC(t.shape,gA),a=e.runWebGLProgram(n,[t],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const t=a.makeTensorInfo([],"bool",G("bool",1)),e=dA({inputs:{a:s,b:t},backend:a});return a.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},bA="return ceil(x);",xA=KC({opSnippet:bA,packedOpSnippet:bA,cpuKernelImpl:FS}),vA={kernelName:Bt,backendName:"webgl",kernelFunc:xA};class wA{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,a)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class kA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,a)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(a,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(a,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const IA={kernelName:Wt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{clipValueMin:s,clipValueMax:o}=a;let i;i=dt().getBool("WEBGL_PACK_CLIP")?new kA(r.shape):new wA(r.shape);const c=i.getCustomSetupFunc(s,o);return n.runWebGLProgram(i,[r],r.dtype,c)}};class NA{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function TA(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const SA={kernelName:Ut,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=n.texData.get(a.dataId),s=new NA(a.shape),o=[TA(a,r.complexTensorInfos.real),TA(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class CA{constructor(t){this.outputShape=[],this.outputShape=Tl(t,1),this.variableNames=t.map(((t,e)=>"T".concat(e)));const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<e.length;s++){const t=e[s-1];n.push("else if (yC < ".concat(e[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(t,"));"))}const a=e.length,r=e[e.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class EA{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Tl(t,e);const n=this.outputShape,a=n.length,r=NS(a),s=sC("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map(((t,e)=>"T".concat(e)));const i=new Array(t.length-1);i[0]=t[0][e];for(let f=1;f<i.length;f++)i[f]=i[f-1]+t[f][e];const c=o[e],l=o.slice(-2),u=o.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const t=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(AA(o,c,t),"),\n            vec2(").concat(AA(l,c,t),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(AA(o,c,p),"),\n          vec2(").concat(AA(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((t=>"int "+t)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function AA(t,e,n){const a=t.indexOf(e);return t.map(((t,e)=>e===a?"".concat(t," - ").concat(n):t)).join()}function RA(t){const{inputs:e,backend:n}=t,{input:a}=e;return MC({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const FA={kernelName:Re,backendName:"webgl",kernelFunc:RA};function DA(t,e,n){const a=t[0].dtype;if("complex64"===a){const a=t.map((t=>fA({inputs:{input:t},backend:n}))),r=t.map((t=>RA({inputs:{input:t},backend:n}))),s=DA(a,e,n),o=DA(r,e,n),i=zC({inputs:{real:s,imag:o},backend:n});return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(t);if("string"===a&&(r=!0),r){const r=t.map((t=>{const a=O(t.shape.slice(e));return eE({inputs:{x:t},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),o=Tl(r.map((t=>t.shape)),1),i=1===r[0].shape[0],c=DS(s,o,a,i),l=Tl(t.map((t=>t.shape)),e),u=n.makeTensorInfo(l,a,c);return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}if(t.length>dt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(t.length/2),r=DA(t.slice(0,a),e,n),s=DA(t.slice(a),e,n),o=DA([r,s],e,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}if(dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new EA(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,a)}const{tensors2D:s,outShape:o}=function(t,e,n){const a=Tl(t.map((t=>t.shape)),e),r=t.map((t=>eE({inputs:{x:t},attrs:{shape:[-1,O(t.shape.slice(e))]},backend:n})));return{tensors2D:r,outShape:a}}(t,e,n),i=new CA(s.map((t=>t.shape))),c=n.runWebGLProgram(i,s,a);s.forEach((t=>n.disposeIntermediateTensorInfo(t)));const l=eE({inputs:{x:c},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(c),l}function _A(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a,s=V(r,e[0].shape)[0],o=Tl(e.map((t=>t.shape)),s);if(0===O(o))return n.makeTensorInfo(o,e[0].dtype,[]);const i=e.filter((t=>O(t.shape)>0));if(1===i.length)return MC({inputs:{x:i[0]},backend:n});return Nl(i.map((t=>t.shape)),s),DA(i,s,n)}const OA={kernelName:Gt,backendName:"webgl",kernelFunc:_A};class MA{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,o=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class LA{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class zA{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:a,inChannels:r,strideWidth:s,strideHeight:o,padInfo:i,outWidth:c,dilationWidth:l,dilationHeight:u,dataFormat:h}=n,{left:d,top:p}=i,f=r*a,m=qT(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let v=0;v<=1;v++)for(let n=0;n<=1;n++)x+="\n          blockIndex = rc.y + ".concat(n,";\n          pos = rc.x + ").concat(v,";\n\n          if(blockIndex < ").concat(t[1]," && pos < ").concat(t[0],") {\n            offsetY = int(blockIndex / (").concat(c,")) * ").concat(o," - ").concat(p,";\n            d0 = offsetY + ").concat(u," * (pos / ").concat(f,");\n\n            if(d0 < ").concat(e[y]," && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(c,".) * ").concat(s,". - ").concat(d,".);\n              d1 = offsetX + ").concat(l," * (int(mod(float(pos), ").concat(f,".) / ").concat(r,".));\n\n              if(d1 < ").concat(e[b]," && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(r,".));\n\n                if (").concat(g,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*v+n,"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*v+n,"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(x,"\n\n        ").concat(m.output," = result;\n      }\n    ")}}function PA(t){let{x:e,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=t;const l=e.shape,u=r.texData.get(e.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1,g=!1;let y;const b=[],x=(1===d||1===p)&&h>pE,v=l[2]%2!==0&&!!u.isPacked;if(!x&&dt().getBool("WEBGL_LAZILY_UNPACK")&&dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&v){const t=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,t,a.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,R(PT(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=eE({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});b.push(p);const x=fE({a:h,b:p,backend:r,transposeA:m,transposeB:g,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),v=r.texData.get(x.dataId);R(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,v.shape=a.outShape,y=MC({inputs:{x:x},backend:r}),y.shape=a.outShape,b.push(x)}else{const t=eE({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],a.inChannels]}}),u=eE({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=fE({a:t,b:u,transposeA:m,transposeB:g,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});y=eE({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),b.push(t),b.push(u),b.push(h)}for(const w of b)r.disposeIntermediateTensorInfo(w);return y}function BA(t){let{x:e,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=t;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*h,y=p*d,b=[g,y],x=[],v=eE({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=eE({inputs:{x:n},backend:r,attrs:{shape:[1,g,O(n.shape)/g]}});x.push(v),x.push(w);const k=new zA(b,v.shape,a),I=r.runWebGLProgram(k,[v],"float32"),N=eE({inputs:{x:I},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const T=null!=s,S=null!=o,C="leakyrelu"===c,E=c?XC(c,!0):null,A=new YC(N.shape,w.shape,[1,y,a.outChannels],!0,!1,T,E,S,C),R=[N,w];if(s&&R.push(s),S&&R.push(o),C){const t=r.makeTensorInfo([],"float32",wa(i,"float32"));R.push(t),x.push(t)}const F=r.runWebGLProgram(A,R,"float32"),D=eE({inputs:{x:F},backend:r,attrs:{shape:m?[1,p,d,a.outChannels]:[1,a.outChannels,p,d]}});x.push(F);for(const _ of x)r.disposeIntermediateTensorInfo(_);return D}const WA={kernelName:Ht,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=fo(c),d=ro(r.shape,s.shape,o,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(dt().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])p=BA({x:r,filter:s,convInfo:d,backend:n});else{const t=new MA(d);p=n.runWebGLProgram(t,[r,s],"float32")}else p=PA({x:r,filter:s,convInfo:d,backend:n});const f=eE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class VA{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              if (").concat(s,") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class UA{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s="channelsLast"===t.dataFormat,o=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class GA{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,s=t.padInfo.top,o=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class HA{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,a=t.filterWidth,r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,l=a-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const jA={kernelName:jt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=fo(c),d=ro(r.shape,u,o,1,i,l,!1,h),p=new VA(d);return n.runWebGLProgram(p,[r,s],"float32")}};const KA={kernelName:Kt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=fo(l),d=ro(o,s.shape,i,1,c,u,!1,h),p=new UA(d);return n.runWebGLProgram(p,[r,s],"float32")}};const qA={kernelName:qt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=so(r.shape,s.shape,o,c,i),u=new LA(l);return n.runWebGLProgram(u,[r,s],"float32")}};const XA={kernelName:Xt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,pad:i,filterShape:c}=a,l=so(r.shape,c,o,1,i),u=new GA(l);return n.runWebGLProgram(u,[r,s],"float32")}};const YA={kernelName:Yt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{pad:o,strides:i,inputShape:c}=a,l=so(c,s.shape,i,1,o),u=new HA(l);return n.runWebGLProgram(u,[r,s],"float32")}},QA=KC({opSnippet:jC+"\n  return cos(x);\n"}),JA={kernelName:Qt,backendName:"webgl",kernelFunc:QA},ZA=KC({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$A={kernelName:Jt,backendName:"webgl",kernelFunc:ZA};class tR{constructor(t,e,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=t,[l]=e,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const eR={kernelName:$t,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{image:r,boxes:s,boxInd:o}=e,{cropSize:i,method:c,extrapolationValue:l}=a,u=new tR(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};class nR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const a=t.length,r=e?"0.0":"getX(".concat(aR(a,"coords"),")"),s=t[t.length-1];let o="",i="";e?(o=n?"end != ".concat(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?"end + pow2 < ".concat(s):"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        ".concat(NS(a)," coords = getOutputCoords();\n        int end = ").concat(rR(a,"coords"),";\n        float val = ").concat(r,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(o,") {\n          int idx = ").concat(i,";\n          ").concat(rR(a,"coords")," = idx;\n          val += getX(").concat(aR(a,"coords"),");\n        }\n        setOutput(val);\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function aR(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}function rR(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}const sR={kernelName:Zt,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,exclusive:o,reverse:i}=a,c=r.shape.length,l=yi([s],c);let u=r;null!=l&&(u=hE({inputs:{x:r},backend:n,attrs:{perm:l}}));const h=xi(1,c)[0];if(h!==c-1)throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(r.shape.length-1," ")+"but got axis=".concat(s));const d=u.shape[h];let p=MC({inputs:{x:u},backend:n});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const t=new nR(u.shape,!1,i),e=t.getCustomSetupFunc(f),a=p;p=n.runWebGLProgram(t,[p],p.dtype,e),n.disposeIntermediateTensorInfo(a)}if(o){const t=new nR(u.shape,o,i),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=hE({inputs:{x:p},backend:n,attrs:{perm:bi(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),t}return p}};const oR={kernelName:te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,weights:s}=e,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const t=n.readSync(r.dataId),e=n.readSync(s.dataId),a=AS(t,e,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const t=n.bufferSync(r),e=n.bufferSync(s),a=RS(t,e,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class iR{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const cR={kernelName:ee,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockSize:s,dataFormat:o}=a;R(s>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s)));const i=r.shape[0],c="NHWC"===o?r.shape[1]:r.shape[2],l="NHWC"===o?r.shape[2]:r.shape[3],u="NHWC"===o?r.shape[3]:r.shape[1],h=c*s,d=l*s,p=u/(s*s),f=new iR("NHWC"===o?[i,h,d,p]:[i,p,h,d],s,o);return n.runWebGLProgram(f,[r],r.dtype)}};class lR{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,o=t.inWidth,i=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let g="",y="";n&&(g=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),y="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(g,"\n\n      const ivec2 strides = ivec2(").concat(l,", ").concat(u,");\n      const ivec2 pads = ivec2(").concat(i,", ").concat(c,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(m,";\n        int q = d2 - d1 * ").concat(m,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(p,"; wR++) {\n          int xR = xRCorner + wR * ").concat(h,";\n\n          if (xR < 0 || xR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(f,"; wC++) {\n            int xC = xCCorner + wC * ").concat(d,";\n\n            if (xC < 0 || xC >= ").concat(o,") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(b,"\n        ").concat(y,"\n        setOutput(result);\n      }\n    ")}}class uR{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.outChannels/t.inChannels,o=t.inHeight,i=t.inWidth,c=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,d=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,g=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let w=0;w<m;w++)y+="\n          vec4 xTexelC".concat(2*w,";\n          vec4 xC").concat(w,";");for(let w=0;w<f;w++){for(let t=0;t<m;t++)y+="\n          xTexelC".concat(2*t," = vec4(0.0);\n          xC").concat(t," = vec4(0.0);");y+="\n        xR = xRCorner + ".concat(w*d,";\n        if (xR >=0 && xR < ").concat(o,") {\n      ");for(let t=0;t<g/2+1;t++){const e=2*t;if(y+="\n          xC = xCCorner + ".concat(e*p,";\n          "),1===h){if(e<m&&(l%2===1?(y+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ".concat(i,") {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ").concat(i,") {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                }\n              "),y+=1===p&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ".concat(i,") {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ").concat(i,") {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC").concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):y+="\n                if (xC >= 0 && xC < ".concat(i,") {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ").concat(i,") {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<m)){const t=l%2===0?A(p):p;p%2===0&&l%2===1||p%2!==0&&l%2!==1?(y+="\n                  xCOffset = xC + ".concat(l%2," + ").concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelC").concat(e+2," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ").concat(i,") {\n                      xTexelC").concat(e+2,".zw = vec2(0.0);\n                    }\n                  }\n                  "),p>1&&(y+="\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ".concat(i,") {\n                      xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                    }\n                    ")),y+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+2,".xy);\n                  ")):y+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < ").concat(i,") {\n                      xTexelC").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ").concat(i,") {\n                        xTexelC").concat(e+2,".zw = vec2(0.0);\n                      }\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+2,";\n                    ")}}else e<m&&(l%2===1?(y+="\n                xCOffset = xC + 1 - ".concat(h,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ").concat(i,") {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(i,") {\n                  xTexelC").concat(e+2," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ").concat(i,") {\n                    xTexelC").concat(e+2,".zw = vec2(0.0);\n                  }\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+2,".zw);\n              "),e+1<m&&(y+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ".concat(h,";\n                  if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC").concat(e+1," = vec4(xTexelC").concat(e+2,".xy, final.xy);\n                "))):(y+="\n                if(xC >= 0 && xC < ".concat(i,") {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ").concat(i,") {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + ").concat(h,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelC").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ").concat(i,") {\n                    xTexelC").concat(e+2,".zw = vec2(0.);\n                  }\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+2,".xy);\n              "),e+1<m&&(y+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+2,".zw);\n                "))));e<m&&(y+="\n            wTexel = getW(".concat(w,", ").concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<m&&(y+="\n              wTexel = getW(".concat(w,", ").concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}y+="\n        }\n      "}let b="",x="";n&&(b=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(b,"\n\n      const ivec2 strides = ivec2(").concat(u,", ").concat(h,");\n      const ivec2 pads = ivec2(").concat(c,", ").concat(l,");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(y,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(v,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}const hR={kernelName:ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),R(po(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const h=ro(r.shape,s.shape,o,u,i,l,!0);let d;return d=dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new uR(h):new lR(h),n.runWebGLProgram(d,[r,s],"float32")}};class dR{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class pR{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,a=t.strideHeight,r=t.strideWidth,s=e-1-t.padInfo.top,o=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const fR={kernelName:ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,dy:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=ro(r.shape,u,o,i,c,l,!0),d=new dR(h);return n.runWebGLProgram(d,[r,s],"float32")}};const mR={kernelName:re,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,filter:s}=e,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=ro(u,s.shape,o,i,c,l,!0),d=new pR(h);return n.runWebGLProgram(d,[r,s],"float32")}};class gR{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const yR={kernelName:se,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e,r=[...a.shape,...a.shape],s=O(a.shape),o=eE({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new gR(s),c=n.runWebGLProgram(i,[o],o.dtype),l=eE({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class bR{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=t,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const xR={kernelName:oe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s}=e,{strides:o,pad:i,dilations:c}=a,l=eo(r.shape,s.shape,o,i,"NHWC",c);let u;const h=new bR(l);u=n.runWebGLProgram(h,[r,s],"float32");const d=eE({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const vR={kernelName:ue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{equation:r}=a,s=e,{allDims:o,summedDims:i,idDims:c}=ou(r,s.length);cu(o.length,c,s);const{path:l,steps:u}=lu(i,c),h=u.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const t of u[m]){const{permutationIndices:e,expandDims:a}=iu(p,c[t]);let r;uu(e)?r=s[t]:(r=hE({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(r));const o=r.shape.slice();for(let t=0;t<a.length;++t)o.splice(a[t],0,1);M(r.shape,o)||(r=eE({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===d?d=r:(d=$C({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=lE({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},wR=KC({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),kR={kernelName:he,backendName:"webgl",kernelFunc:wR},IR={kernelName:de,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:a,y:r}=e,s=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new OC("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new DC("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},NR=qC({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),TR={kernelName:fe,backendName:"webgl",kernelFunc:NR},SR=KC({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Wl,";\n  float a1 = ").concat(Vl,";\n  float a2 = ").concat(Ul,";\n  float a3 = ").concat(Gl,";\n  float a4 = ").concat(Hl,";\n  float a5 = ").concat(jl,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),CR={kernelName:pe,backendName:"webgl",kernelFunc:SR},ER="return exp(x);",AR=KC({opSnippet:ER,packedOpSnippet:ER,cpuKernelImpl:_S}),RR={kernelName:me,backendName:"webgl",kernelFunc:AR};function FR(t){const{inputs:e,attrs:n,backend:a}=t,{dim:r}=n,{input:s}=e,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(R(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),eE({inputs:{x:s},backend:a,attrs:{shape:i}})}const DR={kernelName:ge,backendName:"webgl",kernelFunc:FR},_R="return exp(x) - 1.0;",OR=KC({opSnippet:_R,packedOpSnippet:_R,cpuKernelImpl:OS}),MR={kernelName:ye,backendName:"webgl",kernelFunc:OR};class LR{constructor(t,e,n){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function zR(t,e,n){const a=n.texData.get(t.dataId),r=O(t.shape),s=t.shape[t.shape.length-1],o=eE({inputs:{x:t},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new LR("real",i,e),l=new LR("imag",i,e),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=zC({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=eE({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const PR={kernelName:be,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return zR(a,!1,n)}};class BR{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function WR(t){const{backend:e,attrs:n}=t,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||Q(r),"string"===s){const t=H(s,O(a));return t.fill(r),e.makeTensorInfo(a,s,t)}{const t=new BR(a,r),n=t.getCustomSetupFunc(r);return e.runWebGLProgram(t,[],s,n)}}const VR={kernelName:xe,backendName:"webgl",kernelFunc:WR};class UR{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const GR={kernelName:ve,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:a}=e,r=n,s=new UR(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},HR="return floor(x);",jR=KC({opSnippet:HR,packedOpSnippet:HR,cpuKernelImpl:MS}),KR={kernelName:we,backendName:"webgl",kernelFunc:jR},qR=qC({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),XR={kernelName:ke,backendName:"webgl",kernelFunc:qR};class YR{constructor(t){this.variableNames=["A"];const e=qT(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class QR{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=qT(),[n,a]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const JR={kernelName:ca,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t;let{pixels:r}=e;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,s];(i||o)&&(null==ZR&&(ZR=document.createElement("canvas").getContext("2d")),ZR.canvas.width=c,ZR.canvas.height=l,ZR.drawImage(r,0,0,c,l),r=ZR.canvas);const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=mT.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=dt().getBool("WEBGL_PACK")?new QR(h):new YR(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let ZR;const $R={kernelName:ha,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=fo(u),g=ro(r.shape,s.shape,c,h,l,d,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(dt().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=BA({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const t=null!=o,e=null!=i,a="leakyrelu"===p,c=p?XC(p,!1):null,l=new MA(g,t,c,e,a),u=[r,s];if(o&&u.push(o),i&&u.push(i),a){const t=n.makeTensorInfo([],"float32",wa(f,"float32"));u.push(t),b.push(t)}y=n.runWebGLProgram(l,u,"float32")}else y=PA({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const x=eE({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}};const tF={kernelName:da,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,filter:s,bias:o,preluActivationWeights:i}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),R(po(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=ro(r.shape,s.shape,c,m,l,h,!0),y=dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?XC(d,y):null,x=[r,s],v=null!=o,w=null!=i,k="leakyrelu"===d;if(v&&x.push(o),w&&x.push(i),k){const t=n.makeTensorInfo([],"float32",wa(p,"float32"));x.push(t),f.push(t)}let I;I=y?new uR(g,v,b,w,k):new lR(g,v,b,w,k);const N=n.runWebGLProgram(I,x,"float32");return f.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class eF{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const a=NS(e.length),r=NS(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        ".concat(a," strides = ").concat(a,"(").concat(this.strides,");\n         void main() {\n          ").concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim,"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(s,";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")}}const nF={kernelName:Te,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:a,indices:r}=e,s=r.shape,o=s[s.length-1],[i,c,l,u]=Ol(a,r),h=eE({inputs:{x:r},backend:n,attrs:{shape:[c,o]}}),d=eE({inputs:{x:a},backend:n,attrs:{shape:[O(a.shape)/l,l]}}),p=new eF(o,u,[c,l]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=eE({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class aF{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=NS(this.rank),a=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<t.length;r++)2===r?a.push("int(getIndices(resRC.x, resRC.z))"):a.push("".concat(n[r]));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}const rF={kernelName:Ne,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,indices:s}=e,{axis:o,batchDims:i}=a,c=mu(r,s,V(o,r.shape)[0],i),l=O(s.shape),u=[],h=eE({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=eE({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});u.push(h),u.push(d);const p=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const t=n.bufferSync(d),e=n.bufferSync(h),a=LS(e,t,p);return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c.outputShape,a.dtype,a.values)}const f=new aF(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);u.push(m);const g=eE({inputs:{x:m},backend:n,attrs:{shape:c.outputShape}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}},sF=qC({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:zS,dtype:"bool"}),oF={kernelName:Se,backendName:"webgl",kernelFunc:sF},iF=qC({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),cF={kernelName:Ce,backendName:"webgl",kernelFunc:iF};const lF={kernelName:Ae,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:a}=e;return zR(a,!0,n)}},uF=KC({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),hF={kernelName:Fe,backendName:"webgl",kernelFunc:uF},dF=KC({opSnippet:"return float(isinf(x));",dtype:"bool"}),pF={kernelName:De,backendName:"webgl",kernelFunc:dF},fF=KC({opSnippet:"return float(isnan(x));",dtype:"bool"}),mF={kernelName:_e,backendName:"webgl",kernelFunc:fF},gF=qC({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:PS,dtype:"bool"}),yF={kernelName:Me,backendName:"webgl",kernelFunc:gF},bF=qC({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),xF={kernelName:Le,backendName:"webgl",kernelFunc:bF};const vF={kernelName:ze,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:a,stop:r,num:s}=n,o=BS(a,r,s);return e.makeTensorInfo([o.length],"float32",o)}},wF=KC({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:WS}),kF={kernelName:Pe,backendName:"webgl",kernelFunc:wF},IF=KC({opSnippet:"return log(1.0 + x);"}),NF={kernelName:Be,backendName:"webgl",kernelFunc:IF},TF=qC({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),SF={kernelName:We,backendName:"webgl",kernelFunc:TF},CF=KC({opSnippet:"return float(!(x >= 1.0));"}),EF={kernelName:Ve,backendName:"webgl",kernelFunc:CF},AF=qC({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),RF={kernelName:Ue,backendName:"webgl",kernelFunc:AF};class FF{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class DF{constructor(t,e,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,o=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const _F={kernelName:Ge,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=dt().getBool("WEBGL_PACK_NORMALIZATION")?new DF(r.shape,s,o,i,c):new FF(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class OF{constructor(t,e,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const MF={kernelName:He,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r,y:s,dy:o}=e,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new OF(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,s,o],r.dtype)}};function LF(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=V(s,r.shape);let l=c;const u=yi(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const t=n.texData.get(p.dataId).values,e=new Array(i);for(let n=0;n<e.length;n++)e[n]=r.shape[u[n]];const a=nC(t,r.shape,r.dtype,u,e);p=n.makeTensorInfo(e,r.dtype);n.texData.get(p.dataId).values=a}else p=cE(r,u,n);l=xi(l.length,i)}gi("max",l,i);const[f,m]=fi(p.shape,l);let g,y=f;if(o&&(y=mi(f,c)),d){const t=n.texData.get(p.dataId).values,e=VS(t,O(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,a){const r=O(e),s=eE({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:a}),o=sE(s,t.dtype,"max",a),i=eE({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const zF={kernelName:je,backendName:"webgl",kernelFunc:LF},PF=qC({opSnippet:FC+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+_C+"\n  return result;\n",cpuKernelImpl:US}),BF={kernelName:Ke,backendName:"webgl",kernelFunc:PF};const WF={kernelName:qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e;jT(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;R(po(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=no(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&M(l.inShape,l.outShape))return MC({inputs:{x:r},backend:n});const u=new qE(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const VF={kernelName:Ye,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=ao(r.shape,s,o,[1,1,1],i,l,c),h=new XE(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class UF{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,s=t.effectiveFilterWidth,o=r-1-t.padInfo.top,i=s-1-t.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class GF{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,s=t.dilationHeight,o=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=i-1-t.padInfo.front,h=c-1-t.padInfo.top,d=l-1-t.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const HF={kernelName:Qe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s}=e,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=ao(o.shape,i,c,[1,1,1],l,u),d=new XE(h,"max",!0),p=n.runWebGLProgram(d,[o],o.dtype),f=new GF(h),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const jF={kernelName:Xe,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{dy:r,input:s,output:o}=e,i=s;jT([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=no(i.shape,c,l,1,u,h),p=new qE(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new UF(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const KF={kernelName:Je,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;R(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];R(po(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const h=no(r.shape,s,o,u,i),[d,p]=function(t,e,n,a){let r=new qE(n,"max",!1);const s=a.runWebGLProgram(r,[t],"float32");return r=new qE(n,"max",!0,!0,e),[s,a.runWebGLProgram(r,[t],"float32")]}(r,c,h,l);return[d,p]}};const qF={kernelName:Ze,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=V(o,r.shape);let u=l;const h=yi(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const t=i.texData.get(m.dataId).values,e=new Array(c);for(let a=0;a<e.length;a++)e[a]=r.shape[h[a]];const n=nC(t,r.shape,r.dtype,h,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=cE(r,h,i);f.push(m),u=xi(u.length,c)}gi("sum",u,c);const[g,y]=fi(m.shape,u);let b=g;s&&(b=mi(g,l));const x=function(t,e,n,a){const r=O(e),s=eE({inputs:{x:t},attrs:{shape:[O(t.shape)/r,r]},backend:a}),o=sE(s,"float32","mean",a),i=eE({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const XF={kernelName:$e,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=V(s,r.shape);let l=c;const u=yi(l,i);let h=r;null!=u&&(h=hE({inputs:{x:r},backend:n,attrs:{perm:u}}),l=xi(l.length,r.shape.length)),gi("min",l,i);const[d,p]=fi(h.shape,l),f=eE({inputs:{x:h},backend:n,attrs:{shape:[-1,O(p)]}}),m=sE(f,f.dtype,"min",n);let g;if(o){g=eE({inputs:{x:m},backend:n,attrs:{shape:mi(d,c)}})}else g=eE({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},YF=qC({opSnippet:FC+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+_C+"\n  return result;\n",cpuKernelImpl:GS}),QF={kernelName:tn,backendName:"webgl",kernelFunc:YF};class JF{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=NS(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class ZF{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=NS(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=sC("rc",a),c=sC("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const t="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const t="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const $F={kernelName:en,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:a}=t;const{x:r}=e,{paddings:s,mode:o}=a,i=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZF(r.shape,s,o):new JF(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},tD=qC({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+_C+"\n  return result;\n"}),eD={kernelName:nn,backendName:"webgl",kernelFunc:tD};class nD{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const aD=qC({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rD={kernelName:le,backendName:"webgl",kernelFunc:aD},sD="return a - b;",oD=qC({opSnippet:sD,packedOpSnippet:sD,supportsComplex:!0,cpuKernelImpl:$S}),iD={kernelName:Qn,backendName:"webgl",kernelFunc:oD};function cD(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{dim:s}=a,o=V([s],r.shape),i=LF({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=mi(i.shape,o),l=eE({inputs:{x:i},backend:n,attrs:{shape:c}}),u=oD({inputs:{a:r,b:l},backend:n}),h=AR({inputs:{x:u},backend:n}),d=lE({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=eE({inputs:{x:d},backend:n,attrs:{shape:c}}),f=aD({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lD={kernelName:Hn,backendName:"webgl",kernelFunc:cD};const uD={kernelName:an,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{logits:r}=e,{numSamples:s,seed:o,normalized:i}=a,c=i?r:cD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new nD(l,u,s),d=h.getCustomSetupFunc(o),p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},hD="return -x;";const dD={kernelName:sn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:a}=e;if(n.shouldExecuteOnCPU([a])){const t=n.texData.get(a.dataId),[e,r]=jS(t.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,e)}let r;return r=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new SC(a.shape,hD):new dC(a.shape,hD),n.runWebGLProgram(r,[a],a.dtype)}},pD=Lc;const fD={kernelName:cn,backendName:"webgl",kernelFunc:function(t){Kl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:h}=pD(l,u,o,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},mD=zc;const gD={kernelName:ln,backendName:"webgl",kernelFunc:function(t){Kl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:p}=mD(u,h,o,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},yD=Pc;const bD={kernelName:un,backendName:"webgl",kernelFunc:function(t){Kl("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:a}=t,{boxes:r,scores:s}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(s.dataId),d=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=yD(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class xD{constructor(t,e,n,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const vD={kernelName:dn,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{indices:r}=e,{depth:s,onValue:o,offValue:i}=a,c=O(r.shape),l=new xD(c,s,o,i),u=eE({inputs:{x:r},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(l,[u],r.dtype);n.disposeIntermediateTensorInfo(u);const d=eE({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function wD(t){const{inputs:e,backend:n}=t,{x:a}=e;if("complex64"===a.dtype){const t=fA({inputs:{input:a},backend:n}),e=wD({inputs:{x:t},backend:n}),r=RA({inputs:{input:a},backend:n}),s=wD({inputs:{x:r},backend:n}),o=zC({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return WR({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const kD={kernelName:oa,backendName:"webgl",kernelFunc:wD};const ID={kernelName:hn,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:a}=e,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=fA({inputs:{input:r},backend:a}),n=t({inputs:{x:e},backend:a}),s=RA({inputs:{input:r},backend:a}),o=wD({inputs:{x:s},backend:a}),i=zC({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return WR({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const ND={kernelName:pn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{axis:r}=a;if(1===e.length)return FR({inputs:{input:e[0]},backend:n,attrs:{dim:r}});const s=e[0].shape,o=e[0].dtype;e.forEach((t=>{F(s,t.shape,"All tensors passed to stack must have matching shapes"),R(o===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=_A({inputs:e.map((t=>{const e=FR({inputs:{input:t},backend:n,attrs:{dim:r}});return i.push(e),e})),backend:n,attrs:{axis:r}});return i.forEach((t=>n.disposeIntermediateTensorInfo(t))),c}};class TD{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=NS(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n      uniform float value;\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class SD{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const a=t.length,r=NS(a),s=e.map((t=>t[0])).join(","),o=e.map(((e,n)=>e[0]+t[n])).join(","),i=sC("rc",a),c=sC("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n      uniform float value;\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const CD=t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{paddings:s,constantValue:o}=a,i=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SD(r.shape,s,o):new TD(r.shape,s,o),c=i.getCustomSetupFunc(o);return n.runWebGLProgram(i,[r],r.dtype,c)},ED={kernelName:fn,backendName:"webgl",kernelFunc:CD},AD=qC({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+_C+"\n  return result;\n"}),RD={kernelName:mn,backendName:"webgl",kernelFunc:AD};const FD={kernelName:yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=V(s,r.shape);let u=l;const h=yi(u,i);let d,p=r;if(null!=h&&(p=hE({inputs:{x:r},backend:n,attrs:{perm:h}}),u=xi(u.length,i),c.push(p)),gi("prod",u,i),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:a,outDtype:r}=KS(p.shape,p.dtype,t,u);d=n.makeTensorInfo(a,r,e)}else{const[t,e]=fi(p.shape,u),a=O(e),s=eE({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=sE(s,Za(r.dtype),"prod",n);d=eE({inputs:{x:o},backend:n,attrs:{shape:t}}),c.push(s),c.push(o)}if(o){c.push(d);const t=mi(d.shape,l);d=eE({inputs:{x:d},backend:n,attrs:{shape:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},DD=t=>{const{backend:e,attrs:n}=t,{start:a,stop:r,step:s,dtype:o}=n,i=qS(a,r,s,o);return e.makeTensorInfo([i.length],o,i)},_D={kernelName:bn,backendName:"webgl",kernelFunc:DD},OD=KC({opSnippet:"return 1.0 / x;"}),MD={kernelName:vn,backendName:"webgl",kernelFunc:OD},LD=KC({opSnippet:pC+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zD={kernelName:wn,backendName:"webgl",kernelFunc:LD},PD=KC({opSnippet:pC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),BD={kernelName:Cn,backendName:"webgl",kernelFunc:PD};class WD{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class VD{constructor(t,e,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const UD={kernelName:Tn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new VD(r.shape,c,l,s,o):new WD(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class GD{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const HD={kernelName:Sn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new GD(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class jD{constructor(t,e,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=t;this.outputShape=[s,e,n,c];const l=[a&&e>1?o-1:o,a&&n>1?i-1:i],u=[a&&e>1?e-1:e,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}const KD={kernelName:In,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r}=e,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=new jD(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class qD{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,s,o]=t,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const XD={kernelName:Nn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{images:r,dy:s}=e,{alignCorners:o}=a,i=new qD(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class YD{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const a=t.map(((n,a)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=NS(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class QD{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const a=sC("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=NS(n);function i(n){const a=t.map(((a,r)=>function(n,a){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const JD={kernelName:En,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{dims:s}=a,o=r.shape.length,i=V(s,r.shape);if(0===o)return MC({inputs:{x:r},backend:n});const c=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QD(r.shape,i):new YD(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class ZD{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],a=t[2];this.outputShape=t;let r="";r="number"===typeof e?"float outputValue = ".concat(e.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(e.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}getCustomSetupFunc(t,e,n,a){return(r,s)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(s,"params")),r.gl.uniform4f(this.paramsLoc,t,e,n,a)}}}const $D={kernelName:la,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:a}=t;const{image:r}=e,{radians:s,fillValue:o,center:i}=n,c=a,l=new ZD(r.shape,o),[u,h]=El(i,r.shape[1],r.shape[2]),d=l.getCustomSetupFunc(u,h,Math.sin(s),Math.cos(s));return c.runWebGLProgram(l,[r],r.dtype,d)}},t_=KC({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),e_={kernelName:An,backendName:"webgl",kernelFunc:t_},n_=KC({opSnippet:"return inversesqrt(x);",cpuKernelImpl:XS}),a_={kernelName:Rn,backendName:"webgl",kernelFunc:n_};class r_{constructor(t,e,n,a,r,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=NS(r.length),i=NS(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l="getIndices(".concat(c,")");let u="";1===a?u="i":2===a&&(u="i, coords[1]");const h="getUpdates(".concat(u,")"),d=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(o," strides = ").concat(o,"(").concat(r,");\n\n        void main() {\n          ").concat(i," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(l,");\n              flattenedIndex += index * ").concat(d,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")}}const s_={kernelName:Fn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{indices:r,updates:s}=e,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=zl(0,r,o),d=[h/l,l];if(0===h)return n.makeTensorInfo(o,r.dtype);const p=eE({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=eE({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new r_(c,i,p.shape.length,f.shape.length,u,d),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=eE({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class o_{constructor(t,e,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<e.length;a++)o.push("".concat(n[a])),a<t&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=NS(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const i_={kernelName:Dn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:a,t:r,e:s}=e,o=new o_(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],Ja(r.dtype,s.dtype))}},c_=KC({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Pl,";\n  float scale = ").concat(Bl,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),l_={kernelName:_n,backendName:"webgl",kernelFunc:c_},u_=KC({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),h_={kernelName:Pn,backendName:"webgl",kernelFunc:u_},d_=KC({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),p_={kernelName:zn,backendName:"webgl",kernelFunc:d_},f_=KC({opSnippet:jC+"\n  return sin(x);\n"}),m_={kernelName:Mn,backendName:"webgl",kernelFunc:f_},g_=KC({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),y_={kernelName:Ln,backendName:"webgl",kernelFunc:g_},b_=KC({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),x_={kernelName:Bn,backendName:"webgl",kernelFunc:b_},v_={kernelName:Un,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{blockShape:s,paddings:o}=a;R(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((t,e)=>t*e)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=CD({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=Al(u.shape,s,i,!1),d=Rl(h.length,s.length,!1),p=Fl(u.shape,s,i,!1),f=eE({inputs:{x:u},backend:n,attrs:{shape:h}}),m=hE({inputs:{x:f},backend:n,attrs:{perm:d}}),g=eE({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}};const w_={kernelName:jn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:a,inputShape:r,newShape:s}=e;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,h]=JS(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};const k_={kernelName:Kn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{sparseIndices:r,sparseValues:s,defaultValue:o}=e,{outputShape:i}=a,{sliceRank:c,numUpdates:l,strides:u,outputSize:h}=zl(0,r,i),d=new r_(l,c,r.shape.length,s.shape.length,u,[h,1],!1),p=n.runWebGLProgram(d,[s,r,o],s.dtype),f=eE({inputs:{x:p},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),f}};const I_={kernelName:Gn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{numOrSizeSplits:s,axis:o}=a,i=V(o,r.shape)[0],c=du(r,s,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((t=>{const e=[...h];e[i]=t;const a=cA({inputs:{x:r},backend:n,attrs:{begin:u,size:e}});return u[i]+=t,a}))}},N_=KC({opSnippet:"return sqrt(x);"}),T_={kernelName:Wn,backendName:"webgl",kernelFunc:N_},S_={kernelName:Xn,backendName:"webgl",kernelFunc:KC({opSnippet:"return x * x;"})},C_="return (a - b) * (a - b);",E_=qC({opSnippet:C_,packedOpSnippet:C_}),A_={kernelName:qn,backendName:"webgl",kernelFunc:E_};const R_={kernelName:ia,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:a}=t;const{x:r}=e,s=pC+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new dC(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class F_{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=NS(n.length),s=NS(n.length);let o="";if(1===a)o="coords * strides + begin";else{let t=0;o=n.map(((e,a)=>(t++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(t-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(t,");\n      ").concat(r," strides = ").concat(r,"(").concat(e,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const D_={kernelName:Yn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=Ls(r.shape,s,o,i,c,l,u,h,d),x=eE({inputs:{x:r},backend:n,attrs:{shape:y}});let v;if(p){const t=cA({inputs:{x:x},backend:n,attrs:{begin:f,size:g}});v=eE({inputs:{x:t},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(t)}else if(b.some((t=>0===t)))v=n.makeTensorInfo(b,r.dtype,[]);else{if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=ss(x.shape,x.dtype,t),a=ZS(b,e,m,f);v=n.makeTensorInfo(b,x.dtype,a.values)}else{const t=new F_(f,m,b);v=n.runWebGLProgram(t,[x],x.dtype)}}const w=eE({inputs:{x:v},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},__=KC({opSnippet:"return tan(x);"}),O_={kernelName:Jn,backendName:"webgl",kernelFunc:__},M_=KC({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),L_={kernelName:Zn,backendName:"webgl",kernelFunc:M_};class z_{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const a=NS(this.rank),r=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<t.length;r++)a.push("imod(".concat(n[r],", ").concat(t[r],")"));return a.join()}(t);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function P_(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const t=n.readSync(r.dataId).map((t=>Sa(t))),e=ss(r.shape,r.dtype,t),a=tC(e,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const o=new z_(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const B_={kernelName:$n,backendName:"webgl",kernelFunc:P_};const W_={kernelName:ta,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r}=e,{k:s,sorted:o}=a,i=n.readSync(r.dataId),[c,l]=eC(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};class V_{constructor(t,e,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(t," && 0 <= coordX && coordX < ").concat(e,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(e,"));\n                float mapY = mapCoord(inY, float(").concat(t,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const U_={kernelName:ea,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{image:r,transforms:s}=e,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new V_(h,d,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const G_={kernelName:aa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:a}=t,{axis:r}=n,{x:s}=e;jT(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=aC(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const H_={kernelName:ra,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{value:r}=e;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const h=[],d=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[s]=m;const t=cA({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),e=eE({inputs:{x:t},backend:n,attrs:{shape:l}});f[m]=e,h.push(t)}return h.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class j_{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,a=t.batchSize,r=t.inSize,s=t.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const K_={kernelName:sa,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:a}=t,{x:r,segmentIds:s}=e,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=yi([l],i);let h=r;null!=u&&(h=hE({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=xi(1,i)[0]);const d=fu(h.shape,l,o),p=O([h.shape[l]]),f=eE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=Za(r.dtype),g=(t,e,a,r,s)=>{const o=t.shape[0],i=t.shape[1],l=pu(i,s),u=new j_({windowSize:l,inSize:i,batchSize:o,numSegments:s},e),h=n.compileAndRun(u,[t,a],r);if(c.push(h),h.shape[1]===s)return h;const d=DD({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=P_({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return g(h,e,p,r,s)},y=eE({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let b=y;if(null!=u){c.push(y);const t=bi(u);b=hE({inputs:{x:b},backend:n,attrs:{perm:t}})}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),b}},q_=[_F,MF,mE,yE,xE,wE,NE,CE,EE,AE,ME,LE,PE,WE,HE,UE,KE,QE,YE,$E,tA,eA,rA,uA,hA,yA,vA,IA,SA,PC,OA,jA,KA,WA,XA,YA,qA,JA,$A,eR,sR,oR,cR,fR,mR,hR,yR,xR,vR,kR,IR,TR,CR,RR,DR,MR,PR,VR,GR,KR,XR,JR,$R,tF,nF,rF,oF,cF,LC,lF,FA,hF,pF,mF,VC,yF,xF,vF,NF,kF,SF,EF,RF,zF,VF,WF,HF,jF,KF,BF,qF,XF,QF,$F,eD,uD,tE,dD,fD,gD,bD,pA,vD,ID,ND,ED,RD,HC,FD,_D,mA,rD,MD,BD,zD,nE,UD,HD,KD,XD,JD,$D,e_,a_,s_,i_,l_,h_,p_,m_,y_,lA,lD,x_,v_,w_,k_,I_,T_,S_,A_,R_,D_,iD,uE,O_,L_,B_,W_,U_,dE,G_,H_,K_,kD];for(const n of q_)ba(n);var X_,Y_;!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(X_||(X_={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(Y_||(Y_={}));const Q_={};function J_(t){return Q_[t]}function Z_(t,e,n,a,r){const s=e.inputParams[t];if(s&&void 0!==s.inputIndexStart){const t=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?t+1:s.inputIndexEnd;if("tensor"===s.type)return $_(e.inputNames[s.inputIndexStart],n,a,r);if("tensors"===s.type){return e.inputNames.slice(t,o).map((t=>$_(t,n,a,r)))}const i=$_(e.inputNames.slice(t)[0],n,a,r),c=i.dataSync();return"number"===s.type?c[0]:et(i.shape,c)}const o=e.attrParams[t];return o&&o.value}function $_(t,e,n,a){const[r,s]=nO(t);if(null!=a){const t=a.getHashTableHandleByName(r);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[eO(r,t)]));return void 0!==o?e[eO(r,o)][s]:void 0}function tO(t,e){const[n,a]=nO(t);return[eO(n,e&&e.currentContextId),a]}function eO(t,e){return e?"".concat(t,"-").concat(e):t}function nO(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function aO(t,e,n){let a=Z_("pad",t,e,n);if("explicit"===a){a=Z_("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=a[2*t],r[t][1]=a[2*t+1];return r}return a}function rO(t){return t.kept?t:is(t)}const sO=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],oO=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],iO=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],cO=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],lO=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],uO=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],hO=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],dO=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],pO=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],fO=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],mO=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],gO=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yO=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],bO=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],xO=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],vO=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],wO=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class kO{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[s,o,i,c,l,u,h,m,f,d,g,y,b,x,v,w,p].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,a=[],r=[],s=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?a.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t)),{});let i=[];const c=[];let l={},u={};null!=e&&(l=this.mapSignatureEntries(e.inputs),u=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach((t=>{const[n]=tO(t);e.inputs.push(o[n]),o[n].children.push(e)}))})),0===Object.keys(u).length?h.forEach((t=>{const e=o[t];0===e.children.length&&c.push(e)})):Object.keys(u).forEach((t=>{const[e]=tO(t),n=o[e];null!=n&&(n.signatureKey=u[t],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=tO(t),n=o[e];n&&(n.signatureKey=l[t],i.push(n))})):i=a;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:e,functions:d};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=J_(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const a=n.type;let r;switch(n.type){case"string":r=NO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=NO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=OO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=OO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=SO(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=SO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=_O(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_O(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=TO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=TO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=LO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=LO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=DO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=DO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=MO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=MO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=AO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=AO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=RO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=RO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=EO(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=EO(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:r,type:a},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let a={};null!=e&&(a=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],s=[];t.signature.inputArg.forEach((t=>{const[e]=tO(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:CO(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),a[e]=n}));Object.keys(a).forEach((t=>{const e=a[t];e.inputNames.forEach((t=>{const[n]=tO(t);e.inputs.push(a[n]),a[n].children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=tO(o[t.name]),r=a[e];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(t);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function IO(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=dt().global;if("undefined"!==typeof e.atob)return e.atob(t);if("undefined"!==typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function NO(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t[e];return null!=r?IO(r.s,a):n}function TO(t,e,n){const a=t[e];return a?a.b:n}function SO(t,e,n){const a=t[e]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function CO(t){switch("string"===typeof t&&(t=X_[t]),t){case X_.DT_FLOAT:return"float32";case X_.DT_INT32:case X_.DT_INT64:case X_.DT_INT8:case X_.DT_UINT8:return"int32";case X_.DT_BOOL:return"bool";case X_.DT_DOUBLE:return"float32";case X_.DT_STRING:return"string";default:return null}}function EO(t,e,n){const a=t[e];return a&&a.func?a.func.name:n}function AO(t,e,n){const a=t[e];return a&&a.type?CO(a.type):n}function RO(t,e,n){const a=t[e];return a&&a.list&&a.list.type?a.list.type.map((t=>CO(t))):n}function FO(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"===typeof t.size?t.size:parseInt(t.size,10))):[]}function DO(t,e,n){const a=t[e];return a&&a.shape?FO(a.shape):n}function _O(t,e,n){const a=t[e];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((t=>"number"===typeof t?t:parseInt(t,10))):n}function OO(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>IO(t,a))):n}function MO(t,e,n){const a=t[e];return a&&a.list&&a.list.shape?a.list.shape.map((t=>FO(t))):n}function LO(t,e,n){const a=t[e];return a&&a.list&&a.list.b?a.list.b:n}class zO{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return $_(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return $_(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return SO(this.node.rawAttrs,t,e);if(null!=n.s)return NO(this.node.rawAttrs,t,e);if(null!=n.b)return TO(this.node.rawAttrs,t,e);if(null!=n.shape)return DO(this.node.rawAttrs,t,e);if(null!=n.type)return AO(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return _O(this.node.rawAttrs,t,e);if(null!=n.list.s)return OO(this.node.rawAttrs,t,e);if(null!=n.list.shape)return MO(this.node.rawAttrs,t,e);if(null!=n.list.b)return LO(this.node.rawAttrs,t,e);if(null!=n.list.type)return RO(this.node.rawAttrs,t,e)}return e}}const PO=yr({addN_:function(t){R(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),R(t.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length)));const e=t.map(((t,e)=>mr(t,"tensors".concat(e),"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!M(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=e;return ir.runKernel(wt,a)}});function BO(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";R(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+" Shapes ".concat(t," and ").concat(e," must match")))}class WO{constructor(t,e,n,a,r,s,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Xs(0),Hs(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),BO(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,Hs(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return vr([],[0].concat(this.elementShape));const n=this.readMany(t);return BO(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Qi(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return vr([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const n=this.readMany(e);return BO(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Io(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,ec(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const a=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:e.size/n,s=[];Us((()=>{e=mo(e,[1,n,r]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,t[n],r];s[n]=mo(Wi(e,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<t.length;i++)o[i]=i;this.writeMany(o,s)}}class VO{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));BO(e,t.shape,"TensorList shape mismatch: "),Hs(t)})),this.idTensor=Xs(0),this.maxNumElements=a,Hs(this.idTensor)}get id(){return this.idTensor.id}copy(){return new VO([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));return BO(t,this.elementShape,"TensorList shape mismatch: "),Us((()=>{const e=this.tensors.map((e=>mo(e,t)));return Qi(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return BO(n.shape,t,"TensorList shape mismatch: "),mo(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(BO(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Hs(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));return BO(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));BO(this.elementShape,e.shape,"TensorList shape mismatch: "),Hs(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));return BO(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?vr([],[0].concat(this.elementShape)):Us((()=>{const e=t.map((t=>mo(this.tensors[t],n)));return Qi(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));return BO(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?vr([],[0].concat(this.elementShape)):Us((()=>{const t=this.tensors.map((t=>mo(t,e)));return Io(t,0)}))}}const UO=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const a=Z_("thenBranch",t,e,n),r=Z_("elseBranch",t,e,n),s=Z_("cond",t,e,n),o=Z_("args",t,e,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Z_("body",t,e,n),r=Z_("cond",t,e,n),s=Z_("args",t,e,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((t=>t.id));let c=await o[0].data();o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let l=s;for(;c[0];){const t=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return l}case"LoopCond":return[rO(Z_("pred",t,e,n))];case"Switch":{const a=Z_("pred",t,e,n);let r=Z_("data",t,e,n);return r.kept||(r=rO(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=t.inputNames.find((t=>void 0!==$_(t,e,n)));if(a){return[rO($_(a,e,n))]}return}case"Enter":{const a=Z_("frameName",t,e,n),r=Z_("tensor",t,e,n);return n.enterFrame(a),[rO(r)]}case"Exit":{const a=Z_("tensor",t,e,n);return n.exitFrame(),[rO(a)]}case"NextIteration":{const a=Z_("tensor",t,e,n);return n.nextIteration(),[rO(a)]}case"TensorArrayV3":{const a=Z_("size",t,e,n),r=Z_("dtype",t,e,n),s=Z_("elementShape",t,e,n),o=Z_("dynamicSize",t,e,n),i=Z_("clearAfterRead",t,e,n),c=Z_("identicalElementShapes",t,e,n),l=Z_("name",t,e,n),u=new WO(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,Xs(1)]}case"TensorArrayWriteV3":{const a=Z_("tensorArrayId",t,e,n),r=Z_("index",t,e,n),s=Z_("tensor",t,e,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=Z_("tensorArrayId",t,e,n),r=Z_("index",t,e,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Z_("tensorArrayId",t,e,n),r=Z_("indices",t,e,n),s=Z_("dtype",t,e,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=Z_("tensorArrayId",t,e,n),r=Z_("indices",t,e,n),s=Z_("tensor",t,e,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=Z_("tensorArrayId",t,e,n),r=n.getTensorArray(a.id),s=Z_("dtype",t,e,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=Z_("tensorArrayId",t,e,n),r=Z_("tensor",t,e,n),s=Z_("lengths",t,e,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=Z_("tensorArrayId",t,e,n);return[Xs(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Z_("tensorArrayId",t,e,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Z_("tensorListId",t,e,n),r=Z_("index",t,e,n),s=Z_("tensor",t,e,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=Z_("tensorListId",t,e,n),r=Z_("index",t,e,n),s=Z_("elementShape",t,e,n),o=Z_("elementDType",t,e,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Z_("indices",t,e,n),r=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const r=Math.max(...e);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new VO([],n,t.dtype,a),o=ec(t,0);return e.forEach(((t,e)=>{s.setItem(t,o[e])})),s}(Z_("tensor",t,e,n),a,Z_("elementShape",t,e,n),Z_("numElements",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Z_("elementShape",t,e,n),r=Z_("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new VO([],t,e,n)}(a,r,Z_(s,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const a=Z_("tensorListId",t,e,n),r=Z_("indices",t,e,n),s=Z_("elementShape",t,e,n),o=Z_("elementDType",t,e,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=Z_("tensorListId",t,e,n),r=Z_("elementShape",t,e,n),s=Z_("elementDType",t,e,n),o=Z_("numElements",t,e,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));BO(t.shape.slice(1),e,"TensorList shape mismatch: ");const r=ec(t);return new VO(r,e,a)}(Z_("tensor",t,e,n),Z_("elementShape",t,e,n),Z_("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const a=Z_("tensorListId",t,e,n),r=n.getTensorList(a.id),s=Z_("dtype",t,e,n),o=Z_("elementShape",t,e,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=Z_("tensorListId",t,e,n),r=Z_("tensor",t,e,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=Z_("tensorListId",t,e,n),r=Z_("elementShape",t,e,n),s=Z_("elementDType",t,e,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=Z_("tensor",t,e,n),r=Z_("elementShape",t,e,n),s=function(t,e,n){let a=0;const r=e.map((t=>(a+=t,a)));if(a!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(t.shape));const s=0===a?0:t.size/a,o=Us((()=>{const o=[];t=mo(t,[1,a,s]);for(let a=0;a<e.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,e[a],s];o[a]=mo(Wi(t,i,c),n)}return t.dispose(),o})),i=new VO([],n,t.dtype,e.length);for(let c=0;c<o.length;c++)i.setItem(c,o[c]);return i}(a,Z_("lengths",t,e,n),r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};const GO=yr({maxPoolWithArgmax_:function(t,e,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:mr(t,"x","maxPoolWithArgmax")},o={filterSize:e,strides:n,pad:a,includeBatchInIndex:r},i=ir.runKernel(Je,s,o);return{result:i[0],indexes:i[1]}}});function HO(t,e,n){const[a,r]=Z_("fusedOps",t,e,n),s="biasadd"===a,o="prelu"===r,i="fusedbatchnorm"===a,c=Z_("numArgs",t,e,n);if(s){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Z_("strides",t,e,n),u=aO(t,e,n),h=Z_("dataFormat",t,e,n).toUpperCase(),d=Z_("dilations",t,e,n),[p,f]=Z_("args",t,e,n);return{stride:l,pad:u,dataFormat:h,dilations:d,biasArg:p,preluArg:f,activationFunc:r,leakyreluAlpha:Z_("leakyreluAlpha",t,e,n)}}function jO(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:t,stop:e,num:n};return ir.runKernel(ze,{},a)}const KO=yr({multinomial_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=mr(t,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?mo(r,[1,-1]):r},c={numSamples:e,seed:n,normalized:a},l=ir.runKernel(an,i,c);return 1===o?mo(l,[l.size]):l}});const qO=async function(t){const e=mr(t,"condition","whereAsync","bool"),n=await e.data(),a=bu(e.shape,n);return t!==e&&e.dispose(),a};const XO=async function(t,e){const n=mr(t,"x","setdiff1d"),a=mr(e,"y","setdiff1d");R(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),R(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),R(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new Pa([i],n.dtype),l=new Pa([i],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};function YO(t,e,n){return{boxes:Z_("boxes",t,e,n),scores:Z_("scores",t,e,n),maxOutputSize:Z_("maxOutputSize",t,e,n),iouThreshold:Z_("iouThreshold",t,e,n),scoreThreshold:Z_("scoreThreshold",t,e,n),softNmsSigma:Z_("softNmsSigma",t,e,n)}}class QO{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Xs(0),this.tensorMap=new Map,Hs(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Us((()=>{const t=ec(e),a=n.length,r=t.length;R(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let e=0;e<a;e++){const a=n[e],r=t[e];Hs(r),this.tensorMap.set(a,r)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Us((()=>{const t=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,e);t.push(s)}return Qi(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}const JO=yr({sparseToDense_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r=mr(t,"sparseIndices","sparseToDense","int32"),s=mr(e,"sparseValues","sparseToDense"),o=mr(a,"defaultValue","sparseToDense",s.dtype);!function(t,e,n,a){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const r=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=e.size;if(0!==e.rank&&(1!==e.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(r,"]"));if(e.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},c={outputShape:n};return ir.runKernel(Kn,i,c)}});const ZO=yr({bincount_:function(t,e,n){const a=mr(t,"x","bincount"),r=mr(e,"weights","bincount");R("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),R(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),R(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return ir.runKernel(zt,s,o)}});const $O=yr({denseBincount_:function(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=mr(t,"x","denseBincount"),s=mr(e,"weights","denseBincount");R("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),R(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),R(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),R(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return ir.runKernel(te,o,i)}});const tM=yr({scatterND_:function(t,e,n){const a=mr(t,"indices","scatterND","int32"),r=mr(e,"updates","scatterND");Ll(r,a,n);const s={indices:a,updates:r},o={shape:n};return ir.runKernel(Fn,s,o)}});const eM=yr({gatherND_:function(t,e){const n=mr(e,"indices","gatherND","int32"),a={params:mr(t,"x","gatherND"),indices:n};return ir.runKernel(Te,a)}});function nM(t,e,n,a){const r=((t,e,n)=>{switch(t.category){case"arithmetic":return Us((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[Js(Z_("a",t,e,n),Z_("b",t,e,n))];case"AddN":return[PO(Z_("tensors",t,e,n))];case"FloorMod":case"Mod":return[Jd(Z_("a",t,e,n),Z_("b",t,e,n))];case"Mul":return[ei(Z_("a",t,e,n),Z_("b",t,e,n))];case"RealDiv":case"Div":return[zo(Z_("a",t,e,n),Z_("b",t,e,n))];case"DivNoNan":return[Bd(Z_("a",t,e,n),Z_("b",t,e,n))];case"FloorDiv":return[Lo(Z_("a",t,e,n),Z_("b",t,e,n))];case"Sub":return[ni(Z_("a",t,e,n),Z_("b",t,e,n))];case"Minimum":return[hi(Z_("a",t,e,n),Z_("b",t,e,n))];case"Maximum":return[ci(Z_("a",t,e,n),Z_("b",t,e,n))];case"Pow":return[tl(Z_("a",t,e,n),Z_("b",t,e,n))];case"SquaredDifference":return[cl(Z_("a",t,e,n),Z_("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"basic_math":return Us((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[Qs(Z_("x",t,e,n))];case"Acos":return[Ed(Z_("x",t,e,n))];case"Acosh":return[Ad(Z_("x",t,e,n))];case"Asin":return[Fd(Z_("x",t,e,n))];case"Asinh":return[Dd(Z_("x",t,e,n))];case"Atan":return[_d(Z_("x",t,e,n))];case"Atan2":return[Od(Z_("x",t,e,n),Z_("y",t,e,n))];case"Atanh":return[Md(Z_("x",t,e,n))];case"Ceil":return[Ld(Z_("x",t,e,n))];case"Complex":return[br(Z_("real",t,e,n),Z_("imag",t,e,n))];case"Cos":return[cd(Z_("x",t,e,n))];case"Cosh":return[ud(Z_("x",t,e,n))];case"Elu":return[Po(Z_("x",t,e,n))];case"Erf":return[Vd(Z_("x",t,e,n))];case"Exp":return[$o(Z_("x",t,e,n))];case"Expm1":return[Ud(Z_("x",t,e,n))];case"Floor":return[qo(Z_("x",t,e,n))];case"Log":return[Zo(Z_("x",t,e,n))];case"Log1p":return[ll(Z_("x",t,e,n))];case"Imag":return[ic(Z_("x",t,e,n))];case"Neg":return[ki(Z_("x",t,e,n))];case"Reciprocal":return[tp(Z_("x",t,e,n))];case"Real":return[cc(Z_("x",t,e,n))];case"Relu":return[Mi(Z_("x",t,e,n))];case"Round":return[ep(Z_("x",t,e,n))];case"Selu":return[zi(Z_("x",t,e,n))];case"Sigmoid":return[Bi(Z_("x",t,e,n))];case"Sin":return[Xu(Z_("x",t,e,n))];case"Sign":return[np(Z_("x",t,e,n))];case"Sinh":return[Qu(Z_("x",t,e,n))];case"Softplus":return[Ki(Z_("x",t,e,n))];case"Sqrt":return[Xi(Z_("x",t,e,n))];case"Square":return[vi(Z_("x",t,e,n))];case"Tanh":return[Ji(Z_("x",t,e,n))];case"Tan":return[rp(Z_("x",t,e,n))];case"ClipByValue":return[ko(Z_("x",t,e,n),Z_("clipValueMin",t,e,n),Z_("clipValueMax",t,e,n))];case"Relu6":return[fc(Z_("x",t,e,n))];case"Rsqrt":return[lh($_(t.inputNames[0],e,n))];case"Prod":return[$d(Z_("x",t,e,n),Z_("axes",t,e,n))];case"LeakyRelu":return[Jo(Z_("x",t,e,n),Z_("alpha",t,e,n))];case"Prelu":return[Ai(Z_("x",t,e,n),Z_("alpha",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"control":return UO(t,e,n);case"convolution":return Us((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const a=Z_("stride",t,e,n),r=Z_("pad",t,e,n),s=Z_("dataFormat",t,e,n).toUpperCase(),o=Z_("dilation",t,e,n);return[Ao(Z_("x",t,e,n),Z_("filter",t,e,n),a,r,s,o)]}case"Conv2D":{const a=Z_("strides",t,e,n),r=aO(t,e,n),s=Z_("dataFormat",t,e,n).toUpperCase(),o=Z_("dilations",t,e,n);return[Eo(Z_("x",t,e,n),Z_("filter",t,e,n),[a[1],a[2]],r,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:s,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=HO(t,e,n);return[vc({x:Z_("x",t,e,n),filter:Z_("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:s,dilations:o,biasArg:i,preluArg:c,activationFunc:l,leakyreluAlpha:u}=HO(t,e,n);return[Ic({x:Z_("x",t,e,n),filter:Z_("filter",t,e,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=Z_("outputShape",t,e,n),r=Z_("strides",t,e,n),s=aO(t,e,n);return[Fo(Z_("x",t,e,n),Z_("filter",t,e,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=Z_("strides",t,e,n),r=aO(t,e,n),s=Z_("dilations",t,e,n),o=Z_("dataFormat",t,e,n).toUpperCase();return[Mo(Z_("input",t,e,n),Z_("filter",t,e,n),[a[1],a[2]],r,o,[s[1],s[2]])]}case"Conv3D":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("dataFormat",t,e,n).toUpperCase(),o=Z_("dilations",t,e,n);return[Do(Z_("x",t,e,n),Z_("filter",t,e,n),[a[1],a[2],a[3]],r,s,[o[1],o[2],o[3]])]}case"AvgPool":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("kernelSize",t,e,n);return[go(Z_("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("kernelSize",t,e,n);return[oi(Z_("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("kernelSize",t,e,n),o=Z_("includeBatchInIndex",t,e,n),{result:i,indexes:c}=GO(Z_("x",t,e,n),[s[1],s[2]],[a[1],a[2]],r,o);return[i,c]}case"AvgPool3D":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("kernelSize",t,e,n);return[yo(Z_("x",t,e,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("kernelSize",t,e,n);return[ii(Z_("x",t,e,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=Z_("strides",t,e,n),r=Z_("pad",t,e,n),s=Z_("dilations",t,e,n),o=a[1],i=a[2],c=s[1],l=s[2];return[Pd(Z_("x",t,e,n),Z_("filter",t,e,n),[o,i],r,[c,l],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"creation":return Us((()=>((t,e,n)=>{switch(t.op){case"Fill":{const a=Z_("shape",t,e,n),r=Z_("dtype",t,e,n);return[Ko(a,Z_("value",t,e,n),r)]}case"LinSpace":return[jO(Z_("start",t,e,n),Z_("stop",t,e,n),Z_("num",t,e,n))];case"Multinomial":{const a=Z_("logits",t,e,n),r=Z_("numSamples",t,e,n),s=Z_("seed",t,e,n);return[KO(a,r,s)]}case"OneHot":{const a=Z_("indices",t,e,n),r=Z_("depth",t,e,n),s=Z_("onValue",t,e,n),o=Z_("offValue",t,e,n);return[Ni(a,r,s,o)]}case"Ones":return[Si(Z_("shape",t,e,n),Z_("dtype",t,e,n))];case"OnesLike":return[Ci(Z_("x",t,e,n))];case"RandomUniform":return[Oi(Z_("shape",t,e,n),Z_("minval",t,e,n),Z_("maxval",t,e,n),Z_("dtype",t,e,n))];case"Range":return[Zc(Z_("start",t,e,n),Z_("stop",t,e,n),Z_("step",t,e,n),Z_("dtype",t,e,n))];case"TruncatedNormal":{const a=Z_("shape",t,e,n),r=Z_("mean",t,e,n),s=Z_("stdDev",t,e,n),o=Z_("seed",t,e,n);return[tc(a,r,s,Z_("dtype",t,e,n),o)]}case"Zeros":return[Ti(Z_("shape",t,e,n),Z_("dtype",t,e,n))];case"ZerosLike":return[rc(Z_("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:c}=YO(t,e,n),l=await hl.nonMaxSuppressionWithScoreAsync(a,r,s,o,i,c);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=YO(t,e,n),c=Z_("padToMaxOutputSize",t,e,n),l=await hl.nonMaxSuppressionPaddedAsync(a,r,s,o,i,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=YO(t,e,n);return[await hl.nonMaxSuppressionAsync(a,r,s,o,i)]}case"Where":{const a=os(Z_("condition",t,e,n),"bool"),r=[await qO(a)];return a.dispose(),r}case"ListDiff":return XO(Z_("x",t,e,n),Z_("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n);case"evaluation":return Us((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const a=Z_("x",t,e,n),r=Z_("k",t,e,n),s=Z_("sorted",t,e,n),o=sp(a,r,s);return[o.values,o.indices]}case"Unique":{const a=Z_("x",t,e,n),r=op(a);return[r.values,r.indices]}case"UniqueV2":{const a=Z_("x",t,e,n),r=Z_("axis",t,e,n),s=op(a,r);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"image":return Us((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const a=Z_("images",t,e,n),r=Z_("size",t,e,n),s=Z_("alignCorners",t,e,n),o=Z_("halfPixelCenters",t,e,n);return[hl.resizeBilinear(a,[r[0],r[1]],s,o)]}case"ResizeNearestNeighbor":{const a=Z_("images",t,e,n),r=Z_("size",t,e,n),s=Z_("alignCorners",t,e,n),o=Z_("halfPixelCenters",t,e,n);return[hl.resizeNearestNeighbor(a,[r[0],r[1]],s,o)]}case"CropAndResize":{const a=Z_("image",t,e,n),r=Z_("boxes",t,e,n),s=Z_("boxInd",t,e,n),o=Z_("cropSize",t,e,n),i=Z_("method",t,e,n),c=Z_("extrapolationValue",t,e,n);return[hl.cropAndResize(a,r,s,o,i,c)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"graph":return Us((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const a=Z_("default",t,e,n);return[$_(t.name,e,n)||a];case"Placeholder":return[$_(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[rO(Z_("x",t,e,n))];case"IdentityN":return Z_("x",t,e,n).map((t=>rO(t)));case"Shape":return[Zi(Z_("x",t,e,n).shape,"int32")];case"ShapeN":return Z_("x",t,e,n).map((t=>Zi(t.shape)));case"Size":return[Xs(Z_("x",t,e,n).size,"int32")];case"Rank":return[Xs(Z_("x",t,e,n).rank,"int32")];case"NoOp":return[Xs(1)];case"Print":const r=Z_("x",t,e,n),s=Z_("data",t,e,n),o=Z_("message",t,e,n),i=Z_("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<s.length;t++)console.log(Array.prototype.slice.call(s[t].dataSync()).slice(0,i));return[r];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"logical":return Us((()=>((t,e,n)=>{switch(t.op){case"Equal":return[Uo(Z_("a",t,e,n),Z_("b",t,e,n))];case"NotEqual":return[Ii(Z_("a",t,e,n),Z_("b",t,e,n))];case"Greater":return[Yo(Z_("a",t,e,n),Z_("b",t,e,n))];case"GreaterEqual":return[Qo(Z_("a",t,e,n),Z_("b",t,e,n))];case"Less":return[Eh(Z_("a",t,e,n),Z_("b",t,e,n))];case"LessEqual":return[Jc(Z_("a",t,e,n),Z_("b",t,e,n))];case"LogicalAnd":return[si(Z_("a",t,e,n),Z_("b",t,e,n))];case"LogicalNot":return[ad(Z_("a",t,e,n))];case"LogicalOr":return[Xd(Z_("a",t,e,n),Z_("b",t,e,n))];case"Select":case"SelectV2":return[ac(Z_("condition",t,e,n),Z_("a",t,e,n),Z_("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"matrices":return Us((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Nc(Z_("a",t,e,n),Z_("b",t,e,n),Z_("transposeA",t,e,n),Z_("transposeB",t,e,n))];case"Transpose":return[sc(Z_("x",t,e,n),Z_("perm",t,e,n))];case"_FusedMatMul":const[a,r]=Z_("fusedOps",t,e,n),s="biasadd"===a,o="prelu"===r,i=Z_("numArgs",t,e,n),c=Z_("leakyreluAlpha",t,e,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,u]=Z_("args",t,e,n);return[Tc({a:Z_("a",t,e,n),b:Z_("b",t,e,n),transposeA:Z_("transposeA",t,e,n),transposeB:Z_("transposeB",t,e,n),bias:l,activation:r,preluActivationWeights:u,leakyreluAlpha:c})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"normalization":return Us((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[bo(Z_("x",t,e,n),Z_("mean",t,e,n),Z_("variance",t,e,n),Z_("offset",t,e,n),Z_("scale",t,e,n),Z_("epsilon",t,e,n))];case"LRN":return[Kd(Z_("x",t,e,n),Z_("radius",t,e,n),Z_("bias",t,e,n),Z_("alpha",t,e,n),Z_("beta",t,e,n))];case"Softmax":return[ji(Z_("x",t,e,n))];case"LogSoftmax":return[ri(Z_("x",t,e,n))];case"SparseToDense":return[JO(Z_("sparseIndices",t,e,n),Z_("outputShape",t,e,n),Z_("sparseValues",t,e,n),Z_("defaultValue",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"reduction":return Us((()=>((t,e,n)=>{switch(t.op){case"Max":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[ti(Z_("x",t,e,n),a,r)]}case"Mean":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[li(Z_("x",t,e,n),a,r)]}case"Min":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[ui(Z_("x",t,e,n),a,r)]}case"Sum":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[ai(Z_("x",t,e,n),a,r)]}case"All":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[Zs(Z_("x",t,e,n),a,r)]}case"Any":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[$s(Z_("x",t,e,n),a,r)]}case"ArgMax":{const a=Z_("axis",t,e,n);return[to(Z_("x",t,e,n),a)]}case"ArgMin":{const a=Z_("axis",t,e,n);return[Rd(Z_("x",t,e,n),a)]}case"Prod":{const a=Z_("axis",t,e,n),r=Z_("keepDims",t,e,n);return[$d(Z_("x",t,e,n),a,r)]}case"Cumsum":{const a=Z_("axis",t,e,n),r=Z_("exclusive",t,e,n),s=Z_("reverse",t,e,n);return[Zu(Z_("x",t,e,n),a,r,s)]}case"Bincount":const a=Z_("x",t,e,n),r=Z_("weights",t,e,n),s=Z_("size",t,e,n);return[ZO(a,r,s)];case"DenseBincount":{const a=Z_("x",t,e,n),r=Z_("weights",t,e,n),s=Z_("size",t,e,n),o=Z_("binaryOutput",t,e,n);return[$O(a,r,s,o)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"slice_join":return Us((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const a=Z_("n",t,e,n),r=Z_("axis",t,e,n);let s=Z_("tensors",t,e,n);return s=s.slice(0,a),[Io(s,r)]}case"Gather":{const a=Z_("x",t,e,n),r=Z_("indices",t,e,n);return[Xo(a,os(r,"int32"),0)]}case"GatherV2":{const a=Z_("axis",t,e,n),r=Z_("batchDims",t,e,n),s=Z_("x",t,e,n),o=Z_("indices",t,e,n);return[Xo(s,os(o,"int32"),a,r)]}case"Reverse":{const a=Z_("dims",t,e,n),r=[];for(let t=0;t<a.length;t++)a[t]&&r.push(t);const s=Z_("x",t,e,n);return[Li(s,r)]}case"ReverseV2":{const a=Z_("axis",t,e,n),r=Z_("x",t,e,n);return[Li(r,a)]}case"Slice":{const a=Z_("begin",t,e,n),r=Z_("size",t,e,n);return[Wi(Z_("x",t,e,n),a,r)]}case"StridedSlice":{const a=Z_("begin",t,e,n),r=Z_("end",t,e,n),s=Z_("strides",t,e,n),o=Z_("beginMask",t,e,n),i=Z_("endMask",t,e,n),c=Z_("ellipsisMask",t,e,n),l=Z_("newAxisMask",t,e,n),u=Z_("shrinkAxisMask",t,e,n),h=Z_("x",t,e,n);return[ap(h,a,r,s,o,i,c,l,u)]}case"Pack":return Us((()=>{const a=Z_("axis",t,e,n),r=Z_("tensors",t,e,n),s=r[0].shape,o=Yi(r[0]).shape,i=r.map((t=>{const e=M(t.shape,s);if(!e&&!M(Yi(t).shape,o))throw new Error("the input tensors shape does not match");return e?t:mo(t,s)}));return[Qi(i,a)]}));case"Unpack":{const a=Z_("axis",t,e,n),r=Z_("tensor",t,e,n);return ec(r,a)}case"Tile":{const a=Z_("reps",t,e,n);return[Ho(Z_("x",t,e,n),a)]}case"Split":case"SplitV":{const a=Z_("axis",t,e,n),r=Z_("numOrSizeSplits",t,e,n),s=Z_("x",t,e,n);return qi(s,r,a)}case"ScatterNd":{const a=Z_("indices",t,e,n),r=Z_("values",t,e,n),s=Z_("shape",t,e,n);return[tM(a,r,s)]}case"GatherNd":{const a=Z_("x",t,e,n),r=Z_("indices",t,e,n);return[eM(a,r)]}case"SparseToDense":{const a=Z_("sparseIndices",t,e,n),r=Z_("outputShape",t,e,n),s=Z_("sparseValues",t,e,n),o=Z_("defaultValue",t,e,n);return[JO(a,s,r,s.dtype===o.dtype?o:os(o,s.dtype))]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"spectral":return Us((()=>((t,e,n)=>{switch(t.op){case"FFT":return[lc(Z_("x",t,e,n))];case"IFFT":return[hc(Z_("x",t,e,n))];case"RFFT":return[uc(Z_("x",t,e,n))];case"IRFFT":return[dc(Z_("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"transformation":return Us((()=>((t,e,n)=>{switch(t.op){case"Cast":return[os(Z_("x",t,e,n),Z_("dtype",t,e,n))];case"ExpandDims":{const a=Z_("axis",t,e,n);return[Go(Z_("x",t,e,n),a)]}case"Squeeze":{const a=Z_("axis",t,e,n);return[Yi(Z_("x",t,e,n),a)]}case"Reshape":return[mo(Z_("x",t,e,n),Z_("shape",t,e,n))];case"MirrorPad":return[Qd(Z_("x",t,e,n),Z_("padding",t,e,n),Z_("mode",t,e,n))];case"PadV2":case"Pad":return[Ei(Z_("x",t,e,n),Z_("padding",t,e,n),Z_("constantValue",t,e,n))];case"SpaceToBatchND":{const a=Z_("blockShape",t,e,n),r=Z_("paddings",t,e,n);return[Lu(Z_("x",t,e,n),a,r)]}case"BatchToSpaceND":{const a=Z_("blockShape",t,e,n),r=Z_("crops",t,e,n);return[md(Z_("x",t,e,n),a,r)]}case"DepthToSpace":{const a=Z_("blockSize",t,e,n),r=Z_("dataFormat",t,e,n).toUpperCase();return[zd(Z_("x",t,e,n),a,r)]}case"BroadcastTo":return[nc(Z_("x",t,e,n),Z_("shape",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n)));case"hash_table":return(async(t,e,n,a)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=Z_("keyDType",t,e,n),s=Z_("valueDType",t,e,n),o=new QO(r,s);return a.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=Z_("tableHandle",t,e,n,a),s=Z_("keys",t,e,n),o=Z_("values",t,e,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Z_("tableHandle",t,e,n,a),s=Z_("keys",t,e,n),o=Z_("defaultValue",t,e,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n,a);case"custom":const r=J_(t.op);if(r&&r.customExecutor)return r.customExecutor(new zO(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return ct(r)?r.then((t=>[].concat(t))):[].concat(r)}class aM{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId))).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function rM(t,e,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=Object.keys(t).map((t=>nO(t)[0]));let u=[];null!=a&&(u=a.map((t=>nO(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(cM(t)||lM(t)||uM(t))&&null==o&&(o=t,i=o.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===u.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{c.has(t.name)||(c.add(t.name),h.push(t))})):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}const sM=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],oM=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],iM=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function cM(t){return sM.indexOf(t.op)>=0}function lM(t){return oM.indexOf(t.op)>=0}function uM(t){return iM.indexOf(t.op)>=0}class hM{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new hM(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),a=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(t,e){const n=rM(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}return function(t,e,n){const{usedNodes:a,inputs:r}=n,s=[],o=Object.keys(r).map((t=>nO(t)[0])).map((e=>t.nodes[e])),i=t.initNodes;o.forEach((t=>{a.has(t.name)&&s.push(t)})),t.weights.forEach((t=>{a.has(t.name)&&s.push(t)})),null!=i&&i.forEach((t=>{a.has(t.name)&&s.push(t)}));const c=new Set,l=[];for(;s.length>0;){const t=s.pop();c.add(t.name),e[t.name]||l.push(t),t.children.forEach((t=>{!c.has(t.name)&&a.has(t.name)&&t.inputs.every((t=>c.has(t.name)))&&s.push(t)}))}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map((t=>this.graph.nodes[nO(t)[0]])),r=e.map((t=>nO(t)[0]));let s=r.map((t=>this.graph.nodes[t]));0===s.length&&(s=this._outputs);const o=this.getCompilationKey(a,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(t,s),this.compiledMap.set(o,i));const c={},l={};return Us((()=>{const n=new aM(this.weightMap,c,l,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=nO(e),s=[];s[r]=t[e],a[n]=s}));const s=this.getFrozenTensorIds(a),o={};for(let t=0;t<i.length;t++){const e=i[t];if(!a[e.name]){const t=nM(e,a,n,this._resourceManager);if(ct(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,s,r,o)}}return null==this.parent&&n.dispose(s),e.map((t=>$_(t,a,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,a,r,s,o){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[eO(t,n.currentContextId)]}(t.name,n,a);null!=e&&e.forEach((t=>{if(t&&!r.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const s=new aM(this.weightMap,a,r,this.functionExecutorMap),o=await this.executeWithControlFlow(t,s,e,n),i=e.map((t=>$_(t,o,s))),c=i.map((t=>t.id)),l=Object.keys(t).map((e=>t[e].id)),u=new Set([...c,...l,...this.weightIds]);return Object.keys(o).forEach((t=>{o[t].forEach((t=>{!t||t.isDisposed||u.has(t.id)||t.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(t,e,n){const a=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(a,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,a){const r=Object.keys(t),s=r.map((t=>this.graph.nodes[nO(t)[0]])),o=n.map((t=>nO(t)[0]));let i=o.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:u,syncInputs:h}=rM(t,i,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,a]=nO(e),r=[];r[a]=t[e],p[n]=r}));const f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){const t=this.processStack(s,d,e,p,g,m,o,f,c);await Promise.all(t)}null!=u||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((t=>!cM(t)&&!$_(t.name,p,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=u&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(y,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(t))}return p}processStack(t,e,n,a,r,s,o,i,c){const l=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let u="";if("Enter"===t.node.op&&Z_("isConstant",t.node,a,n)&&([u]=tO(t.node.name,n)),null==a[t.node.name]){const h=nM(t.node,a,n,this._resourceManager);u||([u]=tO(t.node.name,n));const d=n.currentContext;ct(h)?l.push(h.then((l=>(a[u]=l,n.currentContext=d,this.checkTensorForDisposal(u,t.node,a,n,s,o,i),this.processChildNodes(t.node,e,n,a,r,c),l)))):(a[u]=h,this.checkTensorForDisposal(u,t.node,a,n,s,o,i),this.processChildNodes(t.node,e,n,a,r,c))}else this.processChildNodes(t.node,e,n,a,r,c)}return l}processChildNodes(t,e,n,a,r,s){t.children.forEach((t=>{const[o]=tO(t.name,n);!r[o]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!$_(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!$_(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[a]=nO(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value;R(t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&R(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=nO(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=nO(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))}))}}class dM{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}const pM="?tfjs-format=file",fM="model.json";class mM{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new dM}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=ys(t,this.loadOptions);else{const a=(e=t,n=this.loadOptions,Fr.getLoadHandlers(e,n));if(0===a.length)a.push(ys(t,this.loadOptions));else if(a.length>1)throw new Error("Found more than one (".concat(a.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=a[0]}var e,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version="".concat(e.versions.producer,".").concat(e.versions.minConsumer);const a=Nr(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hM(kO.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=kO.Instance.transformGraph(t.modelInitializer);this.initializer=new hM(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=Dr(t);if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof Ua)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce(((e,n,a)=>(e[n]=t[a],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function gM(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t="".concat(t).concat(fM).concat(pM));const n=new mM(t,e);return await n.load(),n}function yM(t,e,n,a){return new(n||(n=Promise))((function(r,s){function o(t){try{c(a.next(t))}catch(t){s(t)}}function i(t){try{c(a.throw(t))}catch(t){s(t)}}function c(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}c((a=a.apply(t,e||[])).next())}))}function bM(t,e){var n,a,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){o.label=s[1];break}if(6===s[0]&&o.label<r[1]){o.label=r[1],r=s;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(s);break}r[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}function xM(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function vM(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function wM(t,e){void 0===e&&(e=1.5);var n=vM(t),a=xM(t),r=[e*a[0]/2,e*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],palmLandmarks:t.palmLandmarks}}function kM(t){var e=vM(t),n=xM(t),a=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-a,e[1]-a],endPoint:[e[0]+a,e[1]+a],palmLandmarks:t.palmLandmarks}}function IM(t,e){var n=[t.endPoint[0]-t.startPoint[0],t.endPoint[1]-t.startPoint[1]],a=[n[0]*e[0],n[1]*e[1]];return{startPoint:[t.startPoint[0]+a[0],t.startPoint[1]+a[1]],endPoint:[t.endPoint[0]+a[0],t.endPoint[1]+a[1]],palmLandmarks:t.palmLandmarks}}var NM=function(){function t(t,e,n,a,r,s){this.model=t,this.width=e,this.height=n,this.iouThreshold=r,this.scoreThreshold=s,this.anchors=a.map((function(t){return[t.x_center,t.y_center]})),this.anchorsTensor=$i(this.anchors),this.inputSizeTensor=Zi([e,n]),this.doubleInputSizeTensor=Zi([2*e,2*n])}return t.prototype.normalizeBoxes=function(t){var e=this;return Us((function(){var n=Wi(t,[0,0],[-1,2]),a=Wi(t,[0,2],[-1,2]),r=Js(zo(n,e.inputSizeTensor),e.anchorsTensor),s=zo(a,e.doubleInputSizeTensor),o=ei(ni(r,s),e.inputSizeTensor),i=ei(Js(r,s),e.inputSizeTensor);return To([o,i],1)}))},t.prototype.normalizeLandmarks=function(t,e){var n=this;return Us((function(){var a=Js(zo(t.reshape([-1,7,2]),n.inputSizeTensor),n.anchors[e]);return ei(a,n.inputSizeTensor)}))},t.prototype.getBoundingBoxes=function(t){return yM(this,void 0,void 0,(function(){var e,n,a,r,s,o,i,c,l,u,h,d,p,f,m,g=this;return bM(this,(function(y){switch(y.label){case 0:return e=Us((function(){return ei(ni(t,.5),2)})),"webgl"===js()?(a=dt().get("WEBGL_PACK_DEPTHWISECONV"),dt().set("WEBGL_PACK_DEPTHWISECONV",!0),n=this.model.predict(e),dt().set("WEBGL_PACK_DEPTHWISECONV",a)):n=this.model.predict(e),r=n.squeeze(),s=Us((function(){return Bi(Wi(r,[0,0],[-1,1])).squeeze()})),o=Wi(r,[0,1],[-1,4]),i=this.normalizeBoxes(o),c=console.warn,console.warn=function(){},l=hl.nonMaxSuppression(i,s,1,this.iouThreshold,this.scoreThreshold),console.warn=c,[4,l.array()];case 1:return u=y.sent(),h=[e,n,l,r,i,o,s],0===u.length?(h.forEach((function(t){return t.dispose()})),[2,null]):(d=u[0],p=Wi(i,[d,0],[1,-1]),f=Wi(r,[d,5],[1,14]),m=Us((function(){return g.normalizeLandmarks(f,d).reshape([-1,2])})),h.push(f),h.forEach((function(t){return t.dispose()})),[2,{boxes:p,palmLandmarks:m}])}}))}))},t.prototype.estimateHandBounds=function(t){return yM(this,void 0,void 0,(function(){var e,n,a,r,s,o,i,c,l=this;return bM(this,(function(u){switch(u.label){case 0:return e=t.shape[1],n=t.shape[2],a=Us((function(){return t.resizeBilinear([l.width,l.height]).div(255)})),[4,this.getBoundingBoxes(a)];case 1:return null===(r=u.sent())?(a.dispose(),[2,null]):(s=r.boxes.arraySync(),o=s[0].slice(0,2),i=s[0].slice(2,4),c=r.palmLandmarks.arraySync(),a.dispose(),r.boxes.dispose(),r.palmLandmarks.dispose(),[2,(h={startPoint:o,endPoint:i,palmLandmarks:c},d=[n/this.width,e/this.height],{startPoint:[h.startPoint[0]*d[0],h.startPoint[1]*d[1]],endPoint:[h.endPoint[0]*d[0],h.endPoint[1]*d[1]],palmLandmarks:h.palmLandmarks.map((function(t){return[t[0]*d[0],t[1]*d[1]]}))})])}var h,d}))}))},t}(),TM={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]};var SM=function(t,e){return[[1,0,t],[0,1,e],[0,0,1]]};function CM(t,e){for(var n=0,a=0;a<t.length;a++)n+=t[a]*e[a];return n}function EM(t,e){for(var n=[],a=0;a<t.length;a++)n.push(t[a][e]);return n}function AM(t,e){for(var n=[],a=t.length,r=0;r<a;r++){n.push([]);for(var s=0;s<a;s++)n[r].push(CM(t[r],EM(e,s)))}return n}function RM(t,e){var n=Math.cos(t),a=Math.sin(t),r=[[n,-a,0],[a,n,0],[0,0,1]],s=AM(SM(e[0],e[1]),r);return AM(s,SM(-e[0],-e[1]))}function FM(t,e){return[CM(t,e[0]),CM(t,e[1])]}var DM=[0,-.4],_M=[0,-.1],OM=[0,5,9,13,17,1,2],MM=function(){function t(t,e,n,a,r,s){this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.maxContinuousChecks=r,this.detectionConfidence=s,this.meshWidth=n,this.meshHeight=a,this.maxHandsNumber=1}return t.prototype.getBoxForPalmLandmarks=function(t,e){var n=t.map((function(t){return FM(t.concat([1]),e)}));return wM(kM(IM(this.calculateLandmarksBoundingBox(n),DM)),3)},t.prototype.getBoxForHandLandmarks=function(t){for(var e=wM(kM(IM(this.calculateLandmarksBoundingBox(t),_M)),1.65),n=[],a=0;a<OM.length;a++)n.push(t[OM[a]].slice(0,2));return e.palmLandmarks=n,e},t.prototype.transformRawCoords=function(t,e,n,a){var r,s,o,i,c=this,l=xM(e),u=[l[0]/this.meshWidth,l[1]/this.meshHeight],h=t.map((function(t){return[u[0]*(t[0]-c.meshWidth/2),u[1]*(t[1]-c.meshHeight/2),t[2]]})),d=RM(n,[0,0]),p=h.map((function(t){return FM(t,d).concat([t[2]])})),f=(s=[[(r=a)[0][0],r[1][0]],[r[0][1],r[1][1]]],o=[r[0][2],r[1][2]],i=[-CM(s[0],o),-CM(s[1],o)],[s[0].concat(i[0]),s[1].concat(i[1]),[0,0,1]]),m=vM(e).concat([1]),g=[CM(m,f[0]),CM(m,f[1])];return p.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.estimateHand=function(t){return yM(this,void 0,void 0,(function(){var e,n,a,r,s,o,i,c,l,u,h,d,p,f,m,g,y,b,x,v;return bM(this,(function(w){switch(w.label){case 0:return!0!==(e=this.shouldUpdateRegionsOfInterest())?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(t)];case 1:return null===(n=w.sent())?(t.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(n,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,w.label=3;case 3:return a=this.regionsOfInterest[0],r=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(a.palmLandmarks[0],a.palmLandmarks[2]),s=vM(a),o=[s[0]/t.shape[2],s[1]/t.shape[1]],i=hl.rotateWithOffset(t,r,0,o),c=RM(-r,s),l=!0===e?this.getBoxForPalmLandmarks(a.palmLandmarks,c):a,u=function(t,e,n){var a=e.shape[1],r=e.shape[2],s=[[t.startPoint[1]/a,t.startPoint[0]/r,t.endPoint[1]/a,t.endPoint[0]/r]];return hl.cropAndResize(e,s,[0],n)}(l,i,[this.meshWidth,this.meshHeight]),h=u.div(255),u.dispose(),i.dispose(),"webgl"===js()?(p=dt().get("WEBGL_PACK_DEPTHWISECONV"),dt().set("WEBGL_PACK_DEPTHWISECONV",!0),d=this.meshDetector.predict(h),dt().set("WEBGL_PACK_DEPTHWISECONV",p)):d=this.meshDetector.predict(h),f=d[0],m=d[1],h.dispose(),g=f.dataSync()[0],f.dispose(),g<this.detectionConfidence?(m.dispose(),this.regionsOfInterest=[],[2,null]):(y=mo(m,[-1,3]),b=y.arraySync(),m.dispose(),y.dispose(),x=this.transformRawCoords(b,l,r,c),v=this.getBoxForHandLandmarks(x),this.updateRegionsOfInterest(v,!1),[2,{landmarks:x,handInViewConfidence:g,boundingBox:{topLeft:v.startPoint,bottomRight:v.endPoint}}])}}))}))},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t.prototype.updateRegionsOfInterest=function(t,e){if(e)this.regionsOfInterest=[t];else{var n=this.regionsOfInterest[0],a=0;if(null!=n&&null!=n.startPoint){var r=t.startPoint,s=r[0],o=r[1],i=t.endPoint,c=i[0],l=i[1],u=n.startPoint,h=u[0],d=u[1],p=n.endPoint,f=p[0],m=p[1],g=Math.max(s,h),y=Math.max(o,d),b=(Math.min(c,f)-g)*(Math.min(l,m)-y);a=b/((c-s)*(l-o)+(f-h)*(m-o)-b)}this.regionsOfInterest[0]=a>.8?n:t}},t.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},t}();function LM(){return yM(this,void 0,void 0,(function(){return bM(this,(function(t){return[2,gM("https://tfhub.dev/mediapipe/tfjs-model/handdetector/1/default/1",{fromTFHub:!0})]}))}))}function zM(){return yM(this,void 0,void 0,(function(){return bM(this,(function(t){return[2,gM("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1",{fromTFHub:!0})]}))}))}function PM(){return yM(this,void 0,void 0,(function(){return bM(this,(function(t){return[2,Na("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1/anchors.json?tfjs-format=file").then((function(t){return t.json()}))]}))}))}var BM=function(){function t(t){this.pipeline=t}return t.getAnnotations=function(){return TM},t.prototype.estimateHands=function(t,e){return void 0===e&&(e=!1),yM(this,void 0,void 0,(function(){var n,a,r,s,o,i,c,l,u;return bM(this,(function(h){switch(h.label){case 0:return n=function(t){return t instanceof Ua?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),a=n[1],r=Us((function(){return t instanceof Ua||(t=vs(t)),t.toFloat().expandDims(0)})),[4,this.pipeline.estimateHand(r)];case 1:if(s=h.sent(),r.dispose(),null===s)return[2,[]];for(o=s,!0===e&&(o=function(t,e){var n=t.handInViewConfidence,a=t.landmarks,r=t.boundingBox;return{handInViewConfidence:n,landmarks:a.map((function(t){return[e-1-t[0],t[1],t[2]]})),boundingBox:{topLeft:[e-1-r.topLeft[0],r.topLeft[1]],bottomRight:[e-1-r.bottomRight[0],r.bottomRight[1]]}}}(s,a)),i={},c=0,l=Object.keys(TM);c<l.length;c++)u=l[c],i[u]=TM[u].map((function(t){return o.landmarks[t]}));return[2,[{handInViewConfidence:o.handInViewConfidence,boundingBox:o.boundingBox,landmarks:o.landmarks,annotations:i}]]}}))}))},t}(),WM=n(29),VM=n.n(WM);const UM={thumb:[0,1,2,3,4],indexFinger:[0,5,6,7,8],middleFinger:[0,9,10,11,12],ringFinger:[0,13,14,15,16],pinky:[0,17,18,19,20]},GM={0:{color:"yellow",size:15},1:{color:"gold",size:6},2:{color:"green",size:10},3:{color:"gold",size:6},4:{color:"gold",size:6},5:{color:"purple",size:10},6:{color:"gold",size:6},7:{color:"gold",size:6},8:{color:"gold",size:6},9:{color:"blue",size:10},10:{color:"gold",size:6},11:{color:"gold",size:6},12:{color:"gold",size:6},13:{color:"red",size:10},14:{color:"gold",size:6},15:{color:"gold",size:6},16:{color:"gold",size:6},17:{color:"orange",size:10},18:{color:"gold",size:6},19:{color:"gold",size:6},20:{color:"gold",size:6}};var HM=n(757);const jM=new HM.GestureDescription("Stop");for(let n of[HM.Finger.Index,HM.Finger.Middle,HM.Finger.Ring,HM.Finger.Pinky,HM.Finger.Thumb])jM.addCurl(n,HM.FingerCurl.NoCurl,1),jM.addDirection(n,HM.FingerDirection.VerticalUp,1),jM.addDirection(n,HM.FingerDirection.VerticalUp,1);const KM=new HM.GestureDescription("Start");KM.addCurl(HM.Finger.Thumb,HM.FingerCurl.HalfCurl,.5),KM.addCurl(HM.Finger.Thumb,HM.FingerCurl.NoCurl,.5),KM.addDirection(HM.Finger.Thumb,HM.FingerDirection.VerticalUp,1),KM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpLeft,1),KM.addCurl(HM.Finger.Index,HM.FingerCurl.NoCurl,1),KM.addDirection(HM.Finger.Index,HM.FingerDirection.VerticalUp,.75),KM.addDirection(HM.Finger.Index,HM.FingerDirection.DiagonalUpLeft,1),KM.addCurl(HM.Finger.Middle,HM.FingerCurl.NoCurl,1),KM.addDirection(HM.Finger.Middle,HM.FingerDirection.VerticalUp,1),KM.addDirection(HM.Finger.Middle,HM.FingerDirection.DiagonalUpLeft,.75),KM.addCurl(HM.Finger.Ring,HM.FingerCurl.FullCurl,1),KM.addDirection(HM.Finger.Ring,HM.FingerDirection.VerticalUp,.2),KM.addDirection(HM.Finger.Ring,HM.FingerDirection.DiagonalUpLeft,1),KM.addDirection(HM.Finger.Ring,HM.FingerDirection.HorizontalLeft,.2),KM.addCurl(HM.Finger.Pinky,HM.FingerCurl.FullCurl,1),KM.addDirection(HM.Finger.Pinky,HM.FingerDirection.VerticalUp,.2),KM.addDirection(HM.Finger.Pinky,HM.FingerDirection.DiagonalUpLeft,1),KM.addDirection(HM.Finger.Pinky,HM.FingerDirection.HorizontalLeft,.2),KM.setWeight(HM.Finger.Index,2),KM.setWeight(HM.Finger.Middle,2);const qM=new HM.GestureDescription("Left");qM.addCurl(HM.Finger.Thumb,HM.FingerCurl.HalfCurl,1),qM.addCurl(HM.Finger.Thumb,HM.FingerCurl.NoCurl,1),qM.addDirection(HM.Finger.Thumb,HM.FingerDirection.VerticalUp,1),qM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpLeft,.75),qM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpRight,.75);for(let n of[HM.Finger.Index,HM.Finger.Middle,HM.Finger.Ring,HM.Finger.Pinky])qM.addCurl(n,HM.FingerCurl.NoCurl,1),qM.addDirection(n,HM.FingerDirection.HorizontalRight,1);const XM=new HM.GestureDescription("Right");XM.addCurl(HM.Finger.Thumb,HM.FingerCurl.HalfCurl,1),XM.addCurl(HM.Finger.Thumb,HM.FingerCurl.NoCurl,1),XM.addDirection(HM.Finger.Thumb,HM.FingerDirection.VerticalUp,1),XM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpLeft,.75),XM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpRight,.75);for(let n of[HM.Finger.Index,HM.Finger.Middle,HM.Finger.Ring,HM.Finger.Pinky])XM.addCurl(n,HM.FingerCurl.NoCurl,1),XM.addDirection(n,HM.FingerDirection.HorizontalLeft,1);const YM=new HM.GestureDescription("Movedown");YM.addCurl(HM.Finger.Thumb,HM.FingerCurl.NoCurl,1),YM.addDirection(HM.Finger.Thumb,HM.FingerDirection.VerticalDown,1),YM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalDownLeft,.5),YM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalDownRight,.5);for(let n of[HM.Finger.Index,HM.Finger.Middle,HM.Finger.Ring,HM.Finger.Pinky])YM.addCurl(n,HM.FingerCurl.FullCurl,1),YM.addDirection(n,HM.FingerDirection.HorizontalLeft,1),YM.addDirection(n,HM.FingerDirection.HorizontalRight,1);const QM=new HM.GestureDescription("Moveup");QM.addCurl(HM.Finger.Thumb,HM.FingerCurl.NoCurl,1),QM.addDirection(HM.Finger.Thumb,HM.FingerDirection.VerticalUp,1),QM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpLeft,.25),QM.addDirection(HM.Finger.Thumb,HM.FingerDirection.DiagonalUpRight,.25);for(let n of[HM.Finger.Index,HM.Finger.Middle,HM.Finger.Ring,HM.Finger.Pinky])QM.addCurl(n,HM.FingerCurl.FullCurl,1),QM.addDirection(n,HM.FingerDirection.HorizontalLeft,1),QM.addDirection(n,HM.FingerDirection.HorizontalRight,1);const JM=function(){const t=(0,k.useRef)(null),e=(0,k.useRef)(null),n=async n=>{if("undefined"!==typeof t.current&&null!==t.current&&4===t.current.video.readyState){const r=t.current.video,s=t.current.video.videoWidth,o=t.current.video.videoHeight;t.current.video.width=s,t.current.video.height=o,e.current.width=s,e.current.height=o;const i=await n.estimateHands(r);if(i.length>0){const t=new HM.GestureEstimator([jM,KM,qM,XM,QM,YM]),e=await t.estimate(i[0].landmarks,7);if(void 0!==e.gestures&&e.gestures.length>0){const t=e.gestures.map((t=>t.confidence)),n=t.indexOf(Math.max.apply(null,t));console.log(e.gestures[n].name);var a=e.gestures[n].name;document.getElementById("insert").innerHTML=a}}((t,e)=>{t.length>0&&t.forEach((t=>{const n=t.landmarks;for(let a=0;a<Object.keys(UM).length;a++){let t=Object.keys(UM)[a];for(let a=0;a<UM[t].length-1;a++){const r=UM[t][a],s=UM[t][a+1];e.beginPath(),e.moveTo(n[r][0],n[r][1]),e.lineTo(n[s][0],n[s][1]),e.strokeStyle="plum",e.lineWidth=4,e.stroke()}}for(let a=0;a<n.length;a++){const t=n[a][0],r=n[a][1];e.beginPath(),e.arc(t,r,GM[a].size,0,3*Math.PI),e.fillStyle=GM[a].color,e.fill()}}))})(i,e.current.getContext("2d"))}};return(async()=>{const t=await function(t){var e=void 0===t?{}:t,n=e.maxContinuousChecks,a=void 0===n?1/0:n,r=e.detectionConfidence,s=void 0===r?.8:r,o=e.iouThreshold,i=void 0===o?.3:o,c=e.scoreThreshold,l=void 0===c?.5:c;return yM(this,void 0,void 0,(function(){var t,e,n,r,o,c;return bM(this,(function(u){switch(u.label){case 0:return[4,Promise.all([PM(),LM(),zM()])];case 1:return t=u.sent(),e=t[0],n=t[1],r=t[2],o=new NM(n,256,256,e,i,l),c=new MM(o,r,256,256,a,s),[2,new BM(c)]}}))}))}();console.log("Handpose model loaded."),setInterval((()=>{n(t)}),100)})(),k.createElement("div",{className:"App"},k.createElement("header",{className:"App-header"},k.createElement(VM(),{ref:t,style:{position:"absolute",bottom:0,right:0,textAlign:"center",zindex:9,width:250,height:188,transform:"scaleX(-1)"}}),k.createElement("canvas",{ref:e,style:{position:"absolute",bottom:0,right:0,textAlign:"center",zindex:9,width:250,height:188,transform:"scaleX(-1)"}})))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));I.render(k.createElement(k.StrictMode,null,k.createElement(JM,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((t=>{t.unregister()})).catch((t=>{console.error(t.message)}))})()})();
//# sourceMappingURL=main.9943907f.js.map